


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 头文件
#include <Windows.h>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
#pragma comment(linker, "/EXPORT:audio_resample=_AheadLib_audio_resample,@1")
#pragma comment(linker, "/EXPORT:audio_resample_close=_AheadLib_audio_resample_close,@2")
#pragma comment(linker, "/EXPORT:av_abuffersink_params_alloc=_AheadLib_av_abuffersink_params_alloc,@3")
#pragma comment(linker, "/EXPORT:av_add_i=_AheadLib_av_add_i,@4")
#pragma comment(linker, "/EXPORT:av_add_index_entry=_AheadLib_av_add_index_entry,@5")
#pragma comment(linker, "/EXPORT:av_add_q=_AheadLib_av_add_q,@6")
#pragma comment(linker, "/EXPORT:av_add_stable=_AheadLib_av_add_stable,@7")
#pragma comment(linker, "/EXPORT:av_adler32_update=_AheadLib_av_adler32_update,@8")
#pragma comment(linker, "/EXPORT:av_aes_alloc=_AheadLib_av_aes_alloc,@9")
#pragma comment(linker, "/EXPORT:av_aes_crypt=_AheadLib_av_aes_crypt,@10")
#pragma comment(linker, "/EXPORT:av_aes_ctr_alloc=_AheadLib_av_aes_ctr_alloc,@11")
#pragma comment(linker, "/EXPORT:av_aes_ctr_crypt=_AheadLib_av_aes_ctr_crypt,@12")
#pragma comment(linker, "/EXPORT:av_aes_ctr_free=_AheadLib_av_aes_ctr_free,@13")
#pragma comment(linker, "/EXPORT:av_aes_ctr_get_iv=_AheadLib_av_aes_ctr_get_iv,@14")
#pragma comment(linker, "/EXPORT:av_aes_ctr_increment_iv=_AheadLib_av_aes_ctr_increment_iv,@15")
#pragma comment(linker, "/EXPORT:av_aes_ctr_init=_AheadLib_av_aes_ctr_init,@16")
#pragma comment(linker, "/EXPORT:av_aes_ctr_set_iv=_AheadLib_av_aes_ctr_set_iv,@17")
#pragma comment(linker, "/EXPORT:av_aes_ctr_set_random_iv=_AheadLib_av_aes_ctr_set_random_iv,@18")
#pragma comment(linker, "/EXPORT:av_aes_init=_AheadLib_av_aes_init,@19")
#pragma comment(linker, "/EXPORT:av_append_packet=_AheadLib_av_append_packet,@20")
#pragma comment(linker, "/EXPORT:av_append_path_component=_AheadLib_av_append_path_component,@21")
#pragma comment(linker, "/EXPORT:av_apply_bitstream_filters=_AheadLib_av_apply_bitstream_filters,@22")
#pragma comment(linker, "/EXPORT:av_asprintf=_AheadLib_av_asprintf,@23")
#pragma comment(linker, "/EXPORT:av_assert0_fpu=_AheadLib_av_assert0_fpu,@24")
#pragma comment(linker, "/EXPORT:av_audio_convert=_AheadLib_av_audio_convert,@25")
#pragma comment(linker, "/EXPORT:av_audio_convert_alloc=_AheadLib_av_audio_convert_alloc,@26")
#pragma comment(linker, "/EXPORT:av_audio_convert_free=_AheadLib_av_audio_convert_free,@27")
#pragma comment(linker, "/EXPORT:av_audio_fifo_alloc=_AheadLib_av_audio_fifo_alloc,@28")
#pragma comment(linker, "/EXPORT:av_audio_fifo_drain=_AheadLib_av_audio_fifo_drain,@29")
#pragma comment(linker, "/EXPORT:av_audio_fifo_free=_AheadLib_av_audio_fifo_free,@30")
#pragma comment(linker, "/EXPORT:av_audio_fifo_peek=_AheadLib_av_audio_fifo_peek,@31")
#pragma comment(linker, "/EXPORT:av_audio_fifo_peek_at=_AheadLib_av_audio_fifo_peek_at,@32")
#pragma comment(linker, "/EXPORT:av_audio_fifo_read=_AheadLib_av_audio_fifo_read,@33")
#pragma comment(linker, "/EXPORT:av_audio_fifo_realloc=_AheadLib_av_audio_fifo_realloc,@34")
#pragma comment(linker, "/EXPORT:av_audio_fifo_reset=_AheadLib_av_audio_fifo_reset,@35")
#pragma comment(linker, "/EXPORT:av_audio_fifo_size=_AheadLib_av_audio_fifo_size,@36")
#pragma comment(linker, "/EXPORT:av_audio_fifo_space=_AheadLib_av_audio_fifo_space,@37")
#pragma comment(linker, "/EXPORT:av_audio_fifo_write=_AheadLib_av_audio_fifo_write,@38")
#pragma comment(linker, "/EXPORT:av_audio_resample_init=_AheadLib_av_audio_resample_init,@39")
#pragma comment(linker, "/EXPORT:av_base64_decode=_AheadLib_av_base64_decode,@40")
#pragma comment(linker, "/EXPORT:av_base64_encode=_AheadLib_av_base64_encode,@41")
#pragma comment(linker, "/EXPORT:av_basename=_AheadLib_av_basename,@42")
#pragma comment(linker, "/EXPORT:av_bitstream_filter_close=_AheadLib_av_bitstream_filter_close,@43")
#pragma comment(linker, "/EXPORT:av_bitstream_filter_filter=_AheadLib_av_bitstream_filter_filter,@44")
#pragma comment(linker, "/EXPORT:av_bitstream_filter_init=_AheadLib_av_bitstream_filter_init,@45")
#pragma comment(linker, "/EXPORT:av_bitstream_filter_next=_AheadLib_av_bitstream_filter_next,@46")
#pragma comment(linker, "/EXPORT:av_blowfish_alloc=_AheadLib_av_blowfish_alloc,@47")
#pragma comment(linker, "/EXPORT:av_blowfish_crypt=_AheadLib_av_blowfish_crypt,@48")
#pragma comment(linker, "/EXPORT:av_blowfish_crypt_ecb=_AheadLib_av_blowfish_crypt_ecb,@49")
#pragma comment(linker, "/EXPORT:av_blowfish_init=_AheadLib_av_blowfish_init,@50")
#pragma comment(linker, "/EXPORT:av_bmg_get=_AheadLib_av_bmg_get,@51")
#pragma comment(linker, "/EXPORT:av_bprint_append_data=_AheadLib_av_bprint_append_data,@52")
#pragma comment(linker, "/EXPORT:av_bprint_channel_layout=_AheadLib_av_bprint_channel_layout,@53")
#pragma comment(linker, "/EXPORT:av_bprint_chars=_AheadLib_av_bprint_chars,@54")
#pragma comment(linker, "/EXPORT:av_bprint_clear=_AheadLib_av_bprint_clear,@55")
#pragma comment(linker, "/EXPORT:av_bprint_escape=_AheadLib_av_bprint_escape,@56")
#pragma comment(linker, "/EXPORT:av_bprint_finalize=_AheadLib_av_bprint_finalize,@57")
#pragma comment(linker, "/EXPORT:av_bprint_get_buffer=_AheadLib_av_bprint_get_buffer,@58")
#pragma comment(linker, "/EXPORT:av_bprint_init=_AheadLib_av_bprint_init,@59")
#pragma comment(linker, "/EXPORT:av_bprint_init_for_buffer=_AheadLib_av_bprint_init_for_buffer,@60")
#pragma comment(linker, "/EXPORT:av_bprint_strftime=_AheadLib_av_bprint_strftime,@61")
#pragma comment(linker, "/EXPORT:av_bprintf=_AheadLib_av_bprintf,@62")
#pragma comment(linker, "/EXPORT:av_bsf_alloc=_AheadLib_av_bsf_alloc,@63")
#pragma comment(linker, "/EXPORT:av_bsf_free=_AheadLib_av_bsf_free,@64")
#pragma comment(linker, "/EXPORT:av_bsf_get_by_name=_AheadLib_av_bsf_get_by_name,@65")
#pragma comment(linker, "/EXPORT:av_bsf_get_class=_AheadLib_av_bsf_get_class,@66")
#pragma comment(linker, "/EXPORT:av_bsf_get_null_filter=_AheadLib_av_bsf_get_null_filter,@67")
#pragma comment(linker, "/EXPORT:av_bsf_init=_AheadLib_av_bsf_init,@68")
#pragma comment(linker, "/EXPORT:av_bsf_list_alloc=_AheadLib_av_bsf_list_alloc,@69")
#pragma comment(linker, "/EXPORT:av_bsf_list_append=_AheadLib_av_bsf_list_append,@70")
#pragma comment(linker, "/EXPORT:av_bsf_list_append2=_AheadLib_av_bsf_list_append2,@71")
#pragma comment(linker, "/EXPORT:av_bsf_list_finalize=_AheadLib_av_bsf_list_finalize,@72")
#pragma comment(linker, "/EXPORT:av_bsf_list_free=_AheadLib_av_bsf_list_free,@73")
#pragma comment(linker, "/EXPORT:av_bsf_list_parse_str=_AheadLib_av_bsf_list_parse_str,@74")
#pragma comment(linker, "/EXPORT:av_bsf_next=_AheadLib_av_bsf_next,@75")
#pragma comment(linker, "/EXPORT:av_bsf_receive_packet=_AheadLib_av_bsf_receive_packet,@76")
#pragma comment(linker, "/EXPORT:av_bsf_send_packet=_AheadLib_av_bsf_send_packet,@77")
#pragma comment(linker, "/EXPORT:av_buffer_alloc=_AheadLib_av_buffer_alloc,@78")
#pragma comment(linker, "/EXPORT:av_buffer_allocz=_AheadLib_av_buffer_allocz,@79")
#pragma comment(linker, "/EXPORT:av_buffer_create=_AheadLib_av_buffer_create,@80")
#pragma comment(linker, "/EXPORT:av_buffer_default_free=_AheadLib_av_buffer_default_free,@81")
#pragma comment(linker, "/EXPORT:av_buffer_get_opaque=_AheadLib_av_buffer_get_opaque,@82")
#pragma comment(linker, "/EXPORT:av_buffer_get_ref_count=_AheadLib_av_buffer_get_ref_count,@83")
#pragma comment(linker, "/EXPORT:av_buffer_is_writable=_AheadLib_av_buffer_is_writable,@84")
#pragma comment(linker, "/EXPORT:av_buffer_make_writable=_AheadLib_av_buffer_make_writable,@85")
#pragma comment(linker, "/EXPORT:av_buffer_pool_get=_AheadLib_av_buffer_pool_get,@86")
#pragma comment(linker, "/EXPORT:av_buffer_pool_init=_AheadLib_av_buffer_pool_init,@87")
#pragma comment(linker, "/EXPORT:av_buffer_pool_init2=_AheadLib_av_buffer_pool_init2,@88")
#pragma comment(linker, "/EXPORT:av_buffer_pool_uninit=_AheadLib_av_buffer_pool_uninit,@89")
#pragma comment(linker, "/EXPORT:av_buffer_realloc=_AheadLib_av_buffer_realloc,@90")
#pragma comment(linker, "/EXPORT:av_buffer_ref=_AheadLib_av_buffer_ref,@91")
#pragma comment(linker, "/EXPORT:av_buffer_unref=_AheadLib_av_buffer_unref,@92")
#pragma comment(linker, "/EXPORT:av_buffersink_get_frame=_AheadLib_av_buffersink_get_frame,@93")
#pragma comment(linker, "/EXPORT:av_buffersink_get_frame_flags=_AheadLib_av_buffersink_get_frame_flags,@94")
#pragma comment(linker, "/EXPORT:av_buffersink_get_frame_rate=_AheadLib_av_buffersink_get_frame_rate,@95")
#pragma comment(linker, "/EXPORT:av_buffersink_get_samples=_AheadLib_av_buffersink_get_samples,@96")
#pragma comment(linker, "/EXPORT:av_buffersink_params_alloc=_AheadLib_av_buffersink_params_alloc,@97")
#pragma comment(linker, "/EXPORT:av_buffersink_set_frame_size=_AheadLib_av_buffersink_set_frame_size,@98")
#pragma comment(linker, "/EXPORT:av_buffersrc_add_frame=_AheadLib_av_buffersrc_add_frame,@99")
#pragma comment(linker, "/EXPORT:av_buffersrc_add_frame_flags=_AheadLib_av_buffersrc_add_frame_flags,@100")
#pragma comment(linker, "/EXPORT:av_buffersrc_get_nb_failed_requests=_AheadLib_av_buffersrc_get_nb_failed_requests,@101")
#pragma comment(linker, "/EXPORT:av_buffersrc_parameters_alloc=_AheadLib_av_buffersrc_parameters_alloc,@102")
#pragma comment(linker, "/EXPORT:av_buffersrc_parameters_set=_AheadLib_av_buffersrc_parameters_set,@103")
#pragma comment(linker, "/EXPORT:av_buffersrc_write_frame=_AheadLib_av_buffersrc_write_frame,@104")
#pragma comment(linker, "/EXPORT:av_calloc=_AheadLib_av_calloc,@105")
#pragma comment(linker, "/EXPORT:av_camellia_alloc=_AheadLib_av_camellia_alloc,@106")
#pragma comment(linker, "/EXPORT:av_camellia_crypt=_AheadLib_av_camellia_crypt,@107")
#pragma comment(linker, "/EXPORT:av_camellia_init=_AheadLib_av_camellia_init,@108")
#pragma comment(linker, "/EXPORT:av_cast5_alloc=_AheadLib_av_cast5_alloc,@109")
#pragma comment(linker, "/EXPORT:av_cast5_crypt=_AheadLib_av_cast5_crypt,@110")
#pragma comment(linker, "/EXPORT:av_cast5_crypt2=_AheadLib_av_cast5_crypt2,@111")
#pragma comment(linker, "/EXPORT:av_cast5_init=_AheadLib_av_cast5_init,@112")
#pragma comment(linker, "/EXPORT:av_channel_layout_extract_channel=_AheadLib_av_channel_layout_extract_channel,@113")
#pragma comment(linker, "/EXPORT:av_chroma_location_name=_AheadLib_av_chroma_location_name,@114")
#pragma comment(linker, "/EXPORT:av_cmp_i=_AheadLib_av_cmp_i,@115")
#pragma comment(linker, "/EXPORT:av_codec_get_chroma_intra_matrix=_AheadLib_av_codec_get_chroma_intra_matrix,@116")
#pragma comment(linker, "/EXPORT:av_codec_get_codec_descriptor=_AheadLib_av_codec_get_codec_descriptor,@117")
#pragma comment(linker, "/EXPORT:av_codec_get_codec_properties=_AheadLib_av_codec_get_codec_properties,@118")
#pragma comment(linker, "/EXPORT:av_codec_get_id=_AheadLib_av_codec_get_id,@119")
#pragma comment(linker, "/EXPORT:av_codec_get_lowres=_AheadLib_av_codec_get_lowres,@120")
#pragma comment(linker, "/EXPORT:av_codec_get_max_lowres=_AheadLib_av_codec_get_max_lowres,@121")
#pragma comment(linker, "/EXPORT:av_codec_get_pkt_timebase=_AheadLib_av_codec_get_pkt_timebase,@122")
#pragma comment(linker, "/EXPORT:av_codec_get_seek_preroll=_AheadLib_av_codec_get_seek_preroll,@123")
#pragma comment(linker, "/EXPORT:av_codec_get_tag=_AheadLib_av_codec_get_tag,@124")
#pragma comment(linker, "/EXPORT:av_codec_get_tag2=_AheadLib_av_codec_get_tag2,@125")
#pragma comment(linker, "/EXPORT:av_codec_is_decoder=_AheadLib_av_codec_is_decoder,@126")
#pragma comment(linker, "/EXPORT:av_codec_is_encoder=_AheadLib_av_codec_is_encoder,@127")
#pragma comment(linker, "/EXPORT:av_codec_next=_AheadLib_av_codec_next,@128")
#pragma comment(linker, "/EXPORT:av_codec_set_chroma_intra_matrix=_AheadLib_av_codec_set_chroma_intra_matrix,@129")
#pragma comment(linker, "/EXPORT:av_codec_set_codec_descriptor=_AheadLib_av_codec_set_codec_descriptor,@130")
#pragma comment(linker, "/EXPORT:av_codec_set_lowres=_AheadLib_av_codec_set_lowres,@131")
#pragma comment(linker, "/EXPORT:av_codec_set_pkt_timebase=_AheadLib_av_codec_set_pkt_timebase,@132")
#pragma comment(linker, "/EXPORT:av_codec_set_seek_preroll=_AheadLib_av_codec_set_seek_preroll,@133")
#pragma comment(linker, "/EXPORT:av_color_primaries_name=_AheadLib_av_color_primaries_name,@134")
#pragma comment(linker, "/EXPORT:av_color_range_name=_AheadLib_av_color_range_name,@135")
#pragma comment(linker, "/EXPORT:av_color_space_name=_AheadLib_av_color_space_name,@136")
#pragma comment(linker, "/EXPORT:av_color_transfer_name=_AheadLib_av_color_transfer_name,@137")
#pragma comment(linker, "/EXPORT:av_compare_mod=_AheadLib_av_compare_mod,@138")
#pragma comment(linker, "/EXPORT:av_compare_ts=_AheadLib_av_compare_ts,@139")
#pragma comment(linker, "/EXPORT:av_convert_lang_to=_AheadLib_av_convert_lang_to,@140")
#pragma comment(linker, "/EXPORT:av_copy_packet=_AheadLib_av_copy_packet,@141")
#pragma comment(linker, "/EXPORT:av_copy_packet_side_data=_AheadLib_av_copy_packet_side_data,@142")
#pragma comment(linker, "/EXPORT:av_cpb_properties_alloc=_AheadLib_av_cpb_properties_alloc,@143")
#pragma comment(linker, "/EXPORT:av_cpu_count=_AheadLib_av_cpu_count,@144")
#pragma comment(linker, "/EXPORT:av_crc=_AheadLib_av_crc,@145")
#pragma comment(linker, "/EXPORT:av_crc_get_table=_AheadLib_av_crc_get_table,@146")
#pragma comment(linker, "/EXPORT:av_crc_init=_AheadLib_av_crc_init,@147")
#pragma comment(linker, "/EXPORT:av_d2q=_AheadLib_av_d2q,@148")
#pragma comment(linker, "/EXPORT:av_d2str=_AheadLib_av_d2str,@149")
#pragma comment(linker, "/EXPORT:av_d3d11va_alloc_context=_AheadLib_av_d3d11va_alloc_context,@150")
#pragma comment(linker, "/EXPORT:av_default_get_category=_AheadLib_av_default_get_category,@151")
#pragma comment(linker, "/EXPORT:av_default_item_name=_AheadLib_av_default_item_name,@152")
#pragma comment(linker, "/EXPORT:av_demuxer_open=_AheadLib_av_demuxer_open,@153")
#pragma comment(linker, "/EXPORT:av_des_alloc=_AheadLib_av_des_alloc,@154")
#pragma comment(linker, "/EXPORT:av_des_crypt=_AheadLib_av_des_crypt,@155")
#pragma comment(linker, "/EXPORT:av_des_init=_AheadLib_av_des_init,@156")
#pragma comment(linker, "/EXPORT:av_des_mac=_AheadLib_av_des_mac,@157")
#pragma comment(linker, "/EXPORT:av_dict_copy=_AheadLib_av_dict_copy,@160")
#pragma comment(linker, "/EXPORT:av_dict_count=_AheadLib_av_dict_count,@161")
#pragma comment(linker, "/EXPORT:av_dict_free=_AheadLib_av_dict_free,@162")
#pragma comment(linker, "/EXPORT:av_dict_get=_AheadLib_av_dict_get,@163")
#pragma comment(linker, "/EXPORT:av_dict_get_string=_AheadLib_av_dict_get_string,@164")
#pragma comment(linker, "/EXPORT:av_dict_parse_string=_AheadLib_av_dict_parse_string,@165")
#pragma comment(linker, "/EXPORT:av_dict_set=_AheadLib_av_dict_set,@166")
#pragma comment(linker, "/EXPORT:av_dict_set_int=_AheadLib_av_dict_set_int,@167")
#pragma comment(linker, "/EXPORT:av_dirac_parse_sequence_header=_AheadLib_av_dirac_parse_sequence_header,@168")
#pragma comment(linker, "/EXPORT:av_dirname=_AheadLib_av_dirname,@169")
#pragma comment(linker, "/EXPORT:av_display_matrix_flip=_AheadLib_av_display_matrix_flip,@170")
#pragma comment(linker, "/EXPORT:av_display_rotation_get=_AheadLib_av_display_rotation_get,@171")
#pragma comment(linker, "/EXPORT:av_display_rotation_set=_AheadLib_av_display_rotation_set,@172")
#pragma comment(linker, "/EXPORT:av_div_i=_AheadLib_av_div_i,@173")
#pragma comment(linker, "/EXPORT:av_div_q=_AheadLib_av_div_q,@174")
#pragma comment(linker, "/EXPORT:av_downmix_info_update_side_data=_AheadLib_av_downmix_info_update_side_data,@175")
#pragma comment(linker, "/EXPORT:av_dump_format=_AheadLib_av_dump_format,@176")
#pragma comment(linker, "/EXPORT:av_dup_packet=_AheadLib_av_dup_packet,@177")
#pragma comment(linker, "/EXPORT:av_dv_codec_profile=_AheadLib_av_dv_codec_profile,@178")
#pragma comment(linker, "/EXPORT:av_dv_codec_profile2=_AheadLib_av_dv_codec_profile2,@179")
#pragma comment(linker, "/EXPORT:av_dv_frame_profile=_AheadLib_av_dv_frame_profile,@180")
#pragma comment(linker, "/EXPORT:av_dynarray2_add=_AheadLib_av_dynarray2_add,@181")
#pragma comment(linker, "/EXPORT:av_dynarray_add=_AheadLib_av_dynarray_add,@182")
#pragma comment(linker, "/EXPORT:av_dynarray_add_nofree=_AheadLib_av_dynarray_add_nofree,@183")
#pragma comment(linker, "/EXPORT:av_escape=_AheadLib_av_escape,@184")
#pragma comment(linker, "/EXPORT:av_expr_eval=_AheadLib_av_expr_eval,@185")
#pragma comment(linker, "/EXPORT:av_expr_free=_AheadLib_av_expr_free,@186")
#pragma comment(linker, "/EXPORT:av_expr_parse=_AheadLib_av_expr_parse,@187")
#pragma comment(linker, "/EXPORT:av_expr_parse_and_eval=_AheadLib_av_expr_parse_and_eval,@188")
#pragma comment(linker, "/EXPORT:av_fast_malloc=_AheadLib_av_fast_malloc,@189")
#pragma comment(linker, "/EXPORT:av_fast_mallocz=_AheadLib_av_fast_mallocz,@190")
#pragma comment(linker, "/EXPORT:av_fast_padded_malloc=_AheadLib_av_fast_padded_malloc,@191")
#pragma comment(linker, "/EXPORT:av_fast_padded_mallocz=_AheadLib_av_fast_padded_mallocz,@192")
#pragma comment(linker, "/EXPORT:av_fast_realloc=_AheadLib_av_fast_realloc,@193")
#pragma comment(linker, "/EXPORT:av_fft_calc=_AheadLib_av_fft_calc,@194")
#pragma comment(linker, "/EXPORT:av_fft_end=_AheadLib_av_fft_end,@195")
#pragma comment(linker, "/EXPORT:av_fft_init=_AheadLib_av_fft_init,@196")
#pragma comment(linker, "/EXPORT:av_fft_permute=_AheadLib_av_fft_permute,@197")
#pragma comment(linker, "/EXPORT:av_fifo_alloc=_AheadLib_av_fifo_alloc,@198")
#pragma comment(linker, "/EXPORT:av_fifo_alloc_array=_AheadLib_av_fifo_alloc_array,@199")
#pragma comment(linker, "/EXPORT:av_fifo_drain=_AheadLib_av_fifo_drain,@200")
#pragma comment(linker, "/EXPORT:av_fifo_free=_AheadLib_av_fifo_free,@201")
#pragma comment(linker, "/EXPORT:av_fifo_freep=_AheadLib_av_fifo_freep,@202")
#pragma comment(linker, "/EXPORT:av_fifo_generic_peek=_AheadLib_av_fifo_generic_peek,@203")
#pragma comment(linker, "/EXPORT:av_fifo_generic_peek_at=_AheadLib_av_fifo_generic_peek_at,@204")
#pragma comment(linker, "/EXPORT:av_fifo_generic_read=_AheadLib_av_fifo_generic_read,@205")
#pragma comment(linker, "/EXPORT:av_fifo_generic_write=_AheadLib_av_fifo_generic_write,@206")
#pragma comment(linker, "/EXPORT:av_fifo_grow=_AheadLib_av_fifo_grow,@207")
#pragma comment(linker, "/EXPORT:av_fifo_realloc2=_AheadLib_av_fifo_realloc2,@208")
#pragma comment(linker, "/EXPORT:av_fifo_reset=_AheadLib_av_fifo_reset,@209")
#pragma comment(linker, "/EXPORT:av_fifo_size=_AheadLib_av_fifo_size,@210")
#pragma comment(linker, "/EXPORT:av_fifo_space=_AheadLib_av_fifo_space,@211")
#pragma comment(linker, "/EXPORT:av_file_map=_AheadLib_av_file_map,@212")
#pragma comment(linker, "/EXPORT:av_file_unmap=_AheadLib_av_file_unmap,@213")
#pragma comment(linker, "/EXPORT:av_filename_number_test=_AheadLib_av_filename_number_test,@214")
#pragma comment(linker, "/EXPORT:av_filter_next=_AheadLib_av_filter_next,@216")
#pragma comment(linker, "/EXPORT:av_find_best_pix_fmt_of_2=_AheadLib_av_find_best_pix_fmt_of_2,@217")
#pragma comment(linker, "/EXPORT:av_find_best_stream=_AheadLib_av_find_best_stream,@218")
#pragma comment(linker, "/EXPORT:av_find_default_stream_index=_AheadLib_av_find_default_stream_index,@219")
#pragma comment(linker, "/EXPORT:av_find_info_tag=_AheadLib_av_find_info_tag,@220")
#pragma comment(linker, "/EXPORT:av_find_input_format=_AheadLib_av_find_input_format,@221")
#pragma comment(linker, "/EXPORT:av_find_nearest_q_idx=_AheadLib_av_find_nearest_q_idx,@222")
#pragma comment(linker, "/EXPORT:av_find_program_from_stream=_AheadLib_av_find_program_from_stream,@223")
#pragma comment(linker, "/EXPORT:av_fmt_ctx_get_duration_estimation_method=_AheadLib_av_fmt_ctx_get_duration_estimation_method,@224")
#pragma comment(linker, "/EXPORT:av_fopen_utf8=_AheadLib_av_fopen_utf8,@225")
#pragma comment(linker, "/EXPORT:av_force_cpu_flags=_AheadLib_av_force_cpu_flags,@226")
#pragma comment(linker, "/EXPORT:av_format_get_audio_codec=_AheadLib_av_format_get_audio_codec,@227")
#pragma comment(linker, "/EXPORT:av_format_get_control_message_cb=_AheadLib_av_format_get_control_message_cb,@228")
#pragma comment(linker, "/EXPORT:av_format_get_data_codec=_AheadLib_av_format_get_data_codec,@229")
#pragma comment(linker, "/EXPORT:av_format_get_metadata_header_padding=_AheadLib_av_format_get_metadata_header_padding,@230")
#pragma comment(linker, "/EXPORT:av_format_get_opaque=_AheadLib_av_format_get_opaque,@231")
#pragma comment(linker, "/EXPORT:av_format_get_open_cb=_AheadLib_av_format_get_open_cb,@232")
#pragma comment(linker, "/EXPORT:av_format_get_probe_score=_AheadLib_av_format_get_probe_score,@233")
#pragma comment(linker, "/EXPORT:av_format_get_subtitle_codec=_AheadLib_av_format_get_subtitle_codec,@234")
#pragma comment(linker, "/EXPORT:av_format_get_video_codec=_AheadLib_av_format_get_video_codec,@235")
#pragma comment(linker, "/EXPORT:av_format_inject_global_side_data=_AheadLib_av_format_inject_global_side_data,@236")
#pragma comment(linker, "/EXPORT:av_format_set_audio_codec=_AheadLib_av_format_set_audio_codec,@237")
#pragma comment(linker, "/EXPORT:av_format_set_control_message_cb=_AheadLib_av_format_set_control_message_cb,@238")
#pragma comment(linker, "/EXPORT:av_format_set_data_codec=_AheadLib_av_format_set_data_codec,@239")
#pragma comment(linker, "/EXPORT:av_format_set_metadata_header_padding=_AheadLib_av_format_set_metadata_header_padding,@240")
#pragma comment(linker, "/EXPORT:av_format_set_opaque=_AheadLib_av_format_set_opaque,@241")
#pragma comment(linker, "/EXPORT:av_format_set_open_cb=_AheadLib_av_format_set_open_cb,@242")
#pragma comment(linker, "/EXPORT:av_format_set_subtitle_codec=_AheadLib_av_format_set_subtitle_codec,@243")
#pragma comment(linker, "/EXPORT:av_format_set_video_codec=_AheadLib_av_format_set_video_codec,@244")
#pragma comment(linker, "/EXPORT:av_frame_alloc=_AheadLib_av_frame_alloc,@245")
#pragma comment(linker, "/EXPORT:av_frame_clone=_AheadLib_av_frame_clone,@246")
#pragma comment(linker, "/EXPORT:av_frame_copy=_AheadLib_av_frame_copy,@247")
#pragma comment(linker, "/EXPORT:av_frame_copy_props=_AheadLib_av_frame_copy_props,@248")
#pragma comment(linker, "/EXPORT:av_frame_free=_AheadLib_av_frame_free,@249")
#pragma comment(linker, "/EXPORT:av_frame_get_best_effort_timestamp=_AheadLib_av_frame_get_best_effort_timestamp,@250")
#pragma comment(linker, "/EXPORT:av_frame_get_buffer=_AheadLib_av_frame_get_buffer,@251")
#pragma comment(linker, "/EXPORT:av_frame_get_channel_layout=_AheadLib_av_frame_get_channel_layout,@252")
#pragma comment(linker, "/EXPORT:av_frame_get_channels=_AheadLib_av_frame_get_channels,@253")
#pragma comment(linker, "/EXPORT:av_frame_get_color_range=_AheadLib_av_frame_get_color_range,@254")
#pragma comment(linker, "/EXPORT:av_frame_get_colorspace=_AheadLib_av_frame_get_colorspace,@255")
#pragma comment(linker, "/EXPORT:av_frame_get_decode_error_flags=_AheadLib_av_frame_get_decode_error_flags,@256")
#pragma comment(linker, "/EXPORT:av_frame_get_metadata=_AheadLib_av_frame_get_metadata,@257")
#pragma comment(linker, "/EXPORT:av_frame_get_pkt_duration=_AheadLib_av_frame_get_pkt_duration,@258")
#pragma comment(linker, "/EXPORT:av_frame_get_pkt_pos=_AheadLib_av_frame_get_pkt_pos,@259")
#pragma comment(linker, "/EXPORT:av_frame_get_pkt_size=_AheadLib_av_frame_get_pkt_size,@260")
#pragma comment(linker, "/EXPORT:av_frame_get_plane_buffer=_AheadLib_av_frame_get_plane_buffer,@261")
#pragma comment(linker, "/EXPORT:av_frame_get_qp_table=_AheadLib_av_frame_get_qp_table,@262")
#pragma comment(linker, "/EXPORT:av_frame_get_sample_rate=_AheadLib_av_frame_get_sample_rate,@263")
#pragma comment(linker, "/EXPORT:av_frame_get_side_data=_AheadLib_av_frame_get_side_data,@264")
#pragma comment(linker, "/EXPORT:av_frame_is_writable=_AheadLib_av_frame_is_writable,@265")
#pragma comment(linker, "/EXPORT:av_frame_make_writable=_AheadLib_av_frame_make_writable,@266")
#pragma comment(linker, "/EXPORT:av_frame_move_ref=_AheadLib_av_frame_move_ref,@267")
#pragma comment(linker, "/EXPORT:av_frame_new_side_data=_AheadLib_av_frame_new_side_data,@268")
#pragma comment(linker, "/EXPORT:av_frame_ref=_AheadLib_av_frame_ref,@269")
#pragma comment(linker, "/EXPORT:av_frame_remove_side_data=_AheadLib_av_frame_remove_side_data,@270")
#pragma comment(linker, "/EXPORT:av_frame_set_best_effort_timestamp=_AheadLib_av_frame_set_best_effort_timestamp,@271")
#pragma comment(linker, "/EXPORT:av_frame_set_channel_layout=_AheadLib_av_frame_set_channel_layout,@272")
#pragma comment(linker, "/EXPORT:av_frame_set_channels=_AheadLib_av_frame_set_channels,@273")
#pragma comment(linker, "/EXPORT:av_frame_set_color_range=_AheadLib_av_frame_set_color_range,@274")
#pragma comment(linker, "/EXPORT:av_frame_set_colorspace=_AheadLib_av_frame_set_colorspace,@275")
#pragma comment(linker, "/EXPORT:av_frame_set_decode_error_flags=_AheadLib_av_frame_set_decode_error_flags,@276")
#pragma comment(linker, "/EXPORT:av_frame_set_metadata=_AheadLib_av_frame_set_metadata,@277")
#pragma comment(linker, "/EXPORT:av_frame_set_pkt_duration=_AheadLib_av_frame_set_pkt_duration,@278")
#pragma comment(linker, "/EXPORT:av_frame_set_pkt_pos=_AheadLib_av_frame_set_pkt_pos,@279")
#pragma comment(linker, "/EXPORT:av_frame_set_pkt_size=_AheadLib_av_frame_set_pkt_size,@280")
#pragma comment(linker, "/EXPORT:av_frame_set_qp_table=_AheadLib_av_frame_set_qp_table,@281")
#pragma comment(linker, "/EXPORT:av_frame_set_sample_rate=_AheadLib_av_frame_set_sample_rate,@282")
#pragma comment(linker, "/EXPORT:av_frame_side_data_name=_AheadLib_av_frame_side_data_name,@283")
#pragma comment(linker, "/EXPORT:av_frame_unref=_AheadLib_av_frame_unref,@284")
#pragma comment(linker, "/EXPORT:av_free=_AheadLib_av_free,@285")
#pragma comment(linker, "/EXPORT:av_free_packet=_AheadLib_av_free_packet,@286")
#pragma comment(linker, "/EXPORT:av_freep=_AheadLib_av_freep,@287")
#pragma comment(linker, "/EXPORT:av_gcd=_AheadLib_av_gcd,@288")
#pragma comment(linker, "/EXPORT:av_get_alt_sample_fmt=_AheadLib_av_get_alt_sample_fmt,@289")
#pragma comment(linker, "/EXPORT:av_get_audio_frame_duration=_AheadLib_av_get_audio_frame_duration,@290")
#pragma comment(linker, "/EXPORT:av_get_audio_frame_duration2=_AheadLib_av_get_audio_frame_duration2,@291")
#pragma comment(linker, "/EXPORT:av_get_bits_per_pixel=_AheadLib_av_get_bits_per_pixel,@292")
#pragma comment(linker, "/EXPORT:av_get_bits_per_sample=_AheadLib_av_get_bits_per_sample,@293")
#pragma comment(linker, "/EXPORT:av_get_bytes_per_sample=_AheadLib_av_get_bytes_per_sample,@294")
#pragma comment(linker, "/EXPORT:av_get_channel_description=_AheadLib_av_get_channel_description,@295")
#pragma comment(linker, "/EXPORT:av_get_channel_layout=_AheadLib_av_get_channel_layout,@296")
#pragma comment(linker, "/EXPORT:av_get_channel_layout_channel_index=_AheadLib_av_get_channel_layout_channel_index,@297")
#pragma comment(linker, "/EXPORT:av_get_channel_layout_nb_channels=_AheadLib_av_get_channel_layout_nb_channels,@298")
#pragma comment(linker, "/EXPORT:av_get_channel_layout_string=_AheadLib_av_get_channel_layout_string,@299")
#pragma comment(linker, "/EXPORT:av_get_channel_name=_AheadLib_av_get_channel_name,@300")
#pragma comment(linker, "/EXPORT:av_get_codec_tag_string=_AheadLib_av_get_codec_tag_string,@301")
#pragma comment(linker, "/EXPORT:av_get_colorspace_name=_AheadLib_av_get_colorspace_name,@302")
#pragma comment(linker, "/EXPORT:av_get_cpu_flags=_AheadLib_av_get_cpu_flags,@303")
#pragma comment(linker, "/EXPORT:av_get_default_channel_layout=_AheadLib_av_get_default_channel_layout,@304")
#pragma comment(linker, "/EXPORT:av_get_exact_bits_per_sample=_AheadLib_av_get_exact_bits_per_sample,@305")
#pragma comment(linker, "/EXPORT:av_get_frame_filename=_AheadLib_av_get_frame_filename,@306")
#pragma comment(linker, "/EXPORT:av_get_frame_filename2=_AheadLib_av_get_frame_filename2,@307")
#pragma comment(linker, "/EXPORT:av_get_known_color_name=_AheadLib_av_get_known_color_name,@308")
#pragma comment(linker, "/EXPORT:av_get_media_type_string=_AheadLib_av_get_media_type_string,@309")
#pragma comment(linker, "/EXPORT:av_get_output_timestamp=_AheadLib_av_get_output_timestamp,@310")
#pragma comment(linker, "/EXPORT:av_get_packed_sample_fmt=_AheadLib_av_get_packed_sample_fmt,@311")
#pragma comment(linker, "/EXPORT:av_get_packet=_AheadLib_av_get_packet,@312")
#pragma comment(linker, "/EXPORT:av_get_padded_bits_per_pixel=_AheadLib_av_get_padded_bits_per_pixel,@313")
#pragma comment(linker, "/EXPORT:av_get_pcm_codec=_AheadLib_av_get_pcm_codec,@314")
#pragma comment(linker, "/EXPORT:av_get_picture_type_char=_AheadLib_av_get_picture_type_char,@315")
#pragma comment(linker, "/EXPORT:av_get_pix_fmt=_AheadLib_av_get_pix_fmt,@316")
#pragma comment(linker, "/EXPORT:av_get_pix_fmt_loss=_AheadLib_av_get_pix_fmt_loss,@317")
#pragma comment(linker, "/EXPORT:av_get_pix_fmt_name=_AheadLib_av_get_pix_fmt_name,@318")
#pragma comment(linker, "/EXPORT:av_get_pix_fmt_string=_AheadLib_av_get_pix_fmt_string,@319")
#pragma comment(linker, "/EXPORT:av_get_planar_sample_fmt=_AheadLib_av_get_planar_sample_fmt,@320")
#pragma comment(linker, "/EXPORT:av_get_profile_name=_AheadLib_av_get_profile_name,@321")
#pragma comment(linker, "/EXPORT:av_get_random_seed=_AheadLib_av_get_random_seed,@322")
#pragma comment(linker, "/EXPORT:av_get_sample_fmt=_AheadLib_av_get_sample_fmt,@323")
#pragma comment(linker, "/EXPORT:av_get_sample_fmt_name=_AheadLib_av_get_sample_fmt_name,@324")
#pragma comment(linker, "/EXPORT:av_get_sample_fmt_string=_AheadLib_av_get_sample_fmt_string,@325")
#pragma comment(linker, "/EXPORT:av_get_standard_channel_layout=_AheadLib_av_get_standard_channel_layout,@326")
#pragma comment(linker, "/EXPORT:av_get_time_base_q=_AheadLib_av_get_time_base_q,@327")
#pragma comment(linker, "/EXPORT:av_get_token=_AheadLib_av_get_token,@328")
#pragma comment(linker, "/EXPORT:av_gettime=_AheadLib_av_gettime,@329")
#pragma comment(linker, "/EXPORT:av_gettime_relative=_AheadLib_av_gettime_relative,@330")
#pragma comment(linker, "/EXPORT:av_gettime_relative_is_monotonic=_AheadLib_av_gettime_relative_is_monotonic,@331")
#pragma comment(linker, "/EXPORT:av_grow_packet=_AheadLib_av_grow_packet,@332")
#pragma comment(linker, "/EXPORT:av_guess_codec=_AheadLib_av_guess_codec,@333")
#pragma comment(linker, "/EXPORT:av_guess_format=_AheadLib_av_guess_format,@334")
#pragma comment(linker, "/EXPORT:av_guess_frame_rate=_AheadLib_av_guess_frame_rate,@335")
#pragma comment(linker, "/EXPORT:av_guess_sample_aspect_ratio=_AheadLib_av_guess_sample_aspect_ratio,@336")
#pragma comment(linker, "/EXPORT:av_hash_alloc=_AheadLib_av_hash_alloc,@337")
#pragma comment(linker, "/EXPORT:av_hash_final=_AheadLib_av_hash_final,@338")
#pragma comment(linker, "/EXPORT:av_hash_final_b64=_AheadLib_av_hash_final_b64,@339")
#pragma comment(linker, "/EXPORT:av_hash_final_bin=_AheadLib_av_hash_final_bin,@340")
#pragma comment(linker, "/EXPORT:av_hash_final_hex=_AheadLib_av_hash_final_hex,@341")
#pragma comment(linker, "/EXPORT:av_hash_freep=_AheadLib_av_hash_freep,@342")
#pragma comment(linker, "/EXPORT:av_hash_get_name=_AheadLib_av_hash_get_name,@343")
#pragma comment(linker, "/EXPORT:av_hash_get_size=_AheadLib_av_hash_get_size,@344")
#pragma comment(linker, "/EXPORT:av_hash_init=_AheadLib_av_hash_init,@345")
#pragma comment(linker, "/EXPORT:av_hash_names=_AheadLib_av_hash_names,@346")
#pragma comment(linker, "/EXPORT:av_hash_update=_AheadLib_av_hash_update,@347")
#pragma comment(linker, "/EXPORT:av_hex_dump=_AheadLib_av_hex_dump,@348")
#pragma comment(linker, "/EXPORT:av_hex_dump_log=_AheadLib_av_hex_dump_log,@349")
#pragma comment(linker, "/EXPORT:av_hmac_alloc=_AheadLib_av_hmac_alloc,@350")
#pragma comment(linker, "/EXPORT:av_hmac_calc=_AheadLib_av_hmac_calc,@351")
#pragma comment(linker, "/EXPORT:av_hmac_final=_AheadLib_av_hmac_final,@352")
#pragma comment(linker, "/EXPORT:av_hmac_free=_AheadLib_av_hmac_free,@353")
#pragma comment(linker, "/EXPORT:av_hmac_init=_AheadLib_av_hmac_init,@354")
#pragma comment(linker, "/EXPORT:av_hmac_update=_AheadLib_av_hmac_update,@355")
#pragma comment(linker, "/EXPORT:av_hwaccel_next=_AheadLib_av_hwaccel_next,@356")
#pragma comment(linker, "/EXPORT:av_hwdevice_ctx_alloc=_AheadLib_av_hwdevice_ctx_alloc,@357")
#pragma comment(linker, "/EXPORT:av_hwdevice_ctx_create=_AheadLib_av_hwdevice_ctx_create,@358")
#pragma comment(linker, "/EXPORT:av_hwdevice_ctx_init=_AheadLib_av_hwdevice_ctx_init,@359")
#pragma comment(linker, "/EXPORT:av_hwdevice_get_hwframe_constraints=_AheadLib_av_hwdevice_get_hwframe_constraints,@360")
#pragma comment(linker, "/EXPORT:av_hwdevice_hwconfig_alloc=_AheadLib_av_hwdevice_hwconfig_alloc,@361")
#pragma comment(linker, "/EXPORT:av_hwframe_constraints_free=_AheadLib_av_hwframe_constraints_free,@362")
#pragma comment(linker, "/EXPORT:av_hwframe_ctx_alloc=_AheadLib_av_hwframe_ctx_alloc,@363")
#pragma comment(linker, "/EXPORT:av_hwframe_ctx_init=_AheadLib_av_hwframe_ctx_init,@364")
#pragma comment(linker, "/EXPORT:av_hwframe_get_buffer=_AheadLib_av_hwframe_get_buffer,@365")
#pragma comment(linker, "/EXPORT:av_hwframe_transfer_data=_AheadLib_av_hwframe_transfer_data,@366")
#pragma comment(linker, "/EXPORT:av_hwframe_transfer_get_formats=_AheadLib_av_hwframe_transfer_get_formats,@367")
#pragma comment(linker, "/EXPORT:av_i2int=_AheadLib_av_i2int,@368")
#pragma comment(linker, "/EXPORT:av_iformat_next=_AheadLib_av_iformat_next,@369")
#pragma comment(linker, "/EXPORT:av_image_alloc=_AheadLib_av_image_alloc,@370")
#pragma comment(linker, "/EXPORT:av_image_check_sar=_AheadLib_av_image_check_sar,@371")
#pragma comment(linker, "/EXPORT:av_image_check_size=_AheadLib_av_image_check_size,@372")
#pragma comment(linker, "/EXPORT:av_image_copy=_AheadLib_av_image_copy,@373")
#pragma comment(linker, "/EXPORT:av_image_copy_plane=_AheadLib_av_image_copy_plane,@374")
#pragma comment(linker, "/EXPORT:av_image_copy_to_buffer=_AheadLib_av_image_copy_to_buffer,@375")
#pragma comment(linker, "/EXPORT:av_image_fill_arrays=_AheadLib_av_image_fill_arrays,@376")
#pragma comment(linker, "/EXPORT:av_image_fill_linesizes=_AheadLib_av_image_fill_linesizes,@377")
#pragma comment(linker, "/EXPORT:av_image_fill_max_pixsteps=_AheadLib_av_image_fill_max_pixsteps,@378")
#pragma comment(linker, "/EXPORT:av_image_fill_pointers=_AheadLib_av_image_fill_pointers,@379")
#pragma comment(linker, "/EXPORT:av_image_get_buffer_size=_AheadLib_av_image_get_buffer_size,@380")
#pragma comment(linker, "/EXPORT:av_image_get_linesize=_AheadLib_av_image_get_linesize,@381")
#pragma comment(linker, "/EXPORT:av_imdct_calc=_AheadLib_av_imdct_calc,@382")
#pragma comment(linker, "/EXPORT:av_imdct_half=_AheadLib_av_imdct_half,@383")
#pragma comment(linker, "/EXPORT:av_index_search_timestamp=_AheadLib_av_index_search_timestamp,@384")
#pragma comment(linker, "/EXPORT:av_init_packet=_AheadLib_av_init_packet,@385")
#pragma comment(linker, "/EXPORT:av_input_audio_device_next=_AheadLib_av_input_audio_device_next,@386")
#pragma comment(linker, "/EXPORT:av_input_video_device_next=_AheadLib_av_input_video_device_next,@387")
#pragma comment(linker, "/EXPORT:av_int2i=_AheadLib_av_int2i,@388")
#pragma comment(linker, "/EXPORT:av_int_list_length_for_size=_AheadLib_av_int_list_length_for_size,@389")
#pragma comment(linker, "/EXPORT:av_interleaved_write_frame=_AheadLib_av_interleaved_write_frame,@390")
#pragma comment(linker, "/EXPORT:av_interleaved_write_uncoded_frame=_AheadLib_av_interleaved_write_uncoded_frame,@391")
#pragma comment(linker, "/EXPORT:av_jni_get_java_vm=_AheadLib_av_jni_get_java_vm,@392")
#pragma comment(linker, "/EXPORT:av_jni_set_java_vm=_AheadLib_av_jni_set_java_vm,@393")
#pragma comment(linker, "/EXPORT:av_lfg_init=_AheadLib_av_lfg_init,@394")
#pragma comment(linker, "/EXPORT:av_lockmgr_register=_AheadLib_av_lockmgr_register,@395")
#pragma comment(linker, "/EXPORT:av_log=_AheadLib_av_log,@396")
#pragma comment(linker, "/EXPORT:av_log2=_AheadLib_av_log2,@397")
#pragma comment(linker, "/EXPORT:av_log2_16bit=_AheadLib_av_log2_16bit,@398")
#pragma comment(linker, "/EXPORT:av_log2_i=_AheadLib_av_log2_i,@399")
#pragma comment(linker, "/EXPORT:av_log_ask_for_sample=_AheadLib_av_log_ask_for_sample,@400")
#pragma comment(linker, "/EXPORT:av_log_default_callback=_AheadLib_av_log_default_callback,@401")
#pragma comment(linker, "/EXPORT:av_log_format_line=_AheadLib_av_log_format_line,@402")
#pragma comment(linker, "/EXPORT:av_log_format_line2=_AheadLib_av_log_format_line2,@403")
#pragma comment(linker, "/EXPORT:av_log_get_flags=_AheadLib_av_log_get_flags,@404")
#pragma comment(linker, "/EXPORT:av_log_get_level=_AheadLib_av_log_get_level,@405")
#pragma comment(linker, "/EXPORT:av_log_missing_feature=_AheadLib_av_log_missing_feature,@406")
#pragma comment(linker, "/EXPORT:av_log_set_callback=_AheadLib_av_log_set_callback,@407")
#pragma comment(linker, "/EXPORT:av_log_set_flags=_AheadLib_av_log_set_flags,@408")
#pragma comment(linker, "/EXPORT:av_log_set_level=_AheadLib_av_log_set_level,@409")
#pragma comment(linker, "/EXPORT:av_lzo1x_decode=_AheadLib_av_lzo1x_decode,@410")
#pragma comment(linker, "/EXPORT:av_malloc=_AheadLib_av_malloc,@411")
#pragma comment(linker, "/EXPORT:av_mallocz=_AheadLib_av_mallocz,@412")
#pragma comment(linker, "/EXPORT:av_mastering_display_metadata_alloc=_AheadLib_av_mastering_display_metadata_alloc,@413")
#pragma comment(linker, "/EXPORT:av_mastering_display_metadata_create_side_data=_AheadLib_av_mastering_display_metadata_create_side_data,@414")
#pragma comment(linker, "/EXPORT:av_match_ext=_AheadLib_av_match_ext,@415")
#pragma comment(linker, "/EXPORT:av_match_list=_AheadLib_av_match_list,@416")
#pragma comment(linker, "/EXPORT:av_match_name=_AheadLib_av_match_name,@417")
#pragma comment(linker, "/EXPORT:av_max_alloc=_AheadLib_av_max_alloc,@418")
#pragma comment(linker, "/EXPORT:av_md5_alloc=_AheadLib_av_md5_alloc,@419")
#pragma comment(linker, "/EXPORT:av_md5_final=_AheadLib_av_md5_final,@420")
#pragma comment(linker, "/EXPORT:av_md5_init=_AheadLib_av_md5_init,@421")
#pragma comment(linker, "/EXPORT:av_md5_sum=_AheadLib_av_md5_sum,@422")
#pragma comment(linker, "/EXPORT:av_md5_update=_AheadLib_av_md5_update,@423")
#pragma comment(linker, "/EXPORT:av_mdct_calc=_AheadLib_av_mdct_calc,@424")
#pragma comment(linker, "/EXPORT:av_mdct_end=_AheadLib_av_mdct_end,@425")
#pragma comment(linker, "/EXPORT:av_mdct_init=_AheadLib_av_mdct_init,@426")
#pragma comment(linker, "/EXPORT:av_mediacodec_alloc_context=_AheadLib_av_mediacodec_alloc_context,@427")
#pragma comment(linker, "/EXPORT:av_mediacodec_default_free=_AheadLib_av_mediacodec_default_free,@428")
#pragma comment(linker, "/EXPORT:av_mediacodec_default_init=_AheadLib_av_mediacodec_default_init,@429")
#pragma comment(linker, "/EXPORT:av_mediacodec_release_buffer=_AheadLib_av_mediacodec_release_buffer,@430")
#pragma comment(linker, "/EXPORT:av_memcpy_backptr=_AheadLib_av_memcpy_backptr,@431")
#pragma comment(linker, "/EXPORT:av_memdup=_AheadLib_av_memdup,@432")
#pragma comment(linker, "/EXPORT:av_mod_i=_AheadLib_av_mod_i,@433")
#pragma comment(linker, "/EXPORT:av_mul_i=_AheadLib_av_mul_i,@434")
#pragma comment(linker, "/EXPORT:av_mul_q=_AheadLib_av_mul_q,@435")
#pragma comment(linker, "/EXPORT:av_murmur3_alloc=_AheadLib_av_murmur3_alloc,@436")
#pragma comment(linker, "/EXPORT:av_murmur3_final=_AheadLib_av_murmur3_final,@437")
#pragma comment(linker, "/EXPORT:av_murmur3_init=_AheadLib_av_murmur3_init,@438")
#pragma comment(linker, "/EXPORT:av_murmur3_init_seeded=_AheadLib_av_murmur3_init_seeded,@439")
#pragma comment(linker, "/EXPORT:av_murmur3_update=_AheadLib_av_murmur3_update,@440")
#pragma comment(linker, "/EXPORT:av_nearer_q=_AheadLib_av_nearer_q,@441")
#pragma comment(linker, "/EXPORT:av_new_packet=_AheadLib_av_new_packet,@442")
#pragma comment(linker, "/EXPORT:av_new_program=_AheadLib_av_new_program,@443")
#pragma comment(linker, "/EXPORT:av_oformat_next=_AheadLib_av_oformat_next,@444")
#pragma comment(linker, "/EXPORT:av_opt_child_class_next=_AheadLib_av_opt_child_class_next,@445")
#pragma comment(linker, "/EXPORT:av_opt_child_next=_AheadLib_av_opt_child_next,@446")
#pragma comment(linker, "/EXPORT:av_opt_copy=_AheadLib_av_opt_copy,@447")
#pragma comment(linker, "/EXPORT:av_opt_eval_double=_AheadLib_av_opt_eval_double,@448")
#pragma comment(linker, "/EXPORT:av_opt_eval_flags=_AheadLib_av_opt_eval_flags,@449")
#pragma comment(linker, "/EXPORT:av_opt_eval_float=_AheadLib_av_opt_eval_float,@450")
#pragma comment(linker, "/EXPORT:av_opt_eval_int=_AheadLib_av_opt_eval_int,@451")
#pragma comment(linker, "/EXPORT:av_opt_eval_int64=_AheadLib_av_opt_eval_int64,@452")
#pragma comment(linker, "/EXPORT:av_opt_eval_q=_AheadLib_av_opt_eval_q,@453")
#pragma comment(linker, "/EXPORT:av_opt_find=_AheadLib_av_opt_find,@454")
#pragma comment(linker, "/EXPORT:av_opt_find2=_AheadLib_av_opt_find2,@455")
#pragma comment(linker, "/EXPORT:av_opt_flag_is_set=_AheadLib_av_opt_flag_is_set,@456")
#pragma comment(linker, "/EXPORT:av_opt_free=_AheadLib_av_opt_free,@457")
#pragma comment(linker, "/EXPORT:av_opt_freep_ranges=_AheadLib_av_opt_freep_ranges,@458")
#pragma comment(linker, "/EXPORT:av_opt_get=_AheadLib_av_opt_get,@459")
#pragma comment(linker, "/EXPORT:av_opt_get_channel_layout=_AheadLib_av_opt_get_channel_layout,@460")
#pragma comment(linker, "/EXPORT:av_opt_get_dict_val=_AheadLib_av_opt_get_dict_val,@461")
#pragma comment(linker, "/EXPORT:av_opt_get_double=_AheadLib_av_opt_get_double,@462")
#pragma comment(linker, "/EXPORT:av_opt_get_image_size=_AheadLib_av_opt_get_image_size,@463")
#pragma comment(linker, "/EXPORT:av_opt_get_int=_AheadLib_av_opt_get_int,@464")
#pragma comment(linker, "/EXPORT:av_opt_get_key_value=_AheadLib_av_opt_get_key_value,@465")
#pragma comment(linker, "/EXPORT:av_opt_get_pixel_fmt=_AheadLib_av_opt_get_pixel_fmt,@466")
#pragma comment(linker, "/EXPORT:av_opt_get_q=_AheadLib_av_opt_get_q,@467")
#pragma comment(linker, "/EXPORT:av_opt_get_sample_fmt=_AheadLib_av_opt_get_sample_fmt,@468")
#pragma comment(linker, "/EXPORT:av_opt_get_video_rate=_AheadLib_av_opt_get_video_rate,@469")
#pragma comment(linker, "/EXPORT:av_opt_is_set_to_default=_AheadLib_av_opt_is_set_to_default,@470")
#pragma comment(linker, "/EXPORT:av_opt_is_set_to_default_by_name=_AheadLib_av_opt_is_set_to_default_by_name,@471")
#pragma comment(linker, "/EXPORT:av_opt_next=_AheadLib_av_opt_next,@472")
#pragma comment(linker, "/EXPORT:av_opt_ptr=_AheadLib_av_opt_ptr,@473")
#pragma comment(linker, "/EXPORT:av_opt_query_ranges=_AheadLib_av_opt_query_ranges,@474")
#pragma comment(linker, "/EXPORT:av_opt_query_ranges_default=_AheadLib_av_opt_query_ranges_default,@475")
#pragma comment(linker, "/EXPORT:av_opt_serialize=_AheadLib_av_opt_serialize,@476")
#pragma comment(linker, "/EXPORT:av_opt_set=_AheadLib_av_opt_set,@477")
#pragma comment(linker, "/EXPORT:av_opt_set_bin=_AheadLib_av_opt_set_bin,@478")
#pragma comment(linker, "/EXPORT:av_opt_set_channel_layout=_AheadLib_av_opt_set_channel_layout,@479")
#pragma comment(linker, "/EXPORT:av_opt_set_defaults=_AheadLib_av_opt_set_defaults,@480")
#pragma comment(linker, "/EXPORT:av_opt_set_defaults2=_AheadLib_av_opt_set_defaults2,@481")
#pragma comment(linker, "/EXPORT:av_opt_set_dict=_AheadLib_av_opt_set_dict,@482")
#pragma comment(linker, "/EXPORT:av_opt_set_dict2=_AheadLib_av_opt_set_dict2,@483")
#pragma comment(linker, "/EXPORT:av_opt_set_dict_val=_AheadLib_av_opt_set_dict_val,@484")
#pragma comment(linker, "/EXPORT:av_opt_set_double=_AheadLib_av_opt_set_double,@485")
#pragma comment(linker, "/EXPORT:av_opt_set_from_string=_AheadLib_av_opt_set_from_string,@486")
#pragma comment(linker, "/EXPORT:av_opt_set_image_size=_AheadLib_av_opt_set_image_size,@487")
#pragma comment(linker, "/EXPORT:av_opt_set_int=_AheadLib_av_opt_set_int,@488")
#pragma comment(linker, "/EXPORT:av_opt_set_pixel_fmt=_AheadLib_av_opt_set_pixel_fmt,@489")
#pragma comment(linker, "/EXPORT:av_opt_set_q=_AheadLib_av_opt_set_q,@490")
#pragma comment(linker, "/EXPORT:av_opt_set_sample_fmt=_AheadLib_av_opt_set_sample_fmt,@491")
#pragma comment(linker, "/EXPORT:av_opt_set_video_rate=_AheadLib_av_opt_set_video_rate,@492")
#pragma comment(linker, "/EXPORT:av_opt_show2=_AheadLib_av_opt_show2,@493")
#pragma comment(linker, "/EXPORT:av_output_audio_device_next=_AheadLib_av_output_audio_device_next,@494")
#pragma comment(linker, "/EXPORT:av_output_video_device_next=_AheadLib_av_output_video_device_next,@495")
#pragma comment(linker, "/EXPORT:av_packet_add_side_data=_AheadLib_av_packet_add_side_data,@496")
#pragma comment(linker, "/EXPORT:av_packet_alloc=_AheadLib_av_packet_alloc,@497")
#pragma comment(linker, "/EXPORT:av_packet_clone=_AheadLib_av_packet_clone,@498")
#pragma comment(linker, "/EXPORT:av_packet_copy_props=_AheadLib_av_packet_copy_props,@499")
#pragma comment(linker, "/EXPORT:av_packet_free=_AheadLib_av_packet_free,@500")
#pragma comment(linker, "/EXPORT:av_packet_free_side_data=_AheadLib_av_packet_free_side_data,@501")
#pragma comment(linker, "/EXPORT:av_packet_from_data=_AheadLib_av_packet_from_data,@502")
#pragma comment(linker, "/EXPORT:av_packet_get_side_data=_AheadLib_av_packet_get_side_data,@503")
#pragma comment(linker, "/EXPORT:av_packet_merge_side_data=_AheadLib_av_packet_merge_side_data,@504")
#pragma comment(linker, "/EXPORT:av_packet_move_ref=_AheadLib_av_packet_move_ref,@505")
#pragma comment(linker, "/EXPORT:av_packet_new_side_data=_AheadLib_av_packet_new_side_data,@506")
#pragma comment(linker, "/EXPORT:av_packet_pack_dictionary=_AheadLib_av_packet_pack_dictionary,@507")
#pragma comment(linker, "/EXPORT:av_packet_ref=_AheadLib_av_packet_ref,@508")
#pragma comment(linker, "/EXPORT:av_packet_rescale_ts=_AheadLib_av_packet_rescale_ts,@509")
#pragma comment(linker, "/EXPORT:av_packet_shrink_side_data=_AheadLib_av_packet_shrink_side_data,@510")
#pragma comment(linker, "/EXPORT:av_packet_side_data_name=_AheadLib_av_packet_side_data_name,@511")
#pragma comment(linker, "/EXPORT:av_packet_split_side_data=_AheadLib_av_packet_split_side_data,@512")
#pragma comment(linker, "/EXPORT:av_packet_unpack_dictionary=_AheadLib_av_packet_unpack_dictionary,@513")
#pragma comment(linker, "/EXPORT:av_packet_unref=_AheadLib_av_packet_unref,@514")
#pragma comment(linker, "/EXPORT:av_parse_color=_AheadLib_av_parse_color,@515")
#pragma comment(linker, "/EXPORT:av_parse_cpu_caps=_AheadLib_av_parse_cpu_caps,@516")
#pragma comment(linker, "/EXPORT:av_parse_cpu_flags=_AheadLib_av_parse_cpu_flags,@517")
#pragma comment(linker, "/EXPORT:av_parse_ratio=_AheadLib_av_parse_ratio,@518")
#pragma comment(linker, "/EXPORT:av_parse_time=_AheadLib_av_parse_time,@519")
#pragma comment(linker, "/EXPORT:av_parse_video_rate=_AheadLib_av_parse_video_rate,@520")
#pragma comment(linker, "/EXPORT:av_parse_video_size=_AheadLib_av_parse_video_size,@521")
#pragma comment(linker, "/EXPORT:av_parser_change=_AheadLib_av_parser_change,@522")
#pragma comment(linker, "/EXPORT:av_parser_close=_AheadLib_av_parser_close,@523")
#pragma comment(linker, "/EXPORT:av_parser_init=_AheadLib_av_parser_init,@524")
#pragma comment(linker, "/EXPORT:av_parser_next=_AheadLib_av_parser_next,@525")
#pragma comment(linker, "/EXPORT:av_parser_parse2=_AheadLib_av_parser_parse2,@526")
#pragma comment(linker, "/EXPORT:av_picture_copy=_AheadLib_av_picture_copy,@527")
#pragma comment(linker, "/EXPORT:av_picture_crop=_AheadLib_av_picture_crop,@528")
#pragma comment(linker, "/EXPORT:av_picture_pad=_AheadLib_av_picture_pad,@529")
#pragma comment(linker, "/EXPORT:av_pix_fmt_count_planes=_AheadLib_av_pix_fmt_count_planes,@530")
#pragma comment(linker, "/EXPORT:av_pix_fmt_desc_get=_AheadLib_av_pix_fmt_desc_get,@531")
#pragma comment(linker, "/EXPORT:av_pix_fmt_desc_get_id=_AheadLib_av_pix_fmt_desc_get_id,@532")
#pragma comment(linker, "/EXPORT:av_pix_fmt_desc_next=_AheadLib_av_pix_fmt_desc_next,@533")
#pragma comment(linker, "/EXPORT:av_pix_fmt_get_chroma_sub_sample=_AheadLib_av_pix_fmt_get_chroma_sub_sample,@534")
#pragma comment(linker, "/EXPORT:av_pix_fmt_swap_endianness=_AheadLib_av_pix_fmt_swap_endianness,@535")
#pragma comment(linker, "/EXPORT:av_pixelutils_get_sad_fn=_AheadLib_av_pixelutils_get_sad_fn,@536")
#pragma comment(linker, "/EXPORT:av_pkt_dump2=_AheadLib_av_pkt_dump2,@537")
#pragma comment(linker, "/EXPORT:av_pkt_dump_log2=_AheadLib_av_pkt_dump_log2,@538")
#pragma comment(linker, "/EXPORT:av_probe_input_buffer=_AheadLib_av_probe_input_buffer,@539")
#pragma comment(linker, "/EXPORT:av_probe_input_buffer2=_AheadLib_av_probe_input_buffer2,@540")
#pragma comment(linker, "/EXPORT:av_probe_input_format=_AheadLib_av_probe_input_format,@541")
#pragma comment(linker, "/EXPORT:av_probe_input_format2=_AheadLib_av_probe_input_format2,@542")
#pragma comment(linker, "/EXPORT:av_probe_input_format3=_AheadLib_av_probe_input_format3,@543")
#pragma comment(linker, "/EXPORT:av_program_add_stream_index=_AheadLib_av_program_add_stream_index,@544")
#pragma comment(linker, "/EXPORT:av_q2intfloat=_AheadLib_av_q2intfloat,@545")
#pragma comment(linker, "/EXPORT:av_qsv_alloc_context=_AheadLib_av_qsv_alloc_context,@546")
#pragma comment(linker, "/EXPORT:av_rc4_alloc=_AheadLib_av_rc4_alloc,@547")
#pragma comment(linker, "/EXPORT:av_rc4_crypt=_AheadLib_av_rc4_crypt,@548")
#pragma comment(linker, "/EXPORT:av_rc4_init=_AheadLib_av_rc4_init,@549")
#pragma comment(linker, "/EXPORT:av_read_frame=_AheadLib_av_read_frame,@550")
#pragma comment(linker, "/EXPORT:av_read_image_line=_AheadLib_av_read_image_line,@551")
#pragma comment(linker, "/EXPORT:av_read_pause=_AheadLib_av_read_pause,@552")
#pragma comment(linker, "/EXPORT:av_read_play=_AheadLib_av_read_play,@553")
#pragma comment(linker, "/EXPORT:av_realloc=_AheadLib_av_realloc,@554")
#pragma comment(linker, "/EXPORT:av_realloc_array=_AheadLib_av_realloc_array,@555")
#pragma comment(linker, "/EXPORT:av_realloc_f=_AheadLib_av_realloc_f,@556")
#pragma comment(linker, "/EXPORT:av_reallocp=_AheadLib_av_reallocp,@557")
#pragma comment(linker, "/EXPORT:av_reallocp_array=_AheadLib_av_reallocp_array,@558")
#pragma comment(linker, "/EXPORT:av_reduce=_AheadLib_av_reduce,@559")
#pragma comment(linker, "/EXPORT:av_register_all=_AheadLib_av_register_all,@560")
#pragma comment(linker, "/EXPORT:av_register_bitstream_filter=_AheadLib_av_register_bitstream_filter,@561")
#pragma comment(linker, "/EXPORT:av_register_codec_parser=_AheadLib_av_register_codec_parser,@562")
#pragma comment(linker, "/EXPORT:av_register_hwaccel=_AheadLib_av_register_hwaccel,@563")
#pragma comment(linker, "/EXPORT:av_register_input_format=_AheadLib_av_register_input_format,@564")
#pragma comment(linker, "/EXPORT:av_register_output_format=_AheadLib_av_register_output_format,@565")
#pragma comment(linker, "/EXPORT:av_resample=_AheadLib_av_resample,@566")
#pragma comment(linker, "/EXPORT:av_resample_close=_AheadLib_av_resample_close,@567")
#pragma comment(linker, "/EXPORT:av_resample_compensate=_AheadLib_av_resample_compensate,@568")
#pragma comment(linker, "/EXPORT:av_resample_init=_AheadLib_av_resample_init,@569")
#pragma comment(linker, "/EXPORT:av_rescale=_AheadLib_av_rescale,@570")
#pragma comment(linker, "/EXPORT:av_rescale_delta=_AheadLib_av_rescale_delta,@571")
#pragma comment(linker, "/EXPORT:av_rescale_q=_AheadLib_av_rescale_q,@572")
#pragma comment(linker, "/EXPORT:av_rescale_q_rnd=_AheadLib_av_rescale_q_rnd,@573")
#pragma comment(linker, "/EXPORT:av_rescale_rnd=_AheadLib_av_rescale_rnd,@574")
#pragma comment(linker, "/EXPORT:av_ripemd_alloc=_AheadLib_av_ripemd_alloc,@575")
#pragma comment(linker, "/EXPORT:av_ripemd_final=_AheadLib_av_ripemd_final,@576")
#pragma comment(linker, "/EXPORT:av_ripemd_init=_AheadLib_av_ripemd_init,@577")
#pragma comment(linker, "/EXPORT:av_ripemd_update=_AheadLib_av_ripemd_update,@578")
#pragma comment(linker, "/EXPORT:av_sample_fmt_is_planar=_AheadLib_av_sample_fmt_is_planar,@579")
#pragma comment(linker, "/EXPORT:av_samples_alloc=_AheadLib_av_samples_alloc,@580")
#pragma comment(linker, "/EXPORT:av_samples_alloc_array_and_samples=_AheadLib_av_samples_alloc_array_and_samples,@581")
#pragma comment(linker, "/EXPORT:av_samples_copy=_AheadLib_av_samples_copy,@582")
#pragma comment(linker, "/EXPORT:av_samples_fill_arrays=_AheadLib_av_samples_fill_arrays,@583")
#pragma comment(linker, "/EXPORT:av_samples_get_buffer_size=_AheadLib_av_samples_get_buffer_size,@584")
#pragma comment(linker, "/EXPORT:av_samples_set_silence=_AheadLib_av_samples_set_silence,@585")
#pragma comment(linker, "/EXPORT:av_sdp_create=_AheadLib_av_sdp_create,@586")
#pragma comment(linker, "/EXPORT:av_seek_frame=_AheadLib_av_seek_frame,@587")
#pragma comment(linker, "/EXPORT:av_set_cpu_flags_mask=_AheadLib_av_set_cpu_flags_mask,@588")
#pragma comment(linker, "/EXPORT:av_set_options_string=_AheadLib_av_set_options_string,@589")
#pragma comment(linker, "/EXPORT:av_sha512_alloc=_AheadLib_av_sha512_alloc,@590")
#pragma comment(linker, "/EXPORT:av_sha512_final=_AheadLib_av_sha512_final,@591")
#pragma comment(linker, "/EXPORT:av_sha512_init=_AheadLib_av_sha512_init,@592")
#pragma comment(linker, "/EXPORT:av_sha512_update=_AheadLib_av_sha512_update,@593")
#pragma comment(linker, "/EXPORT:av_sha_alloc=_AheadLib_av_sha_alloc,@594")
#pragma comment(linker, "/EXPORT:av_sha_final=_AheadLib_av_sha_final,@595")
#pragma comment(linker, "/EXPORT:av_sha_init=_AheadLib_av_sha_init,@596")
#pragma comment(linker, "/EXPORT:av_sha_update=_AheadLib_av_sha_update,@597")
#pragma comment(linker, "/EXPORT:av_shr_i=_AheadLib_av_shr_i,@598")
#pragma comment(linker, "/EXPORT:av_shrink_packet=_AheadLib_av_shrink_packet,@599")
#pragma comment(linker, "/EXPORT:av_small_strptime=_AheadLib_av_small_strptime,@600")
#pragma comment(linker, "/EXPORT:av_stereo3d_alloc=_AheadLib_av_stereo3d_alloc,@601")
#pragma comment(linker, "/EXPORT:av_stereo3d_create_side_data=_AheadLib_av_stereo3d_create_side_data,@602")
#pragma comment(linker, "/EXPORT:av_stereo3d_from_name=_AheadLib_av_stereo3d_from_name,@603")
#pragma comment(linker, "/EXPORT:av_stereo3d_type_name=_AheadLib_av_stereo3d_type_name,@604")
#pragma comment(linker, "/EXPORT:av_strcasecmp=_AheadLib_av_strcasecmp,@605")
#pragma comment(linker, "/EXPORT:av_strdup=_AheadLib_av_strdup,@606")
#pragma comment(linker, "/EXPORT:av_stream_add_side_data=_AheadLib_av_stream_add_side_data,@607")
#pragma comment(linker, "/EXPORT:av_stream_get_codec_timebase=_AheadLib_av_stream_get_codec_timebase,@608")
#pragma comment(linker, "/EXPORT:av_stream_get_end_pts=_AheadLib_av_stream_get_end_pts,@609")
#pragma comment(linker, "/EXPORT:av_stream_get_parser=_AheadLib_av_stream_get_parser,@610")
#pragma comment(linker, "/EXPORT:av_stream_get_r_frame_rate=_AheadLib_av_stream_get_r_frame_rate,@611")
#pragma comment(linker, "/EXPORT:av_stream_get_recommended_encoder_configuration=_AheadLib_av_stream_get_recommended_encoder_configuration,@612")
#pragma comment(linker, "/EXPORT:av_stream_get_side_data=_AheadLib_av_stream_get_side_data,@613")
#pragma comment(linker, "/EXPORT:av_stream_new_side_data=_AheadLib_av_stream_new_side_data,@614")
#pragma comment(linker, "/EXPORT:av_stream_set_r_frame_rate=_AheadLib_av_stream_set_r_frame_rate,@615")
#pragma comment(linker, "/EXPORT:av_stream_set_recommended_encoder_configuration=_AheadLib_av_stream_set_recommended_encoder_configuration,@616")
#pragma comment(linker, "/EXPORT:av_strerror=_AheadLib_av_strerror,@617")
#pragma comment(linker, "/EXPORT:av_stristart=_AheadLib_av_stristart,@618")
#pragma comment(linker, "/EXPORT:av_stristr=_AheadLib_av_stristr,@619")
#pragma comment(linker, "/EXPORT:av_strlcat=_AheadLib_av_strlcat,@620")
#pragma comment(linker, "/EXPORT:av_strlcatf=_AheadLib_av_strlcatf,@621")
#pragma comment(linker, "/EXPORT:av_strlcpy=_AheadLib_av_strlcpy,@622")
#pragma comment(linker, "/EXPORT:av_strncasecmp=_AheadLib_av_strncasecmp,@623")
#pragma comment(linker, "/EXPORT:av_strndup=_AheadLib_av_strndup,@624")
#pragma comment(linker, "/EXPORT:av_strnstr=_AheadLib_av_strnstr,@625")
#pragma comment(linker, "/EXPORT:av_strstart=_AheadLib_av_strstart,@626")
#pragma comment(linker, "/EXPORT:av_strtod=_AheadLib_av_strtod,@627")
#pragma comment(linker, "/EXPORT:av_strtok=_AheadLib_av_strtok,@628")
#pragma comment(linker, "/EXPORT:av_sub_i=_AheadLib_av_sub_i,@629")
#pragma comment(linker, "/EXPORT:av_sub_q=_AheadLib_av_sub_q,@630")
#pragma comment(linker, "/EXPORT:av_tea_alloc=_AheadLib_av_tea_alloc,@631")
#pragma comment(linker, "/EXPORT:av_tea_crypt=_AheadLib_av_tea_crypt,@632")
#pragma comment(linker, "/EXPORT:av_tea_init=_AheadLib_av_tea_init,@633")
#pragma comment(linker, "/EXPORT:av_tempfile=_AheadLib_av_tempfile,@634")
#pragma comment(linker, "/EXPORT:av_thread_message_flush=_AheadLib_av_thread_message_flush,@635")
#pragma comment(linker, "/EXPORT:av_thread_message_queue_alloc=_AheadLib_av_thread_message_queue_alloc,@636")
#pragma comment(linker, "/EXPORT:av_thread_message_queue_free=_AheadLib_av_thread_message_queue_free,@637")
#pragma comment(linker, "/EXPORT:av_thread_message_queue_recv=_AheadLib_av_thread_message_queue_recv,@638")
#pragma comment(linker, "/EXPORT:av_thread_message_queue_send=_AheadLib_av_thread_message_queue_send,@639")
#pragma comment(linker, "/EXPORT:av_thread_message_queue_set_err_recv=_AheadLib_av_thread_message_queue_set_err_recv,@640")
#pragma comment(linker, "/EXPORT:av_thread_message_queue_set_err_send=_AheadLib_av_thread_message_queue_set_err_send,@641")
#pragma comment(linker, "/EXPORT:av_thread_message_queue_set_free_func=_AheadLib_av_thread_message_queue_set_free_func,@642")
#pragma comment(linker, "/EXPORT:av_timecode_adjust_ntsc_framenum2=_AheadLib_av_timecode_adjust_ntsc_framenum2,@643")
#pragma comment(linker, "/EXPORT:av_timecode_check_frame_rate=_AheadLib_av_timecode_check_frame_rate,@644")
#pragma comment(linker, "/EXPORT:av_timecode_get_smpte_from_framenum=_AheadLib_av_timecode_get_smpte_from_framenum,@645")
#pragma comment(linker, "/EXPORT:av_timecode_init=_AheadLib_av_timecode_init,@646")
#pragma comment(linker, "/EXPORT:av_timecode_init_from_string=_AheadLib_av_timecode_init_from_string,@647")
#pragma comment(linker, "/EXPORT:av_timecode_make_mpeg_tc_string=_AheadLib_av_timecode_make_mpeg_tc_string,@648")
#pragma comment(linker, "/EXPORT:av_timecode_make_smpte_tc_string=_AheadLib_av_timecode_make_smpte_tc_string,@649")
#pragma comment(linker, "/EXPORT:av_timecode_make_string=_AheadLib_av_timecode_make_string,@650")
#pragma comment(linker, "/EXPORT:av_timegm=_AheadLib_av_timegm,@651")
#pragma comment(linker, "/EXPORT:av_tree_destroy=_AheadLib_av_tree_destroy,@652")
#pragma comment(linker, "/EXPORT:av_tree_enumerate=_AheadLib_av_tree_enumerate,@653")
#pragma comment(linker, "/EXPORT:av_tree_find=_AheadLib_av_tree_find,@654")
#pragma comment(linker, "/EXPORT:av_tree_insert=_AheadLib_av_tree_insert,@655")
#pragma comment(linker, "/EXPORT:av_tree_node_alloc=_AheadLib_av_tree_node_alloc,@656")
#pragma comment(linker, "/EXPORT:av_twofish_alloc=_AheadLib_av_twofish_alloc,@657")
#pragma comment(linker, "/EXPORT:av_twofish_crypt=_AheadLib_av_twofish_crypt,@658")
#pragma comment(linker, "/EXPORT:av_twofish_init=_AheadLib_av_twofish_init,@659")
#pragma comment(linker, "/EXPORT:av_url_split=_AheadLib_av_url_split,@660")
#pragma comment(linker, "/EXPORT:av_usleep=_AheadLib_av_usleep,@661")
#pragma comment(linker, "/EXPORT:av_utf8_decode=_AheadLib_av_utf8_decode,@662")
#pragma comment(linker, "/EXPORT:av_vbprintf=_AheadLib_av_vbprintf,@663")
#pragma comment(linker, "/EXPORT:av_version_info=_AheadLib_av_version_info,@664")
#pragma comment(linker, "/EXPORT:av_vlog=_AheadLib_av_vlog,@665")
#pragma comment(linker, "/EXPORT:av_write_frame=_AheadLib_av_write_frame,@666")
#pragma comment(linker, "/EXPORT:av_write_image_line=_AheadLib_av_write_image_line,@667")
#pragma comment(linker, "/EXPORT:av_write_trailer=_AheadLib_av_write_trailer,@668")
#pragma comment(linker, "/EXPORT:av_write_uncoded_frame=_AheadLib_av_write_uncoded_frame,@669")
#pragma comment(linker, "/EXPORT:av_write_uncoded_frame_query=_AheadLib_av_write_uncoded_frame_query,@670")
#pragma comment(linker, "/EXPORT:av_xiphlacing=_AheadLib_av_xiphlacing,@671")
#pragma comment(linker, "/EXPORT:av_xtea_alloc=_AheadLib_av_xtea_alloc,@672")
#pragma comment(linker, "/EXPORT:av_xtea_crypt=_AheadLib_av_xtea_crypt,@673")
#pragma comment(linker, "/EXPORT:av_xtea_init=_AheadLib_av_xtea_init,@674")
#pragma comment(linker, "/EXPORT:av_xtea_le_crypt=_AheadLib_av_xtea_le_crypt,@675")
#pragma comment(linker, "/EXPORT:av_xtea_le_init=_AheadLib_av_xtea_le_init,@676")
#pragma comment(linker, "/EXPORT:avcodec_align_dimensions=_AheadLib_avcodec_align_dimensions,@677")
#pragma comment(linker, "/EXPORT:avcodec_align_dimensions2=_AheadLib_avcodec_align_dimensions2,@678")
#pragma comment(linker, "/EXPORT:avcodec_alloc_context3=_AheadLib_avcodec_alloc_context3,@679")
#pragma comment(linker, "/EXPORT:avcodec_chroma_pos_to_enum=_AheadLib_avcodec_chroma_pos_to_enum,@680")
#pragma comment(linker, "/EXPORT:avcodec_close=_AheadLib_avcodec_close,@681")
#pragma comment(linker, "/EXPORT:avcodec_configuration=_AheadLib_avcodec_configuration,@682")
#pragma comment(linker, "/EXPORT:avcodec_copy_context=_AheadLib_avcodec_copy_context,@683")
#pragma comment(linker, "/EXPORT:avcodec_dct_alloc=_AheadLib_avcodec_dct_alloc,@684")
#pragma comment(linker, "/EXPORT:avcodec_dct_get_class=_AheadLib_avcodec_dct_get_class,@685")
#pragma comment(linker, "/EXPORT:avcodec_dct_init=_AheadLib_avcodec_dct_init,@686")
#pragma comment(linker, "/EXPORT:avcodec_decode_audio4=_AheadLib_avcodec_decode_audio4,@687")
#pragma comment(linker, "/EXPORT:avcodec_decode_subtitle2=_AheadLib_avcodec_decode_subtitle2,@688")
#pragma comment(linker, "/EXPORT:avcodec_decode_video2=_AheadLib_avcodec_decode_video2,@689")
#pragma comment(linker, "/EXPORT:avcodec_default_execute=_AheadLib_avcodec_default_execute,@690")
#pragma comment(linker, "/EXPORT:avcodec_default_execute2=_AheadLib_avcodec_default_execute2,@691")
#pragma comment(linker, "/EXPORT:avcodec_default_get_buffer2=_AheadLib_avcodec_default_get_buffer2,@692")
#pragma comment(linker, "/EXPORT:avcodec_default_get_format=_AheadLib_avcodec_default_get_format,@693")
#pragma comment(linker, "/EXPORT:avcodec_descriptor_get=_AheadLib_avcodec_descriptor_get,@694")
#pragma comment(linker, "/EXPORT:avcodec_descriptor_get_by_name=_AheadLib_avcodec_descriptor_get_by_name,@695")
#pragma comment(linker, "/EXPORT:avcodec_descriptor_next=_AheadLib_avcodec_descriptor_next,@696")
#pragma comment(linker, "/EXPORT:avcodec_encode_audio2=_AheadLib_avcodec_encode_audio2,@697")
#pragma comment(linker, "/EXPORT:avcodec_encode_subtitle=_AheadLib_avcodec_encode_subtitle,@698")
#pragma comment(linker, "/EXPORT:avcodec_encode_video2=_AheadLib_avcodec_encode_video2,@699")
#pragma comment(linker, "/EXPORT:avcodec_enum_to_chroma_pos=_AheadLib_avcodec_enum_to_chroma_pos,@700")
#pragma comment(linker, "/EXPORT:avcodec_fill_audio_frame=_AheadLib_avcodec_fill_audio_frame,@701")
#pragma comment(linker, "/EXPORT:avcodec_find_best_pix_fmt2=_AheadLib_avcodec_find_best_pix_fmt2,@702")
#pragma comment(linker, "/EXPORT:avcodec_find_best_pix_fmt_of_2=_AheadLib_avcodec_find_best_pix_fmt_of_2,@703")
#pragma comment(linker, "/EXPORT:avcodec_find_best_pix_fmt_of_list=_AheadLib_avcodec_find_best_pix_fmt_of_list,@704")
#pragma comment(linker, "/EXPORT:avcodec_find_decoder=_AheadLib_avcodec_find_decoder,@705")
#pragma comment(linker, "/EXPORT:avcodec_find_decoder_by_name=_AheadLib_avcodec_find_decoder_by_name,@706")
#pragma comment(linker, "/EXPORT:avcodec_find_encoder=_AheadLib_avcodec_find_encoder,@707")
#pragma comment(linker, "/EXPORT:avcodec_find_encoder_by_name=_AheadLib_avcodec_find_encoder_by_name,@708")
#pragma comment(linker, "/EXPORT:avcodec_flush_buffers=_AheadLib_avcodec_flush_buffers,@709")
#pragma comment(linker, "/EXPORT:avcodec_free_context=_AheadLib_avcodec_free_context,@710")
#pragma comment(linker, "/EXPORT:avcodec_get_chroma_sub_sample=_AheadLib_avcodec_get_chroma_sub_sample,@711")
#pragma comment(linker, "/EXPORT:avcodec_get_class=_AheadLib_avcodec_get_class,@712")
#pragma comment(linker, "/EXPORT:avcodec_get_context_defaults3=_AheadLib_avcodec_get_context_defaults3,@713")
#pragma comment(linker, "/EXPORT:avcodec_get_edge_width=_AheadLib_avcodec_get_edge_width,@714")
#pragma comment(linker, "/EXPORT:avcodec_get_frame_class=_AheadLib_avcodec_get_frame_class,@715")
#pragma comment(linker, "/EXPORT:avcodec_get_name=_AheadLib_avcodec_get_name,@716")
#pragma comment(linker, "/EXPORT:avcodec_get_pix_fmt_loss=_AheadLib_avcodec_get_pix_fmt_loss,@717")
#pragma comment(linker, "/EXPORT:avcodec_get_subtitle_rect_class=_AheadLib_avcodec_get_subtitle_rect_class,@718")
#pragma comment(linker, "/EXPORT:avcodec_get_type=_AheadLib_avcodec_get_type,@719")
#pragma comment(linker, "/EXPORT:avcodec_is_open=_AheadLib_avcodec_is_open,@720")
#pragma comment(linker, "/EXPORT:avcodec_license=_AheadLib_avcodec_license,@721")
#pragma comment(linker, "/EXPORT:avcodec_open2=_AheadLib_avcodec_open2,@722")
#pragma comment(linker, "/EXPORT:avcodec_parameters_alloc=_AheadLib_avcodec_parameters_alloc,@723")
#pragma comment(linker, "/EXPORT:avcodec_parameters_copy=_AheadLib_avcodec_parameters_copy,@724")
#pragma comment(linker, "/EXPORT:avcodec_parameters_free=_AheadLib_avcodec_parameters_free,@725")
#pragma comment(linker, "/EXPORT:avcodec_parameters_from_context=_AheadLib_avcodec_parameters_from_context,@726")
#pragma comment(linker, "/EXPORT:avcodec_parameters_to_context=_AheadLib_avcodec_parameters_to_context,@727")
#pragma comment(linker, "/EXPORT:avcodec_pix_fmt_to_codec_tag=_AheadLib_avcodec_pix_fmt_to_codec_tag,@728")
#pragma comment(linker, "/EXPORT:avcodec_profile_name=_AheadLib_avcodec_profile_name,@729")
#pragma comment(linker, "/EXPORT:avcodec_receive_frame=_AheadLib_avcodec_receive_frame,@730")
#pragma comment(linker, "/EXPORT:avcodec_receive_packet=_AheadLib_avcodec_receive_packet,@731")
#pragma comment(linker, "/EXPORT:avcodec_register=_AheadLib_avcodec_register,@732")
#pragma comment(linker, "/EXPORT:avcodec_register_all=_AheadLib_avcodec_register_all,@733")
#pragma comment(linker, "/EXPORT:avcodec_send_frame=_AheadLib_avcodec_send_frame,@734")
#pragma comment(linker, "/EXPORT:avcodec_send_packet=_AheadLib_avcodec_send_packet,@735")
#pragma comment(linker, "/EXPORT:avcodec_set_dimensions=_AheadLib_avcodec_set_dimensions,@736")
#pragma comment(linker, "/EXPORT:avcodec_string=_AheadLib_avcodec_string,@737")
#pragma comment(linker, "/EXPORT:avcodec_version=_AheadLib_avcodec_version,@738")
#pragma comment(linker, "/EXPORT:avdevice_app_to_dev_control_message=_AheadLib_avdevice_app_to_dev_control_message,@739")
#pragma comment(linker, "/EXPORT:avdevice_capabilities_create=_AheadLib_avdevice_capabilities_create,@740")
#pragma comment(linker, "/EXPORT:avdevice_capabilities_free=_AheadLib_avdevice_capabilities_free,@741")
#pragma comment(linker, "/EXPORT:avdevice_configuration=_AheadLib_avdevice_configuration,@742")
#pragma comment(linker, "/EXPORT:avdevice_dev_to_app_control_message=_AheadLib_avdevice_dev_to_app_control_message,@743")
#pragma comment(linker, "/EXPORT:avdevice_free_list_devices=_AheadLib_avdevice_free_list_devices,@744")
#pragma comment(linker, "/EXPORT:avdevice_license=_AheadLib_avdevice_license,@745")
#pragma comment(linker, "/EXPORT:avdevice_list_devices=_AheadLib_avdevice_list_devices,@746")
#pragma comment(linker, "/EXPORT:avdevice_list_input_sources=_AheadLib_avdevice_list_input_sources,@747")
#pragma comment(linker, "/EXPORT:avdevice_list_output_sinks=_AheadLib_avdevice_list_output_sinks,@748")
#pragma comment(linker, "/EXPORT:avdevice_register_all=_AheadLib_avdevice_register_all,@749")
#pragma comment(linker, "/EXPORT:avdevice_version=_AheadLib_avdevice_version,@750")
#pragma comment(linker, "/EXPORT:avfilter_add_matrix=_AheadLib_avfilter_add_matrix,@751")
#pragma comment(linker, "/EXPORT:avfilter_config_links=_AheadLib_avfilter_config_links,@753")
#pragma comment(linker, "/EXPORT:avfilter_configuration=_AheadLib_avfilter_configuration,@754")
#pragma comment(linker, "/EXPORT:avfilter_free=_AheadLib_avfilter_free,@755")
#pragma comment(linker, "/EXPORT:avfilter_get_by_name=_AheadLib_avfilter_get_by_name,@756")
#pragma comment(linker, "/EXPORT:avfilter_get_class=_AheadLib_avfilter_get_class,@757")
#pragma comment(linker, "/EXPORT:avfilter_get_matrix=_AheadLib_avfilter_get_matrix,@758")
#pragma comment(linker, "/EXPORT:avfilter_graph_add_filter=_AheadLib_avfilter_graph_add_filter,@759")
#pragma comment(linker, "/EXPORT:avfilter_graph_alloc=_AheadLib_avfilter_graph_alloc,@760")
#pragma comment(linker, "/EXPORT:avfilter_graph_alloc_filter=_AheadLib_avfilter_graph_alloc_filter,@761")
#pragma comment(linker, "/EXPORT:avfilter_graph_config=_AheadLib_avfilter_graph_config,@762")
#pragma comment(linker, "/EXPORT:avfilter_graph_create_filter=_AheadLib_avfilter_graph_create_filter,@763")
#pragma comment(linker, "/EXPORT:avfilter_graph_dump=_AheadLib_avfilter_graph_dump,@764")
#pragma comment(linker, "/EXPORT:avfilter_graph_free=_AheadLib_avfilter_graph_free,@765")
#pragma comment(linker, "/EXPORT:avfilter_graph_get_filter=_AheadLib_avfilter_graph_get_filter,@766")
#pragma comment(linker, "/EXPORT:avfilter_graph_parse=_AheadLib_avfilter_graph_parse,@767")
#pragma comment(linker, "/EXPORT:avfilter_graph_parse2=_AheadLib_avfilter_graph_parse2,@768")
#pragma comment(linker, "/EXPORT:avfilter_graph_parse_ptr=_AheadLib_avfilter_graph_parse_ptr,@769")
#pragma comment(linker, "/EXPORT:avfilter_graph_queue_command=_AheadLib_avfilter_graph_queue_command,@770")
#pragma comment(linker, "/EXPORT:avfilter_graph_request_oldest=_AheadLib_avfilter_graph_request_oldest,@771")
#pragma comment(linker, "/EXPORT:avfilter_graph_send_command=_AheadLib_avfilter_graph_send_command,@772")
#pragma comment(linker, "/EXPORT:avfilter_graph_set_auto_convert=_AheadLib_avfilter_graph_set_auto_convert,@773")
#pragma comment(linker, "/EXPORT:avfilter_init_dict=_AheadLib_avfilter_init_dict,@774")
#pragma comment(linker, "/EXPORT:avfilter_init_filter=_AheadLib_avfilter_init_filter,@775")
#pragma comment(linker, "/EXPORT:avfilter_init_str=_AheadLib_avfilter_init_str,@776")
#pragma comment(linker, "/EXPORT:avfilter_inout_alloc=_AheadLib_avfilter_inout_alloc,@777")
#pragma comment(linker, "/EXPORT:avfilter_inout_free=_AheadLib_avfilter_inout_free,@778")
#pragma comment(linker, "/EXPORT:avfilter_insert_filter=_AheadLib_avfilter_insert_filter,@779")
#pragma comment(linker, "/EXPORT:avfilter_license=_AheadLib_avfilter_license,@780")
#pragma comment(linker, "/EXPORT:avfilter_link=_AheadLib_avfilter_link,@781")
#pragma comment(linker, "/EXPORT:avfilter_link_free=_AheadLib_avfilter_link_free,@782")
#pragma comment(linker, "/EXPORT:avfilter_link_get_channels=_AheadLib_avfilter_link_get_channels,@783")
#pragma comment(linker, "/EXPORT:avfilter_link_set_closed=_AheadLib_avfilter_link_set_closed,@784")
#pragma comment(linker, "/EXPORT:avfilter_make_format64_list=_AheadLib_avfilter_make_format64_list,@785")
#pragma comment(linker, "/EXPORT:avfilter_mul_matrix=_AheadLib_avfilter_mul_matrix,@786")
#pragma comment(linker, "/EXPORT:avfilter_next=_AheadLib_avfilter_next,@787")
#pragma comment(linker, "/EXPORT:avfilter_open=_AheadLib_avfilter_open,@788")
#pragma comment(linker, "/EXPORT:avfilter_pad_count=_AheadLib_avfilter_pad_count,@789")
#pragma comment(linker, "/EXPORT:avfilter_pad_get_name=_AheadLib_avfilter_pad_get_name,@790")
#pragma comment(linker, "/EXPORT:avfilter_pad_get_type=_AheadLib_avfilter_pad_get_type,@791")
#pragma comment(linker, "/EXPORT:avfilter_process_command=_AheadLib_avfilter_process_command,@792")
#pragma comment(linker, "/EXPORT:avfilter_register=_AheadLib_avfilter_register,@793")
#pragma comment(linker, "/EXPORT:avfilter_register_all=_AheadLib_avfilter_register_all,@794")
#pragma comment(linker, "/EXPORT:avfilter_sub_matrix=_AheadLib_avfilter_sub_matrix,@795")
#pragma comment(linker, "/EXPORT:avfilter_transform=_AheadLib_avfilter_transform,@796")
#pragma comment(linker, "/EXPORT:avfilter_uninit=_AheadLib_avfilter_uninit,@797")
#pragma comment(linker, "/EXPORT:avfilter_version=_AheadLib_avfilter_version,@798")
#pragma comment(linker, "/EXPORT:avformat_alloc_context=_AheadLib_avformat_alloc_context,@799")
#pragma comment(linker, "/EXPORT:avformat_alloc_output_context2=_AheadLib_avformat_alloc_output_context2,@800")
#pragma comment(linker, "/EXPORT:avformat_close_input=_AheadLib_avformat_close_input,@801")
#pragma comment(linker, "/EXPORT:avformat_configuration=_AheadLib_avformat_configuration,@802")
#pragma comment(linker, "/EXPORT:avformat_find_stream_info=_AheadLib_avformat_find_stream_info,@803")
#pragma comment(linker, "/EXPORT:avformat_flush=_AheadLib_avformat_flush,@804")
#pragma comment(linker, "/EXPORT:avformat_free_context=_AheadLib_avformat_free_context,@805")
#pragma comment(linker, "/EXPORT:avformat_get_class=_AheadLib_avformat_get_class,@806")
#pragma comment(linker, "/EXPORT:avformat_get_mov_audio_tags=_AheadLib_avformat_get_mov_audio_tags,@807")
#pragma comment(linker, "/EXPORT:avformat_get_mov_video_tags=_AheadLib_avformat_get_mov_video_tags,@808")
#pragma comment(linker, "/EXPORT:avformat_get_riff_audio_tags=_AheadLib_avformat_get_riff_audio_tags,@809")
#pragma comment(linker, "/EXPORT:avformat_get_riff_video_tags=_AheadLib_avformat_get_riff_video_tags,@810")
#pragma comment(linker, "/EXPORT:avformat_init_output=_AheadLib_avformat_init_output,@811")
#pragma comment(linker, "/EXPORT:avformat_license=_AheadLib_avformat_license,@812")
#pragma comment(linker, "/EXPORT:avformat_match_stream_specifier=_AheadLib_avformat_match_stream_specifier,@813")
#pragma comment(linker, "/EXPORT:avformat_network_deinit=_AheadLib_avformat_network_deinit,@814")
#pragma comment(linker, "/EXPORT:avformat_network_init=_AheadLib_avformat_network_init,@815")
#pragma comment(linker, "/EXPORT:avformat_new_stream=_AheadLib_avformat_new_stream,@816")
#pragma comment(linker, "/EXPORT:avformat_open_input=_AheadLib_avformat_open_input,@817")
#pragma comment(linker, "/EXPORT:avformat_query_codec=_AheadLib_avformat_query_codec,@818")
#pragma comment(linker, "/EXPORT:avformat_queue_attached_pictures=_AheadLib_avformat_queue_attached_pictures,@819")
#pragma comment(linker, "/EXPORT:avformat_seek_file=_AheadLib_avformat_seek_file,@820")
#pragma comment(linker, "/EXPORT:avformat_transfer_internal_stream_timing_info=_AheadLib_avformat_transfer_internal_stream_timing_info,@821")
#pragma comment(linker, "/EXPORT:avformat_version=_AheadLib_avformat_version,@822")
#pragma comment(linker, "/EXPORT:avformat_write_header=_AheadLib_avformat_write_header,@823")
#pragma comment(linker, "/EXPORT:avio_accept=_AheadLib_avio_accept,@824")
#pragma comment(linker, "/EXPORT:avio_alloc_context=_AheadLib_avio_alloc_context,@825")
#pragma comment(linker, "/EXPORT:avio_check=_AheadLib_avio_check,@826")
#pragma comment(linker, "/EXPORT:avio_close=_AheadLib_avio_close,@827")
#pragma comment(linker, "/EXPORT:avio_close_dir=_AheadLib_avio_close_dir,@828")
#pragma comment(linker, "/EXPORT:avio_close_dyn_buf=_AheadLib_avio_close_dyn_buf,@829")
#pragma comment(linker, "/EXPORT:avio_closep=_AheadLib_avio_closep,@830")
#pragma comment(linker, "/EXPORT:avio_enum_protocols=_AheadLib_avio_enum_protocols,@831")
#pragma comment(linker, "/EXPORT:avio_feof=_AheadLib_avio_feof,@832")
#pragma comment(linker, "/EXPORT:avio_find_protocol_name=_AheadLib_avio_find_protocol_name,@833")
#pragma comment(linker, "/EXPORT:avio_flush=_AheadLib_avio_flush,@834")
#pragma comment(linker, "/EXPORT:avio_free_directory_entry=_AheadLib_avio_free_directory_entry,@835")
#pragma comment(linker, "/EXPORT:avio_get_str=_AheadLib_avio_get_str,@836")
#pragma comment(linker, "/EXPORT:avio_get_str16be=_AheadLib_avio_get_str16be,@837")
#pragma comment(linker, "/EXPORT:avio_get_str16le=_AheadLib_avio_get_str16le,@838")
#pragma comment(linker, "/EXPORT:avio_handshake=_AheadLib_avio_handshake,@839")
#pragma comment(linker, "/EXPORT:avio_open=_AheadLib_avio_open,@840")
#pragma comment(linker, "/EXPORT:avio_open2=_AheadLib_avio_open2,@841")
#pragma comment(linker, "/EXPORT:avio_open_dir=_AheadLib_avio_open_dir,@842")
#pragma comment(linker, "/EXPORT:avio_open_dyn_buf=_AheadLib_avio_open_dyn_buf,@843")
#pragma comment(linker, "/EXPORT:avio_pause=_AheadLib_avio_pause,@844")
#pragma comment(linker, "/EXPORT:avio_printf=_AheadLib_avio_printf,@845")
#pragma comment(linker, "/EXPORT:avio_put_str=_AheadLib_avio_put_str,@846")
#pragma comment(linker, "/EXPORT:avio_put_str16be=_AheadLib_avio_put_str16be,@847")
#pragma comment(linker, "/EXPORT:avio_put_str16le=_AheadLib_avio_put_str16le,@848")
#pragma comment(linker, "/EXPORT:avio_r8=_AheadLib_avio_r8,@849")
#pragma comment(linker, "/EXPORT:avio_rb16=_AheadLib_avio_rb16,@850")
#pragma comment(linker, "/EXPORT:avio_rb24=_AheadLib_avio_rb24,@851")
#pragma comment(linker, "/EXPORT:avio_rb32=_AheadLib_avio_rb32,@852")
#pragma comment(linker, "/EXPORT:avio_rb64=_AheadLib_avio_rb64,@853")
#pragma comment(linker, "/EXPORT:avio_read=_AheadLib_avio_read,@854")
#pragma comment(linker, "/EXPORT:avio_read_dir=_AheadLib_avio_read_dir,@855")
#pragma comment(linker, "/EXPORT:avio_read_to_bprint=_AheadLib_avio_read_to_bprint,@856")
#pragma comment(linker, "/EXPORT:avio_rl16=_AheadLib_avio_rl16,@857")
#pragma comment(linker, "/EXPORT:avio_rl24=_AheadLib_avio_rl24,@858")
#pragma comment(linker, "/EXPORT:avio_rl32=_AheadLib_avio_rl32,@859")
#pragma comment(linker, "/EXPORT:avio_rl64=_AheadLib_avio_rl64,@860")
#pragma comment(linker, "/EXPORT:avio_seek=_AheadLib_avio_seek,@861")
#pragma comment(linker, "/EXPORT:avio_seek_time=_AheadLib_avio_seek_time,@862")
#pragma comment(linker, "/EXPORT:avio_size=_AheadLib_avio_size,@863")
#pragma comment(linker, "/EXPORT:avio_skip=_AheadLib_avio_skip,@864")
#pragma comment(linker, "/EXPORT:avio_w8=_AheadLib_avio_w8,@865")
#pragma comment(linker, "/EXPORT:avio_wb16=_AheadLib_avio_wb16,@866")
#pragma comment(linker, "/EXPORT:avio_wb24=_AheadLib_avio_wb24,@867")
#pragma comment(linker, "/EXPORT:avio_wb32=_AheadLib_avio_wb32,@868")
#pragma comment(linker, "/EXPORT:avio_wb64=_AheadLib_avio_wb64,@869")
#pragma comment(linker, "/EXPORT:avio_wl16=_AheadLib_avio_wl16,@870")
#pragma comment(linker, "/EXPORT:avio_wl24=_AheadLib_avio_wl24,@871")
#pragma comment(linker, "/EXPORT:avio_wl32=_AheadLib_avio_wl32,@872")
#pragma comment(linker, "/EXPORT:avio_wl64=_AheadLib_avio_wl64,@873")
#pragma comment(linker, "/EXPORT:avio_write=_AheadLib_avio_write,@874")
#pragma comment(linker, "/EXPORT:avio_write_marker=_AheadLib_avio_write_marker,@875")
#pragma comment(linker, "/EXPORT:avpicture_alloc=_AheadLib_avpicture_alloc,@876")
#pragma comment(linker, "/EXPORT:avpicture_fill=_AheadLib_avpicture_fill,@877")
#pragma comment(linker, "/EXPORT:avpicture_free=_AheadLib_avpicture_free,@878")
#pragma comment(linker, "/EXPORT:avpicture_get_size=_AheadLib_avpicture_get_size,@879")
#pragma comment(linker, "/EXPORT:avpicture_layout=_AheadLib_avpicture_layout,@880")
#pragma comment(linker, "/EXPORT:avpriv_aac_parse_header=_AheadLib_avpriv_aac_parse_header,@881")
#pragma comment(linker, "/EXPORT:avpriv_align_put_bits=_AheadLib_avpriv_align_put_bits,@882")
#pragma comment(linker, "/EXPORT:avpriv_alloc_fixed_dsp=_AheadLib_avpriv_alloc_fixed_dsp,@883")
#pragma comment(linker, "/EXPORT:avpriv_bprint_to_extradata=_AheadLib_avpriv_bprint_to_extradata,@884")
#pragma comment(linker, "/EXPORT:avpriv_codec_get_cap_skip_frame_fill_param=_AheadLib_avpriv_codec_get_cap_skip_frame_fill_param,@885")
#pragma comment(linker, "/EXPORT:avpriv_copy_bits=_AheadLib_avpriv_copy_bits,@886")
#pragma comment(linker, "/EXPORT:avpriv_copy_pce_data=_AheadLib_avpriv_copy_pce_data,@887")
#pragma comment(linker, "/EXPORT:avpriv_dict_set_timestamp=_AheadLib_avpriv_dict_set_timestamp,@888")
#pragma comment(linker, "/EXPORT:avpriv_emms_yasm=_AheadLib_avpriv_emms_yasm,@889")
#pragma comment(linker, "/EXPORT:avpriv_find_pix_fmt=_AheadLib_avpriv_find_pix_fmt,@890")
#pragma comment(linker, "/EXPORT:avpriv_find_start_code=_AheadLib_avpriv_find_start_code,@891")
#pragma comment(linker, "/EXPORT:avpriv_float_dsp_alloc=_AheadLib_avpriv_float_dsp_alloc,@892")
#pragma comment(linker, "/EXPORT:avpriv_frame_get_metadatap=_AheadLib_avpriv_frame_get_metadatap,@893")
#pragma comment(linker, "/EXPORT:avpriv_get_gamma_from_trc=_AheadLib_avpriv_get_gamma_from_trc,@894")
#pragma comment(linker, "/EXPORT:avpriv_get_raw_pix_fmt_tags=_AheadLib_avpriv_get_raw_pix_fmt_tags,@895")
#pragma comment(linker, "/EXPORT:avpriv_get_trc_function_from_trc=_AheadLib_avpriv_get_trc_function_from_trc,@896")
#pragma comment(linker, "/EXPORT:avpriv_h264_has_num_reorder_frames=_AheadLib_avpriv_h264_has_num_reorder_frames,@897")
#pragma comment(linker, "/EXPORT:avpriv_init_lls=_AheadLib_avpriv_init_lls,@898")
#pragma comment(linker, "/EXPORT:avpriv_io_delete=_AheadLib_avpriv_io_delete,@899")
#pragma comment(linker, "/EXPORT:avpriv_io_move=_AheadLib_avpriv_io_move,@900")
#pragma comment(linker, "/EXPORT:avpriv_lock_avformat=_AheadLib_avpriv_lock_avformat,@901")
#pragma comment(linker, "/EXPORT:avpriv_mpa_decode_header=_AheadLib_avpriv_mpa_decode_header,@902")
#pragma comment(linker, "/EXPORT:avpriv_mpa_decode_header2=_AheadLib_avpriv_mpa_decode_header2,@903")
#pragma comment(linker, "/EXPORT:avpriv_mpeg4audio_get_config=_AheadLib_avpriv_mpeg4audio_get_config,@904")
#pragma comment(linker, "/EXPORT:avpriv_mpegaudio_decode_header=_AheadLib_avpriv_mpegaudio_decode_header,@905")
#pragma comment(linker, "/EXPORT:avpriv_mpegts_parse_close=_AheadLib_avpriv_mpegts_parse_close,@906")
#pragma comment(linker, "/EXPORT:avpriv_mpegts_parse_open=_AheadLib_avpriv_mpegts_parse_open,@907")
#pragma comment(linker, "/EXPORT:avpriv_mpegts_parse_packet=_AheadLib_avpriv_mpegts_parse_packet,@908")
#pragma comment(linker, "/EXPORT:avpriv_new_chapter=_AheadLib_avpriv_new_chapter,@909")
#pragma comment(linker, "/EXPORT:avpriv_put_string=_AheadLib_avpriv_put_string,@910")
#pragma comment(linker, "/EXPORT:avpriv_report_missing_feature=_AheadLib_avpriv_report_missing_feature,@911")
#pragma comment(linker, "/EXPORT:avpriv_request_sample=_AheadLib_avpriv_request_sample,@912")
#pragma comment(linker, "/EXPORT:avpriv_scalarproduct_float_c=_AheadLib_avpriv_scalarproduct_float_c,@913")
#pragma comment(linker, "/EXPORT:avpriv_set_pts_info=_AheadLib_avpriv_set_pts_info,@914")
#pragma comment(linker, "/EXPORT:avpriv_set_systematic_pal2=_AheadLib_avpriv_set_systematic_pal2,@915")
#pragma comment(linker, "/EXPORT:avpriv_snprintf=_AheadLib_avpriv_snprintf,@916")
#pragma comment(linker, "/EXPORT:avpriv_solve_lls=_AheadLib_avpriv_solve_lls,@917")
#pragma comment(linker, "/EXPORT:avpriv_split_xiph_headers=_AheadLib_avpriv_split_xiph_headers,@918")
#pragma comment(linker, "/EXPORT:avpriv_strtod=_AheadLib_avpriv_strtod,@919")
#pragma comment(linker, "/EXPORT:avpriv_toupper4=_AheadLib_avpriv_toupper4,@920")
#pragma comment(linker, "/EXPORT:avpriv_unlock_avformat=_AheadLib_avpriv_unlock_avformat,@921")
#pragma comment(linker, "/EXPORT:avpriv_vsnprintf=_AheadLib_avpriv_vsnprintf,@922")
#pragma comment(linker, "/EXPORT:avsubtitle_free=_AheadLib_avsubtitle_free,@923")
#pragma comment(linker, "/EXPORT:avutil_configuration=_AheadLib_avutil_configuration,@924")
#pragma comment(linker, "/EXPORT:avutil_license=_AheadLib_avutil_license,@925")
#pragma comment(linker, "/EXPORT:avutil_version=_AheadLib_avutil_version,@926")
#pragma comment(linker, "/EXPORT:ffio_open_dyn_packet_buf=_AheadLib_ffio_open_dyn_packet_buf,@927")
#pragma comment(linker, "/EXPORT:ffio_set_buf_size=_AheadLib_ffio_set_buf_size,@928")
#pragma comment(linker, "/EXPORT:ffurl_close=_AheadLib_ffurl_close,@929")
#pragma comment(linker, "/EXPORT:ffurl_open=_AheadLib_ffurl_open,@930")
#pragma comment(linker, "/EXPORT:ffurl_write=_AheadLib_ffurl_write,@931")
#pragma comment(linker, "/EXPORT:swr_alloc=_AheadLib_swr_alloc,@932")
#pragma comment(linker, "/EXPORT:swr_alloc_set_opts=_AheadLib_swr_alloc_set_opts,@933")
#pragma comment(linker, "/EXPORT:swr_build_matrix=_AheadLib_swr_build_matrix,@934")
#pragma comment(linker, "/EXPORT:swr_close=_AheadLib_swr_close,@935")
#pragma comment(linker, "/EXPORT:swr_config_frame=_AheadLib_swr_config_frame,@936")
#pragma comment(linker, "/EXPORT:swr_convert=_AheadLib_swr_convert,@937")
#pragma comment(linker, "/EXPORT:swr_convert_frame=_AheadLib_swr_convert_frame,@938")
#pragma comment(linker, "/EXPORT:swr_drop_output=_AheadLib_swr_drop_output,@939")
#pragma comment(linker, "/EXPORT:swr_free=_AheadLib_swr_free,@940")
#pragma comment(linker, "/EXPORT:swr_get_class=_AheadLib_swr_get_class,@941")
#pragma comment(linker, "/EXPORT:swr_get_delay=_AheadLib_swr_get_delay,@942")
#pragma comment(linker, "/EXPORT:swr_get_out_samples=_AheadLib_swr_get_out_samples,@943")
#pragma comment(linker, "/EXPORT:swr_init=_AheadLib_swr_init,@944")
#pragma comment(linker, "/EXPORT:swr_inject_silence=_AheadLib_swr_inject_silence,@945")
#pragma comment(linker, "/EXPORT:swr_is_initialized=_AheadLib_swr_is_initialized,@946")
#pragma comment(linker, "/EXPORT:swr_next_pts=_AheadLib_swr_next_pts,@947")
#pragma comment(linker, "/EXPORT:swr_set_channel_mapping=_AheadLib_swr_set_channel_mapping,@948")
#pragma comment(linker, "/EXPORT:swr_set_compensation=_AheadLib_swr_set_compensation,@949")
#pragma comment(linker, "/EXPORT:swr_set_matrix=_AheadLib_swr_set_matrix,@950")
#pragma comment(linker, "/EXPORT:swresample_configuration=_AheadLib_swresample_configuration,@951")
#pragma comment(linker, "/EXPORT:swresample_license=_AheadLib_swresample_license,@952")
#pragma comment(linker, "/EXPORT:swresample_version=_AheadLib_swresample_version,@953")
#pragma comment(linker, "/EXPORT:sws_addVec=_AheadLib_sws_addVec,@954")
#pragma comment(linker, "/EXPORT:sws_allocVec=_AheadLib_sws_allocVec,@955")
#pragma comment(linker, "/EXPORT:sws_alloc_context=_AheadLib_sws_alloc_context,@956")
#pragma comment(linker, "/EXPORT:sws_alloc_set_opts=_AheadLib_sws_alloc_set_opts,@957")
#pragma comment(linker, "/EXPORT:sws_cloneVec=_AheadLib_sws_cloneVec,@958")
#pragma comment(linker, "/EXPORT:sws_convVec=_AheadLib_sws_convVec,@959")
#pragma comment(linker, "/EXPORT:sws_convertPalette8ToPacked24=_AheadLib_sws_convertPalette8ToPacked24,@960")
#pragma comment(linker, "/EXPORT:sws_convertPalette8ToPacked32=_AheadLib_sws_convertPalette8ToPacked32,@961")
#pragma comment(linker, "/EXPORT:sws_freeContext=_AheadLib_sws_freeContext,@962")
#pragma comment(linker, "/EXPORT:sws_freeFilter=_AheadLib_sws_freeFilter,@963")
#pragma comment(linker, "/EXPORT:sws_freeVec=_AheadLib_sws_freeVec,@964")
#pragma comment(linker, "/EXPORT:sws_getCachedContext=_AheadLib_sws_getCachedContext,@965")
#pragma comment(linker, "/EXPORT:sws_getCoefficients=_AheadLib_sws_getCoefficients,@966")
#pragma comment(linker, "/EXPORT:sws_getColorspaceDetails=_AheadLib_sws_getColorspaceDetails,@967")
#pragma comment(linker, "/EXPORT:sws_getConstVec=_AheadLib_sws_getConstVec,@968")
#pragma comment(linker, "/EXPORT:sws_getContext=_AheadLib_sws_getContext,@969")
#pragma comment(linker, "/EXPORT:sws_getDefaultFilter=_AheadLib_sws_getDefaultFilter,@970")
#pragma comment(linker, "/EXPORT:sws_getGaussianVec=_AheadLib_sws_getGaussianVec,@971")
#pragma comment(linker, "/EXPORT:sws_getIdentityVec=_AheadLib_sws_getIdentityVec,@972")
#pragma comment(linker, "/EXPORT:sws_get_class=_AheadLib_sws_get_class,@973")
#pragma comment(linker, "/EXPORT:sws_init_context=_AheadLib_sws_init_context,@974")
#pragma comment(linker, "/EXPORT:sws_isSupportedEndiannessConversion=_AheadLib_sws_isSupportedEndiannessConversion,@975")
#pragma comment(linker, "/EXPORT:sws_isSupportedInput=_AheadLib_sws_isSupportedInput,@976")
#pragma comment(linker, "/EXPORT:sws_isSupportedOutput=_AheadLib_sws_isSupportedOutput,@977")
#pragma comment(linker, "/EXPORT:sws_normalizeVec=_AheadLib_sws_normalizeVec,@978")
#pragma comment(linker, "/EXPORT:sws_printVec2=_AheadLib_sws_printVec2,@979")
#pragma comment(linker, "/EXPORT:sws_scale=_AheadLib_sws_scale,@980")
#pragma comment(linker, "/EXPORT:sws_scaleVec=_AheadLib_sws_scaleVec,@981")
#pragma comment(linker, "/EXPORT:sws_setColorspaceDetails=_AheadLib_sws_setColorspaceDetails,@982")
#pragma comment(linker, "/EXPORT:sws_shiftVec=_AheadLib_sws_shiftVec,@983")
#pragma comment(linker, "/EXPORT:sws_subVec=_AheadLib_sws_subVec,@984")
#pragma comment(linker, "/EXPORT:swscale_configuration=_AheadLib_swscale_configuration,@985")
#pragma comment(linker, "/EXPORT:swscale_license=_AheadLib_swscale_license,@986")
#pragma comment(linker, "/EXPORT:swscale_version=_AheadLib_swscale_version,@987")
#pragma comment(linker, "/EXPORT:url_feof=_AheadLib_url_feof,@988")
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 原函数地址指针
PVOID pfnaudio_resample;
PVOID pfnaudio_resample_close;
PVOID pfnav_abuffersink_params_alloc;
PVOID pfnav_add_i;
PVOID pfnav_add_index_entry;
PVOID pfnav_add_q;
PVOID pfnav_add_stable;
PVOID pfnav_adler32_update;
PVOID pfnav_aes_alloc;
PVOID pfnav_aes_crypt;
PVOID pfnav_aes_ctr_alloc;
PVOID pfnav_aes_ctr_crypt;
PVOID pfnav_aes_ctr_free;
PVOID pfnav_aes_ctr_get_iv;
PVOID pfnav_aes_ctr_increment_iv;
PVOID pfnav_aes_ctr_init;
PVOID pfnav_aes_ctr_set_iv;
PVOID pfnav_aes_ctr_set_random_iv;
PVOID pfnav_aes_init;
PVOID pfnav_append_packet;
PVOID pfnav_append_path_component;
PVOID pfnav_apply_bitstream_filters;
PVOID pfnav_asprintf;
PVOID pfnav_assert0_fpu;
PVOID pfnav_audio_convert;
PVOID pfnav_audio_convert_alloc;
PVOID pfnav_audio_convert_free;
PVOID pfnav_audio_fifo_alloc;
PVOID pfnav_audio_fifo_drain;
PVOID pfnav_audio_fifo_free;
PVOID pfnav_audio_fifo_peek;
PVOID pfnav_audio_fifo_peek_at;
PVOID pfnav_audio_fifo_read;
PVOID pfnav_audio_fifo_realloc;
PVOID pfnav_audio_fifo_reset;
PVOID pfnav_audio_fifo_size;
PVOID pfnav_audio_fifo_space;
PVOID pfnav_audio_fifo_write;
PVOID pfnav_audio_resample_init;
PVOID pfnav_base64_decode;
PVOID pfnav_base64_encode;
PVOID pfnav_basename;
PVOID pfnav_bitstream_filter_close;
PVOID pfnav_bitstream_filter_filter;
PVOID pfnav_bitstream_filter_init;
PVOID pfnav_bitstream_filter_next;
PVOID pfnav_blowfish_alloc;
PVOID pfnav_blowfish_crypt;
PVOID pfnav_blowfish_crypt_ecb;
PVOID pfnav_blowfish_init;
PVOID pfnav_bmg_get;
PVOID pfnav_bprint_append_data;
PVOID pfnav_bprint_channel_layout;
PVOID pfnav_bprint_chars;
PVOID pfnav_bprint_clear;
PVOID pfnav_bprint_escape;
PVOID pfnav_bprint_finalize;
PVOID pfnav_bprint_get_buffer;
PVOID pfnav_bprint_init;
PVOID pfnav_bprint_init_for_buffer;
PVOID pfnav_bprint_strftime;
PVOID pfnav_bprintf;
PVOID pfnav_bsf_alloc;
PVOID pfnav_bsf_free;
PVOID pfnav_bsf_get_by_name;
PVOID pfnav_bsf_get_class;
PVOID pfnav_bsf_get_null_filter;
PVOID pfnav_bsf_init;
PVOID pfnav_bsf_list_alloc;
PVOID pfnav_bsf_list_append;
PVOID pfnav_bsf_list_append2;
PVOID pfnav_bsf_list_finalize;
PVOID pfnav_bsf_list_free;
PVOID pfnav_bsf_list_parse_str;
PVOID pfnav_bsf_next;
PVOID pfnav_bsf_receive_packet;
PVOID pfnav_bsf_send_packet;
PVOID pfnav_buffer_alloc;
PVOID pfnav_buffer_allocz;
PVOID pfnav_buffer_create;
PVOID pfnav_buffer_default_free;
PVOID pfnav_buffer_get_opaque;
PVOID pfnav_buffer_get_ref_count;
PVOID pfnav_buffer_is_writable;
PVOID pfnav_buffer_make_writable;
PVOID pfnav_buffer_pool_get;
PVOID pfnav_buffer_pool_init;
PVOID pfnav_buffer_pool_init2;
PVOID pfnav_buffer_pool_uninit;
PVOID pfnav_buffer_realloc;
PVOID pfnav_buffer_ref;
PVOID pfnav_buffer_unref;
PVOID pfnav_buffersink_get_frame;
PVOID pfnav_buffersink_get_frame_flags;
PVOID pfnav_buffersink_get_frame_rate;
PVOID pfnav_buffersink_get_samples;
PVOID pfnav_buffersink_params_alloc;
PVOID pfnav_buffersink_set_frame_size;
PVOID pfnav_buffersrc_add_frame;
PVOID pfnav_buffersrc_add_frame_flags;
PVOID pfnav_buffersrc_get_nb_failed_requests;
PVOID pfnav_buffersrc_parameters_alloc;
PVOID pfnav_buffersrc_parameters_set;
PVOID pfnav_buffersrc_write_frame;
PVOID pfnav_calloc;
PVOID pfnav_camellia_alloc;
PVOID pfnav_camellia_crypt;
PVOID pfnav_camellia_init;
PVOID pfnav_cast5_alloc;
PVOID pfnav_cast5_crypt;
PVOID pfnav_cast5_crypt2;
PVOID pfnav_cast5_init;
PVOID pfnav_channel_layout_extract_channel;
PVOID pfnav_chroma_location_name;
PVOID pfnav_cmp_i;
PVOID pfnav_codec_get_chroma_intra_matrix;
PVOID pfnav_codec_get_codec_descriptor;
PVOID pfnav_codec_get_codec_properties;
PVOID pfnav_codec_get_id;
PVOID pfnav_codec_get_lowres;
PVOID pfnav_codec_get_max_lowres;
PVOID pfnav_codec_get_pkt_timebase;
PVOID pfnav_codec_get_seek_preroll;
PVOID pfnav_codec_get_tag;
PVOID pfnav_codec_get_tag2;
PVOID pfnav_codec_is_decoder;
PVOID pfnav_codec_is_encoder;
PVOID pfnav_codec_next;
PVOID pfnav_codec_set_chroma_intra_matrix;
PVOID pfnav_codec_set_codec_descriptor;
PVOID pfnav_codec_set_lowres;
PVOID pfnav_codec_set_pkt_timebase;
PVOID pfnav_codec_set_seek_preroll;
PVOID pfnav_color_primaries_name;
PVOID pfnav_color_range_name;
PVOID pfnav_color_space_name;
PVOID pfnav_color_transfer_name;
PVOID pfnav_compare_mod;
PVOID pfnav_compare_ts;
PVOID pfnav_convert_lang_to;
PVOID pfnav_copy_packet;
PVOID pfnav_copy_packet_side_data;
PVOID pfnav_cpb_properties_alloc;
PVOID pfnav_cpu_count;
PVOID pfnav_crc;
PVOID pfnav_crc_get_table;
PVOID pfnav_crc_init;
PVOID pfnav_d2q;
PVOID pfnav_d2str;
PVOID pfnav_d3d11va_alloc_context;
PVOID pfnav_default_get_category;
PVOID pfnav_default_item_name;
PVOID pfnav_demuxer_open;
PVOID pfnav_des_alloc;
PVOID pfnav_des_crypt;
PVOID pfnav_des_init;
PVOID pfnav_des_mac;
PVOID pfnav_dict_copy;
PVOID pfnav_dict_count;
PVOID pfnav_dict_free;
PVOID pfnav_dict_get;
PVOID pfnav_dict_get_string;
PVOID pfnav_dict_parse_string;
PVOID pfnav_dict_set;
PVOID pfnav_dict_set_int;
PVOID pfnav_dirac_parse_sequence_header;
PVOID pfnav_dirname;
PVOID pfnav_display_matrix_flip;
PVOID pfnav_display_rotation_get;
PVOID pfnav_display_rotation_set;
PVOID pfnav_div_i;
PVOID pfnav_div_q;
PVOID pfnav_downmix_info_update_side_data;
PVOID pfnav_dump_format;
PVOID pfnav_dup_packet;
PVOID pfnav_dv_codec_profile;
PVOID pfnav_dv_codec_profile2;
PVOID pfnav_dv_frame_profile;
PVOID pfnav_dynarray2_add;
PVOID pfnav_dynarray_add;
PVOID pfnav_dynarray_add_nofree;
PVOID pfnav_escape;
PVOID pfnav_expr_eval;
PVOID pfnav_expr_free;
PVOID pfnav_expr_parse;
PVOID pfnav_expr_parse_and_eval;
PVOID pfnav_fast_malloc;
PVOID pfnav_fast_mallocz;
PVOID pfnav_fast_padded_malloc;
PVOID pfnav_fast_padded_mallocz;
PVOID pfnav_fast_realloc;
PVOID pfnav_fft_calc;
PVOID pfnav_fft_end;
PVOID pfnav_fft_init;
PVOID pfnav_fft_permute;
PVOID pfnav_fifo_alloc;
PVOID pfnav_fifo_alloc_array;
PVOID pfnav_fifo_drain;
PVOID pfnav_fifo_free;
PVOID pfnav_fifo_freep;
PVOID pfnav_fifo_generic_peek;
PVOID pfnav_fifo_generic_peek_at;
PVOID pfnav_fifo_generic_read;
PVOID pfnav_fifo_generic_write;
PVOID pfnav_fifo_grow;
PVOID pfnav_fifo_realloc2;
PVOID pfnav_fifo_reset;
PVOID pfnav_fifo_size;
PVOID pfnav_fifo_space;
PVOID pfnav_file_map;
PVOID pfnav_file_unmap;
PVOID pfnav_filename_number_test;
PVOID pfnav_filter_next;
PVOID pfnav_find_best_pix_fmt_of_2;
PVOID pfnav_find_best_stream;
PVOID pfnav_find_default_stream_index;
PVOID pfnav_find_info_tag;
PVOID pfnav_find_input_format;
PVOID pfnav_find_nearest_q_idx;
PVOID pfnav_find_program_from_stream;
PVOID pfnav_fmt_ctx_get_duration_estimation_method;
PVOID pfnav_fopen_utf8;
PVOID pfnav_force_cpu_flags;
PVOID pfnav_format_get_audio_codec;
PVOID pfnav_format_get_control_message_cb;
PVOID pfnav_format_get_data_codec;
PVOID pfnav_format_get_metadata_header_padding;
PVOID pfnav_format_get_opaque;
PVOID pfnav_format_get_open_cb;
PVOID pfnav_format_get_probe_score;
PVOID pfnav_format_get_subtitle_codec;
PVOID pfnav_format_get_video_codec;
PVOID pfnav_format_inject_global_side_data;
PVOID pfnav_format_set_audio_codec;
PVOID pfnav_format_set_control_message_cb;
PVOID pfnav_format_set_data_codec;
PVOID pfnav_format_set_metadata_header_padding;
PVOID pfnav_format_set_opaque;
PVOID pfnav_format_set_open_cb;
PVOID pfnav_format_set_subtitle_codec;
PVOID pfnav_format_set_video_codec;
PVOID pfnav_frame_alloc;
PVOID pfnav_frame_clone;
PVOID pfnav_frame_copy;
PVOID pfnav_frame_copy_props;
PVOID pfnav_frame_free;
PVOID pfnav_frame_get_best_effort_timestamp;
PVOID pfnav_frame_get_buffer;
PVOID pfnav_frame_get_channel_layout;
PVOID pfnav_frame_get_channels;
PVOID pfnav_frame_get_color_range;
PVOID pfnav_frame_get_colorspace;
PVOID pfnav_frame_get_decode_error_flags;
PVOID pfnav_frame_get_metadata;
PVOID pfnav_frame_get_pkt_duration;
PVOID pfnav_frame_get_pkt_pos;
PVOID pfnav_frame_get_pkt_size;
PVOID pfnav_frame_get_plane_buffer;
PVOID pfnav_frame_get_qp_table;
PVOID pfnav_frame_get_sample_rate;
PVOID pfnav_frame_get_side_data;
PVOID pfnav_frame_is_writable;
PVOID pfnav_frame_make_writable;
PVOID pfnav_frame_move_ref;
PVOID pfnav_frame_new_side_data;
PVOID pfnav_frame_ref;
PVOID pfnav_frame_remove_side_data;
PVOID pfnav_frame_set_best_effort_timestamp;
PVOID pfnav_frame_set_channel_layout;
PVOID pfnav_frame_set_channels;
PVOID pfnav_frame_set_color_range;
PVOID pfnav_frame_set_colorspace;
PVOID pfnav_frame_set_decode_error_flags;
PVOID pfnav_frame_set_metadata;
PVOID pfnav_frame_set_pkt_duration;
PVOID pfnav_frame_set_pkt_pos;
PVOID pfnav_frame_set_pkt_size;
PVOID pfnav_frame_set_qp_table;
PVOID pfnav_frame_set_sample_rate;
PVOID pfnav_frame_side_data_name;
PVOID pfnav_frame_unref;
PVOID pfnav_free;
PVOID pfnav_free_packet;
PVOID pfnav_freep;
PVOID pfnav_gcd;
PVOID pfnav_get_alt_sample_fmt;
PVOID pfnav_get_audio_frame_duration;
PVOID pfnav_get_audio_frame_duration2;
PVOID pfnav_get_bits_per_pixel;
PVOID pfnav_get_bits_per_sample;
PVOID pfnav_get_bytes_per_sample;
PVOID pfnav_get_channel_description;
PVOID pfnav_get_channel_layout;
PVOID pfnav_get_channel_layout_channel_index;
PVOID pfnav_get_channel_layout_nb_channels;
PVOID pfnav_get_channel_layout_string;
PVOID pfnav_get_channel_name;
PVOID pfnav_get_codec_tag_string;
PVOID pfnav_get_colorspace_name;
PVOID pfnav_get_cpu_flags;
PVOID pfnav_get_default_channel_layout;
PVOID pfnav_get_exact_bits_per_sample;
PVOID pfnav_get_frame_filename;
PVOID pfnav_get_frame_filename2;
PVOID pfnav_get_known_color_name;
PVOID pfnav_get_media_type_string;
PVOID pfnav_get_output_timestamp;
PVOID pfnav_get_packed_sample_fmt;
PVOID pfnav_get_packet;
PVOID pfnav_get_padded_bits_per_pixel;
PVOID pfnav_get_pcm_codec;
PVOID pfnav_get_picture_type_char;
PVOID pfnav_get_pix_fmt;
PVOID pfnav_get_pix_fmt_loss;
PVOID pfnav_get_pix_fmt_name;
PVOID pfnav_get_pix_fmt_string;
PVOID pfnav_get_planar_sample_fmt;
PVOID pfnav_get_profile_name;
PVOID pfnav_get_random_seed;
PVOID pfnav_get_sample_fmt;
PVOID pfnav_get_sample_fmt_name;
PVOID pfnav_get_sample_fmt_string;
PVOID pfnav_get_standard_channel_layout;
PVOID pfnav_get_time_base_q;
PVOID pfnav_get_token;
PVOID pfnav_gettime;
PVOID pfnav_gettime_relative;
PVOID pfnav_gettime_relative_is_monotonic;
PVOID pfnav_grow_packet;
PVOID pfnav_guess_codec;
PVOID pfnav_guess_format;
PVOID pfnav_guess_frame_rate;
PVOID pfnav_guess_sample_aspect_ratio;
PVOID pfnav_hash_alloc;
PVOID pfnav_hash_final;
PVOID pfnav_hash_final_b64;
PVOID pfnav_hash_final_bin;
PVOID pfnav_hash_final_hex;
PVOID pfnav_hash_freep;
PVOID pfnav_hash_get_name;
PVOID pfnav_hash_get_size;
PVOID pfnav_hash_init;
PVOID pfnav_hash_names;
PVOID pfnav_hash_update;
PVOID pfnav_hex_dump;
PVOID pfnav_hex_dump_log;
PVOID pfnav_hmac_alloc;
PVOID pfnav_hmac_calc;
PVOID pfnav_hmac_final;
PVOID pfnav_hmac_free;
PVOID pfnav_hmac_init;
PVOID pfnav_hmac_update;
PVOID pfnav_hwaccel_next;
PVOID pfnav_hwdevice_ctx_alloc;
PVOID pfnav_hwdevice_ctx_create;
PVOID pfnav_hwdevice_ctx_init;
PVOID pfnav_hwdevice_get_hwframe_constraints;
PVOID pfnav_hwdevice_hwconfig_alloc;
PVOID pfnav_hwframe_constraints_free;
PVOID pfnav_hwframe_ctx_alloc;
PVOID pfnav_hwframe_ctx_init;
PVOID pfnav_hwframe_get_buffer;
PVOID pfnav_hwframe_transfer_data;
PVOID pfnav_hwframe_transfer_get_formats;
PVOID pfnav_i2int;
PVOID pfnav_iformat_next;
PVOID pfnav_image_alloc;
PVOID pfnav_image_check_sar;
PVOID pfnav_image_check_size;
PVOID pfnav_image_copy;
PVOID pfnav_image_copy_plane;
PVOID pfnav_image_copy_to_buffer;
PVOID pfnav_image_fill_arrays;
PVOID pfnav_image_fill_linesizes;
PVOID pfnav_image_fill_max_pixsteps;
PVOID pfnav_image_fill_pointers;
PVOID pfnav_image_get_buffer_size;
PVOID pfnav_image_get_linesize;
PVOID pfnav_imdct_calc;
PVOID pfnav_imdct_half;
PVOID pfnav_index_search_timestamp;
PVOID pfnav_init_packet;
PVOID pfnav_input_audio_device_next;
PVOID pfnav_input_video_device_next;
PVOID pfnav_int2i;
PVOID pfnav_int_list_length_for_size;
PVOID pfnav_interleaved_write_frame;
PVOID pfnav_interleaved_write_uncoded_frame;
PVOID pfnav_jni_get_java_vm;
PVOID pfnav_jni_set_java_vm;
PVOID pfnav_lfg_init;
PVOID pfnav_lockmgr_register;
PVOID pfnav_log;
PVOID pfnav_log2;
PVOID pfnav_log2_16bit;
PVOID pfnav_log2_i;
PVOID pfnav_log_ask_for_sample;
PVOID pfnav_log_default_callback;
PVOID pfnav_log_format_line;
PVOID pfnav_log_format_line2;
PVOID pfnav_log_get_flags;
PVOID pfnav_log_get_level;
PVOID pfnav_log_missing_feature;
PVOID pfnav_log_set_callback;
PVOID pfnav_log_set_flags;
PVOID pfnav_log_set_level;
PVOID pfnav_lzo1x_decode;
PVOID pfnav_malloc;
PVOID pfnav_mallocz;
PVOID pfnav_mastering_display_metadata_alloc;
PVOID pfnav_mastering_display_metadata_create_side_data;
PVOID pfnav_match_ext;
PVOID pfnav_match_list;
PVOID pfnav_match_name;
PVOID pfnav_max_alloc;
PVOID pfnav_md5_alloc;
PVOID pfnav_md5_final;
PVOID pfnav_md5_init;
PVOID pfnav_md5_sum;
PVOID pfnav_md5_update;
PVOID pfnav_mdct_calc;
PVOID pfnav_mdct_end;
PVOID pfnav_mdct_init;
PVOID pfnav_mediacodec_alloc_context;
PVOID pfnav_mediacodec_default_free;
PVOID pfnav_mediacodec_default_init;
PVOID pfnav_mediacodec_release_buffer;
PVOID pfnav_memcpy_backptr;
PVOID pfnav_memdup;
PVOID pfnav_mod_i;
PVOID pfnav_mul_i;
PVOID pfnav_mul_q;
PVOID pfnav_murmur3_alloc;
PVOID pfnav_murmur3_final;
PVOID pfnav_murmur3_init;
PVOID pfnav_murmur3_init_seeded;
PVOID pfnav_murmur3_update;
PVOID pfnav_nearer_q;
PVOID pfnav_new_packet;
PVOID pfnav_new_program;
PVOID pfnav_oformat_next;
PVOID pfnav_opt_child_class_next;
PVOID pfnav_opt_child_next;
PVOID pfnav_opt_copy;
PVOID pfnav_opt_eval_double;
PVOID pfnav_opt_eval_flags;
PVOID pfnav_opt_eval_float;
PVOID pfnav_opt_eval_int;
PVOID pfnav_opt_eval_int64;
PVOID pfnav_opt_eval_q;
PVOID pfnav_opt_find;
PVOID pfnav_opt_find2;
PVOID pfnav_opt_flag_is_set;
PVOID pfnav_opt_free;
PVOID pfnav_opt_freep_ranges;
PVOID pfnav_opt_get;
PVOID pfnav_opt_get_channel_layout;
PVOID pfnav_opt_get_dict_val;
PVOID pfnav_opt_get_double;
PVOID pfnav_opt_get_image_size;
PVOID pfnav_opt_get_int;
PVOID pfnav_opt_get_key_value;
PVOID pfnav_opt_get_pixel_fmt;
PVOID pfnav_opt_get_q;
PVOID pfnav_opt_get_sample_fmt;
PVOID pfnav_opt_get_video_rate;
PVOID pfnav_opt_is_set_to_default;
PVOID pfnav_opt_is_set_to_default_by_name;
PVOID pfnav_opt_next;
PVOID pfnav_opt_ptr;
PVOID pfnav_opt_query_ranges;
PVOID pfnav_opt_query_ranges_default;
PVOID pfnav_opt_serialize;
PVOID pfnav_opt_set;
PVOID pfnav_opt_set_bin;
PVOID pfnav_opt_set_channel_layout;
PVOID pfnav_opt_set_defaults;
PVOID pfnav_opt_set_defaults2;
PVOID pfnav_opt_set_dict;
PVOID pfnav_opt_set_dict2;
PVOID pfnav_opt_set_dict_val;
PVOID pfnav_opt_set_double;
PVOID pfnav_opt_set_from_string;
PVOID pfnav_opt_set_image_size;
PVOID pfnav_opt_set_int;
PVOID pfnav_opt_set_pixel_fmt;
PVOID pfnav_opt_set_q;
PVOID pfnav_opt_set_sample_fmt;
PVOID pfnav_opt_set_video_rate;
PVOID pfnav_opt_show2;
PVOID pfnav_output_audio_device_next;
PVOID pfnav_output_video_device_next;
PVOID pfnav_packet_add_side_data;
PVOID pfnav_packet_alloc;
PVOID pfnav_packet_clone;
PVOID pfnav_packet_copy_props;
PVOID pfnav_packet_free;
PVOID pfnav_packet_free_side_data;
PVOID pfnav_packet_from_data;
PVOID pfnav_packet_get_side_data;
PVOID pfnav_packet_merge_side_data;
PVOID pfnav_packet_move_ref;
PVOID pfnav_packet_new_side_data;
PVOID pfnav_packet_pack_dictionary;
PVOID pfnav_packet_ref;
PVOID pfnav_packet_rescale_ts;
PVOID pfnav_packet_shrink_side_data;
PVOID pfnav_packet_side_data_name;
PVOID pfnav_packet_split_side_data;
PVOID pfnav_packet_unpack_dictionary;
PVOID pfnav_packet_unref;
PVOID pfnav_parse_color;
PVOID pfnav_parse_cpu_caps;
PVOID pfnav_parse_cpu_flags;
PVOID pfnav_parse_ratio;
PVOID pfnav_parse_time;
PVOID pfnav_parse_video_rate;
PVOID pfnav_parse_video_size;
PVOID pfnav_parser_change;
PVOID pfnav_parser_close;
PVOID pfnav_parser_init;
PVOID pfnav_parser_next;
PVOID pfnav_parser_parse2;
PVOID pfnav_picture_copy;
PVOID pfnav_picture_crop;
PVOID pfnav_picture_pad;
PVOID pfnav_pix_fmt_count_planes;
PVOID pfnav_pix_fmt_desc_get;
PVOID pfnav_pix_fmt_desc_get_id;
PVOID pfnav_pix_fmt_desc_next;
PVOID pfnav_pix_fmt_get_chroma_sub_sample;
PVOID pfnav_pix_fmt_swap_endianness;
PVOID pfnav_pixelutils_get_sad_fn;
PVOID pfnav_pkt_dump2;
PVOID pfnav_pkt_dump_log2;
PVOID pfnav_probe_input_buffer;
PVOID pfnav_probe_input_buffer2;
PVOID pfnav_probe_input_format;
PVOID pfnav_probe_input_format2;
PVOID pfnav_probe_input_format3;
PVOID pfnav_program_add_stream_index;
PVOID pfnav_q2intfloat;
PVOID pfnav_qsv_alloc_context;
PVOID pfnav_rc4_alloc;
PVOID pfnav_rc4_crypt;
PVOID pfnav_rc4_init;
PVOID pfnav_read_frame;
PVOID pfnav_read_image_line;
PVOID pfnav_read_pause;
PVOID pfnav_read_play;
PVOID pfnav_realloc;
PVOID pfnav_realloc_array;
PVOID pfnav_realloc_f;
PVOID pfnav_reallocp;
PVOID pfnav_reallocp_array;
PVOID pfnav_reduce;
PVOID pfnav_register_all;
PVOID pfnav_register_bitstream_filter;
PVOID pfnav_register_codec_parser;
PVOID pfnav_register_hwaccel;
PVOID pfnav_register_input_format;
PVOID pfnav_register_output_format;
PVOID pfnav_resample;
PVOID pfnav_resample_close;
PVOID pfnav_resample_compensate;
PVOID pfnav_resample_init;
PVOID pfnav_rescale;
PVOID pfnav_rescale_delta;
PVOID pfnav_rescale_q;
PVOID pfnav_rescale_q_rnd;
PVOID pfnav_rescale_rnd;
PVOID pfnav_ripemd_alloc;
PVOID pfnav_ripemd_final;
PVOID pfnav_ripemd_init;
PVOID pfnav_ripemd_update;
PVOID pfnav_sample_fmt_is_planar;
PVOID pfnav_samples_alloc;
PVOID pfnav_samples_alloc_array_and_samples;
PVOID pfnav_samples_copy;
PVOID pfnav_samples_fill_arrays;
PVOID pfnav_samples_get_buffer_size;
PVOID pfnav_samples_set_silence;
PVOID pfnav_sdp_create;
PVOID pfnav_seek_frame;
PVOID pfnav_set_cpu_flags_mask;
PVOID pfnav_set_options_string;
PVOID pfnav_sha512_alloc;
PVOID pfnav_sha512_final;
PVOID pfnav_sha512_init;
PVOID pfnav_sha512_update;
PVOID pfnav_sha_alloc;
PVOID pfnav_sha_final;
PVOID pfnav_sha_init;
PVOID pfnav_sha_update;
PVOID pfnav_shr_i;
PVOID pfnav_shrink_packet;
PVOID pfnav_small_strptime;
PVOID pfnav_stereo3d_alloc;
PVOID pfnav_stereo3d_create_side_data;
PVOID pfnav_stereo3d_from_name;
PVOID pfnav_stereo3d_type_name;
PVOID pfnav_strcasecmp;
PVOID pfnav_strdup;
PVOID pfnav_stream_add_side_data;
PVOID pfnav_stream_get_codec_timebase;
PVOID pfnav_stream_get_end_pts;
PVOID pfnav_stream_get_parser;
PVOID pfnav_stream_get_r_frame_rate;
PVOID pfnav_stream_get_recommended_encoder_configuration;
PVOID pfnav_stream_get_side_data;
PVOID pfnav_stream_new_side_data;
PVOID pfnav_stream_set_r_frame_rate;
PVOID pfnav_stream_set_recommended_encoder_configuration;
PVOID pfnav_strerror;
PVOID pfnav_stristart;
PVOID pfnav_stristr;
PVOID pfnav_strlcat;
PVOID pfnav_strlcatf;
PVOID pfnav_strlcpy;
PVOID pfnav_strncasecmp;
PVOID pfnav_strndup;
PVOID pfnav_strnstr;
PVOID pfnav_strstart;
PVOID pfnav_strtod;
PVOID pfnav_strtok;
PVOID pfnav_sub_i;
PVOID pfnav_sub_q;
PVOID pfnav_tea_alloc;
PVOID pfnav_tea_crypt;
PVOID pfnav_tea_init;
PVOID pfnav_tempfile;
PVOID pfnav_thread_message_flush;
PVOID pfnav_thread_message_queue_alloc;
PVOID pfnav_thread_message_queue_free;
PVOID pfnav_thread_message_queue_recv;
PVOID pfnav_thread_message_queue_send;
PVOID pfnav_thread_message_queue_set_err_recv;
PVOID pfnav_thread_message_queue_set_err_send;
PVOID pfnav_thread_message_queue_set_free_func;
PVOID pfnav_timecode_adjust_ntsc_framenum2;
PVOID pfnav_timecode_check_frame_rate;
PVOID pfnav_timecode_get_smpte_from_framenum;
PVOID pfnav_timecode_init;
PVOID pfnav_timecode_init_from_string;
PVOID pfnav_timecode_make_mpeg_tc_string;
PVOID pfnav_timecode_make_smpte_tc_string;
PVOID pfnav_timecode_make_string;
PVOID pfnav_timegm;
PVOID pfnav_tree_destroy;
PVOID pfnav_tree_enumerate;
PVOID pfnav_tree_find;
PVOID pfnav_tree_insert;
PVOID pfnav_tree_node_alloc;
PVOID pfnav_twofish_alloc;
PVOID pfnav_twofish_crypt;
PVOID pfnav_twofish_init;
PVOID pfnav_url_split;
PVOID pfnav_usleep;
PVOID pfnav_utf8_decode;
PVOID pfnav_vbprintf;
PVOID pfnav_version_info;
PVOID pfnav_vlog;
PVOID pfnav_write_frame;
PVOID pfnav_write_image_line;
PVOID pfnav_write_trailer;
PVOID pfnav_write_uncoded_frame;
PVOID pfnav_write_uncoded_frame_query;
PVOID pfnav_xiphlacing;
PVOID pfnav_xtea_alloc;
PVOID pfnav_xtea_crypt;
PVOID pfnav_xtea_init;
PVOID pfnav_xtea_le_crypt;
PVOID pfnav_xtea_le_init;
PVOID pfnavcodec_align_dimensions;
PVOID pfnavcodec_align_dimensions2;
PVOID pfnavcodec_alloc_context3;
PVOID pfnavcodec_chroma_pos_to_enum;
PVOID pfnavcodec_close;
PVOID pfnavcodec_configuration;
PVOID pfnavcodec_copy_context;
PVOID pfnavcodec_dct_alloc;
PVOID pfnavcodec_dct_get_class;
PVOID pfnavcodec_dct_init;
PVOID pfnavcodec_decode_audio4;
PVOID pfnavcodec_decode_subtitle2;
PVOID pfnavcodec_decode_video2;
PVOID pfnavcodec_default_execute;
PVOID pfnavcodec_default_execute2;
PVOID pfnavcodec_default_get_buffer2;
PVOID pfnavcodec_default_get_format;
PVOID pfnavcodec_descriptor_get;
PVOID pfnavcodec_descriptor_get_by_name;
PVOID pfnavcodec_descriptor_next;
PVOID pfnavcodec_encode_audio2;
PVOID pfnavcodec_encode_subtitle;
PVOID pfnavcodec_encode_video2;
PVOID pfnavcodec_enum_to_chroma_pos;
PVOID pfnavcodec_fill_audio_frame;
PVOID pfnavcodec_find_best_pix_fmt2;
PVOID pfnavcodec_find_best_pix_fmt_of_2;
PVOID pfnavcodec_find_best_pix_fmt_of_list;
PVOID pfnavcodec_find_decoder;
PVOID pfnavcodec_find_decoder_by_name;
PVOID pfnavcodec_find_encoder;
PVOID pfnavcodec_find_encoder_by_name;
PVOID pfnavcodec_flush_buffers;
PVOID pfnavcodec_free_context;
PVOID pfnavcodec_get_chroma_sub_sample;
PVOID pfnavcodec_get_class;
PVOID pfnavcodec_get_context_defaults3;
PVOID pfnavcodec_get_edge_width;
PVOID pfnavcodec_get_frame_class;
PVOID pfnavcodec_get_name;
PVOID pfnavcodec_get_pix_fmt_loss;
PVOID pfnavcodec_get_subtitle_rect_class;
PVOID pfnavcodec_get_type;
PVOID pfnavcodec_is_open;
PVOID pfnavcodec_license;
PVOID pfnavcodec_open2;
PVOID pfnavcodec_parameters_alloc;
PVOID pfnavcodec_parameters_copy;
PVOID pfnavcodec_parameters_free;
PVOID pfnavcodec_parameters_from_context;
PVOID pfnavcodec_parameters_to_context;
PVOID pfnavcodec_pix_fmt_to_codec_tag;
PVOID pfnavcodec_profile_name;
PVOID pfnavcodec_receive_frame;
PVOID pfnavcodec_receive_packet;
PVOID pfnavcodec_register;
PVOID pfnavcodec_register_all;
PVOID pfnavcodec_send_frame;
PVOID pfnavcodec_send_packet;
PVOID pfnavcodec_set_dimensions;
PVOID pfnavcodec_string;
PVOID pfnavcodec_version;
PVOID pfnavdevice_app_to_dev_control_message;
PVOID pfnavdevice_capabilities_create;
PVOID pfnavdevice_capabilities_free;
PVOID pfnavdevice_configuration;
PVOID pfnavdevice_dev_to_app_control_message;
PVOID pfnavdevice_free_list_devices;
PVOID pfnavdevice_license;
PVOID pfnavdevice_list_devices;
PVOID pfnavdevice_list_input_sources;
PVOID pfnavdevice_list_output_sinks;
PVOID pfnavdevice_register_all;
PVOID pfnavdevice_version;
PVOID pfnavfilter_add_matrix;
PVOID pfnavfilter_config_links;
PVOID pfnavfilter_configuration;
PVOID pfnavfilter_free;
PVOID pfnavfilter_get_by_name;
PVOID pfnavfilter_get_class;
PVOID pfnavfilter_get_matrix;
PVOID pfnavfilter_graph_add_filter;
PVOID pfnavfilter_graph_alloc;
PVOID pfnavfilter_graph_alloc_filter;
PVOID pfnavfilter_graph_config;
PVOID pfnavfilter_graph_create_filter;
PVOID pfnavfilter_graph_dump;
PVOID pfnavfilter_graph_free;
PVOID pfnavfilter_graph_get_filter;
PVOID pfnavfilter_graph_parse;
PVOID pfnavfilter_graph_parse2;
PVOID pfnavfilter_graph_parse_ptr;
PVOID pfnavfilter_graph_queue_command;
PVOID pfnavfilter_graph_request_oldest;
PVOID pfnavfilter_graph_send_command;
PVOID pfnavfilter_graph_set_auto_convert;
PVOID pfnavfilter_init_dict;
PVOID pfnavfilter_init_filter;
PVOID pfnavfilter_init_str;
PVOID pfnavfilter_inout_alloc;
PVOID pfnavfilter_inout_free;
PVOID pfnavfilter_insert_filter;
PVOID pfnavfilter_license;
PVOID pfnavfilter_link;
PVOID pfnavfilter_link_free;
PVOID pfnavfilter_link_get_channels;
PVOID pfnavfilter_link_set_closed;
PVOID pfnavfilter_make_format64_list;
PVOID pfnavfilter_mul_matrix;
PVOID pfnavfilter_next;
PVOID pfnavfilter_open;
PVOID pfnavfilter_pad_count;
PVOID pfnavfilter_pad_get_name;
PVOID pfnavfilter_pad_get_type;
PVOID pfnavfilter_process_command;
PVOID pfnavfilter_register;
PVOID pfnavfilter_register_all;
PVOID pfnavfilter_sub_matrix;
PVOID pfnavfilter_transform;
PVOID pfnavfilter_uninit;
PVOID pfnavfilter_version;
PVOID pfnavformat_alloc_context;
PVOID pfnavformat_alloc_output_context2;
PVOID pfnavformat_close_input;
PVOID pfnavformat_configuration;
PVOID pfnavformat_find_stream_info;
PVOID pfnavformat_flush;
PVOID pfnavformat_free_context;
PVOID pfnavformat_get_class;
PVOID pfnavformat_get_mov_audio_tags;
PVOID pfnavformat_get_mov_video_tags;
PVOID pfnavformat_get_riff_audio_tags;
PVOID pfnavformat_get_riff_video_tags;
PVOID pfnavformat_init_output;
PVOID pfnavformat_license;
PVOID pfnavformat_match_stream_specifier;
PVOID pfnavformat_network_deinit;
PVOID pfnavformat_network_init;
PVOID pfnavformat_new_stream;
PVOID pfnavformat_open_input;
PVOID pfnavformat_query_codec;
PVOID pfnavformat_queue_attached_pictures;
PVOID pfnavformat_seek_file;
PVOID pfnavformat_transfer_internal_stream_timing_info;
PVOID pfnavformat_version;
PVOID pfnavformat_write_header;
PVOID pfnavio_accept;
PVOID pfnavio_alloc_context;
PVOID pfnavio_check;
PVOID pfnavio_close;
PVOID pfnavio_close_dir;
PVOID pfnavio_close_dyn_buf;
PVOID pfnavio_closep;
PVOID pfnavio_enum_protocols;
PVOID pfnavio_feof;
PVOID pfnavio_find_protocol_name;
PVOID pfnavio_flush;
PVOID pfnavio_free_directory_entry;
PVOID pfnavio_get_str;
PVOID pfnavio_get_str16be;
PVOID pfnavio_get_str16le;
PVOID pfnavio_handshake;
PVOID pfnavio_open;
PVOID pfnavio_open2;
PVOID pfnavio_open_dir;
PVOID pfnavio_open_dyn_buf;
PVOID pfnavio_pause;
PVOID pfnavio_printf;
PVOID pfnavio_put_str;
PVOID pfnavio_put_str16be;
PVOID pfnavio_put_str16le;
PVOID pfnavio_r8;
PVOID pfnavio_rb16;
PVOID pfnavio_rb24;
PVOID pfnavio_rb32;
PVOID pfnavio_rb64;
PVOID pfnavio_read;
PVOID pfnavio_read_dir;
PVOID pfnavio_read_to_bprint;
PVOID pfnavio_rl16;
PVOID pfnavio_rl24;
PVOID pfnavio_rl32;
PVOID pfnavio_rl64;
PVOID pfnavio_seek;
PVOID pfnavio_seek_time;
PVOID pfnavio_size;
PVOID pfnavio_skip;
PVOID pfnavio_w8;
PVOID pfnavio_wb16;
PVOID pfnavio_wb24;
PVOID pfnavio_wb32;
PVOID pfnavio_wb64;
PVOID pfnavio_wl16;
PVOID pfnavio_wl24;
PVOID pfnavio_wl32;
PVOID pfnavio_wl64;
PVOID pfnavio_write;
PVOID pfnavio_write_marker;
PVOID pfnavpicture_alloc;
PVOID pfnavpicture_fill;
PVOID pfnavpicture_free;
PVOID pfnavpicture_get_size;
PVOID pfnavpicture_layout;
PVOID pfnavpriv_aac_parse_header;
PVOID pfnavpriv_align_put_bits;
PVOID pfnavpriv_alloc_fixed_dsp;
PVOID pfnavpriv_bprint_to_extradata;
PVOID pfnavpriv_codec_get_cap_skip_frame_fill_param;
PVOID pfnavpriv_copy_bits;
PVOID pfnavpriv_copy_pce_data;
PVOID pfnavpriv_dict_set_timestamp;
PVOID pfnavpriv_emms_yasm;
PVOID pfnavpriv_find_pix_fmt;
PVOID pfnavpriv_find_start_code;
PVOID pfnavpriv_float_dsp_alloc;
PVOID pfnavpriv_frame_get_metadatap;
PVOID pfnavpriv_get_gamma_from_trc;
PVOID pfnavpriv_get_raw_pix_fmt_tags;
PVOID pfnavpriv_get_trc_function_from_trc;
PVOID pfnavpriv_h264_has_num_reorder_frames;
PVOID pfnavpriv_init_lls;
PVOID pfnavpriv_io_delete;
PVOID pfnavpriv_io_move;
PVOID pfnavpriv_lock_avformat;
PVOID pfnavpriv_mpa_decode_header;
PVOID pfnavpriv_mpa_decode_header2;
PVOID pfnavpriv_mpeg4audio_get_config;
PVOID pfnavpriv_mpegaudio_decode_header;
PVOID pfnavpriv_mpegts_parse_close;
PVOID pfnavpriv_mpegts_parse_open;
PVOID pfnavpriv_mpegts_parse_packet;
PVOID pfnavpriv_new_chapter;
PVOID pfnavpriv_put_string;
PVOID pfnavpriv_report_missing_feature;
PVOID pfnavpriv_request_sample;
PVOID pfnavpriv_scalarproduct_float_c;
PVOID pfnavpriv_set_pts_info;
PVOID pfnavpriv_set_systematic_pal2;
PVOID pfnavpriv_snprintf;
PVOID pfnavpriv_solve_lls;
PVOID pfnavpriv_split_xiph_headers;
PVOID pfnavpriv_strtod;
PVOID pfnavpriv_toupper4;
PVOID pfnavpriv_unlock_avformat;
PVOID pfnavpriv_vsnprintf;
PVOID pfnavsubtitle_free;
PVOID pfnavutil_configuration;
PVOID pfnavutil_license;
PVOID pfnavutil_version;
PVOID pfnffio_open_dyn_packet_buf;
PVOID pfnffio_set_buf_size;
PVOID pfnffurl_close;
PVOID pfnffurl_open;
PVOID pfnffurl_write;
PVOID pfnswr_alloc;
PVOID pfnswr_alloc_set_opts;
PVOID pfnswr_build_matrix;
PVOID pfnswr_close;
PVOID pfnswr_config_frame;
PVOID pfnswr_convert;
PVOID pfnswr_convert_frame;
PVOID pfnswr_drop_output;
PVOID pfnswr_free;
PVOID pfnswr_get_class;
PVOID pfnswr_get_delay;
PVOID pfnswr_get_out_samples;
PVOID pfnswr_init;
PVOID pfnswr_inject_silence;
PVOID pfnswr_is_initialized;
PVOID pfnswr_next_pts;
PVOID pfnswr_set_channel_mapping;
PVOID pfnswr_set_compensation;
PVOID pfnswr_set_matrix;
PVOID pfnswresample_configuration;
PVOID pfnswresample_license;
PVOID pfnswresample_version;
PVOID pfnsws_addVec;
PVOID pfnsws_allocVec;
PVOID pfnsws_alloc_context;
PVOID pfnsws_alloc_set_opts;
PVOID pfnsws_cloneVec;
PVOID pfnsws_convVec;
PVOID pfnsws_convertPalette8ToPacked24;
PVOID pfnsws_convertPalette8ToPacked32;
PVOID pfnsws_freeContext;
PVOID pfnsws_freeFilter;
PVOID pfnsws_freeVec;
PVOID pfnsws_getCachedContext;
PVOID pfnsws_getCoefficients;
PVOID pfnsws_getColorspaceDetails;
PVOID pfnsws_getConstVec;
PVOID pfnsws_getContext;
PVOID pfnsws_getDefaultFilter;
PVOID pfnsws_getGaussianVec;
PVOID pfnsws_getIdentityVec;
PVOID pfnsws_get_class;
PVOID pfnsws_init_context;
PVOID pfnsws_isSupportedEndiannessConversion;
PVOID pfnsws_isSupportedInput;
PVOID pfnsws_isSupportedOutput;
PVOID pfnsws_normalizeVec;
PVOID pfnsws_printVec2;
PVOID pfnsws_scale;
PVOID pfnsws_scaleVec;
PVOID pfnsws_setColorspaceDetails;
PVOID pfnsws_shiftVec;
PVOID pfnsws_subVec;
PVOID pfnswscale_configuration;
PVOID pfnswscale_license;
PVOID pfnswscale_version;
PVOID pfnurl_feof;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 宏定义
#define EXTERNC extern "C"
#define NAKED __declspec(naked)
#define EXPORT __declspec(dllexport)

#define ALCPP EXPORT NAKED
#define ALSTD EXTERNC EXPORT NAKED void __stdcall
#define ALCFAST EXTERNC EXPORT NAKED void __fastcall
#define ALCDECL EXTERNC NAKED void __cdecl
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AheadLib 命名空间
namespace AheadLib
{
	HMODULE m_hModule = NULL;	// 原始模块句柄
	DWORD m_dwReturn[988] = {0};	// 原始函数返回地址


	// 获取原始函数地址
	FARPROC WINAPI GetAddress(PCSTR pszProcName)
	{
		FARPROC fpAddress;
		CHAR szProcName[16];
		TCHAR tzTemp[MAX_PATH];

		fpAddress = GetProcAddress(m_hModule, pszProcName);
		if (fpAddress == NULL)
		{
			if (HIWORD(pszProcName) == 0)
			{
				wsprintfA(szProcName, "%d", pszProcName);
				pszProcName = szProcName;
			}

			wsprintf(tzTemp, TEXT("无法找到函数 %hs，程序无法正常运行。"), pszProcName);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_ICONSTOP);
			ExitProcess(-2);
		}

		return fpAddress;
	}

	// 初始化原始函数地址指针
	inline VOID WINAPI InitializeAddresses()
	{
		pfnaudio_resample = GetAddress("audio_resample");
		pfnaudio_resample_close = GetAddress("audio_resample_close");
		pfnav_abuffersink_params_alloc = GetAddress("av_abuffersink_params_alloc");
		pfnav_add_i = GetAddress("av_add_i");
		pfnav_add_index_entry = GetAddress("av_add_index_entry");
		pfnav_add_q = GetAddress("av_add_q");
		pfnav_add_stable = GetAddress("av_add_stable");
		pfnav_adler32_update = GetAddress("av_adler32_update");
		pfnav_aes_alloc = GetAddress("av_aes_alloc");
		pfnav_aes_crypt = GetAddress("av_aes_crypt");
		pfnav_aes_ctr_alloc = GetAddress("av_aes_ctr_alloc");
		pfnav_aes_ctr_crypt = GetAddress("av_aes_ctr_crypt");
		pfnav_aes_ctr_free = GetAddress("av_aes_ctr_free");
		pfnav_aes_ctr_get_iv = GetAddress("av_aes_ctr_get_iv");
		pfnav_aes_ctr_increment_iv = GetAddress("av_aes_ctr_increment_iv");
		pfnav_aes_ctr_init = GetAddress("av_aes_ctr_init");
		pfnav_aes_ctr_set_iv = GetAddress("av_aes_ctr_set_iv");
		pfnav_aes_ctr_set_random_iv = GetAddress("av_aes_ctr_set_random_iv");
		pfnav_aes_init = GetAddress("av_aes_init");
		pfnav_append_packet = GetAddress("av_append_packet");
		pfnav_append_path_component = GetAddress("av_append_path_component");
		pfnav_apply_bitstream_filters = GetAddress("av_apply_bitstream_filters");
		pfnav_asprintf = GetAddress("av_asprintf");
		pfnav_assert0_fpu = GetAddress("av_assert0_fpu");
		pfnav_audio_convert = GetAddress("av_audio_convert");
		pfnav_audio_convert_alloc = GetAddress("av_audio_convert_alloc");
		pfnav_audio_convert_free = GetAddress("av_audio_convert_free");
		pfnav_audio_fifo_alloc = GetAddress("av_audio_fifo_alloc");
		pfnav_audio_fifo_drain = GetAddress("av_audio_fifo_drain");
		pfnav_audio_fifo_free = GetAddress("av_audio_fifo_free");
		pfnav_audio_fifo_peek = GetAddress("av_audio_fifo_peek");
		pfnav_audio_fifo_peek_at = GetAddress("av_audio_fifo_peek_at");
		pfnav_audio_fifo_read = GetAddress("av_audio_fifo_read");
		pfnav_audio_fifo_realloc = GetAddress("av_audio_fifo_realloc");
		pfnav_audio_fifo_reset = GetAddress("av_audio_fifo_reset");
		pfnav_audio_fifo_size = GetAddress("av_audio_fifo_size");
		pfnav_audio_fifo_space = GetAddress("av_audio_fifo_space");
		pfnav_audio_fifo_write = GetAddress("av_audio_fifo_write");
		pfnav_audio_resample_init = GetAddress("av_audio_resample_init");
		pfnav_base64_decode = GetAddress("av_base64_decode");
		pfnav_base64_encode = GetAddress("av_base64_encode");
		pfnav_basename = GetAddress("av_basename");
		pfnav_bitstream_filter_close = GetAddress("av_bitstream_filter_close");
		pfnav_bitstream_filter_filter = GetAddress("av_bitstream_filter_filter");
		pfnav_bitstream_filter_init = GetAddress("av_bitstream_filter_init");
		pfnav_bitstream_filter_next = GetAddress("av_bitstream_filter_next");
		pfnav_blowfish_alloc = GetAddress("av_blowfish_alloc");
		pfnav_blowfish_crypt = GetAddress("av_blowfish_crypt");
		pfnav_blowfish_crypt_ecb = GetAddress("av_blowfish_crypt_ecb");
		pfnav_blowfish_init = GetAddress("av_blowfish_init");
		pfnav_bmg_get = GetAddress("av_bmg_get");
		pfnav_bprint_append_data = GetAddress("av_bprint_append_data");
		pfnav_bprint_channel_layout = GetAddress("av_bprint_channel_layout");
		pfnav_bprint_chars = GetAddress("av_bprint_chars");
		pfnav_bprint_clear = GetAddress("av_bprint_clear");
		pfnav_bprint_escape = GetAddress("av_bprint_escape");
		pfnav_bprint_finalize = GetAddress("av_bprint_finalize");
		pfnav_bprint_get_buffer = GetAddress("av_bprint_get_buffer");
		pfnav_bprint_init = GetAddress("av_bprint_init");
		pfnav_bprint_init_for_buffer = GetAddress("av_bprint_init_for_buffer");
		pfnav_bprint_strftime = GetAddress("av_bprint_strftime");
		pfnav_bprintf = GetAddress("av_bprintf");
		pfnav_bsf_alloc = GetAddress("av_bsf_alloc");
		pfnav_bsf_free = GetAddress("av_bsf_free");
		pfnav_bsf_get_by_name = GetAddress("av_bsf_get_by_name");
		pfnav_bsf_get_class = GetAddress("av_bsf_get_class");
		pfnav_bsf_get_null_filter = GetAddress("av_bsf_get_null_filter");
		pfnav_bsf_init = GetAddress("av_bsf_init");
		pfnav_bsf_list_alloc = GetAddress("av_bsf_list_alloc");
		pfnav_bsf_list_append = GetAddress("av_bsf_list_append");
		pfnav_bsf_list_append2 = GetAddress("av_bsf_list_append2");
		pfnav_bsf_list_finalize = GetAddress("av_bsf_list_finalize");
		pfnav_bsf_list_free = GetAddress("av_bsf_list_free");
		pfnav_bsf_list_parse_str = GetAddress("av_bsf_list_parse_str");
		pfnav_bsf_next = GetAddress("av_bsf_next");
		pfnav_bsf_receive_packet = GetAddress("av_bsf_receive_packet");
		pfnav_bsf_send_packet = GetAddress("av_bsf_send_packet");
		pfnav_buffer_alloc = GetAddress("av_buffer_alloc");
		pfnav_buffer_allocz = GetAddress("av_buffer_allocz");
		pfnav_buffer_create = GetAddress("av_buffer_create");
		pfnav_buffer_default_free = GetAddress("av_buffer_default_free");
		pfnav_buffer_get_opaque = GetAddress("av_buffer_get_opaque");
		pfnav_buffer_get_ref_count = GetAddress("av_buffer_get_ref_count");
		pfnav_buffer_is_writable = GetAddress("av_buffer_is_writable");
		pfnav_buffer_make_writable = GetAddress("av_buffer_make_writable");
		pfnav_buffer_pool_get = GetAddress("av_buffer_pool_get");
		pfnav_buffer_pool_init = GetAddress("av_buffer_pool_init");
		pfnav_buffer_pool_init2 = GetAddress("av_buffer_pool_init2");
		pfnav_buffer_pool_uninit = GetAddress("av_buffer_pool_uninit");
		pfnav_buffer_realloc = GetAddress("av_buffer_realloc");
		pfnav_buffer_ref = GetAddress("av_buffer_ref");
		pfnav_buffer_unref = GetAddress("av_buffer_unref");
		pfnav_buffersink_get_frame = GetAddress("av_buffersink_get_frame");
		pfnav_buffersink_get_frame_flags = GetAddress("av_buffersink_get_frame_flags");
		pfnav_buffersink_get_frame_rate = GetAddress("av_buffersink_get_frame_rate");
		pfnav_buffersink_get_samples = GetAddress("av_buffersink_get_samples");
		pfnav_buffersink_params_alloc = GetAddress("av_buffersink_params_alloc");
		pfnav_buffersink_set_frame_size = GetAddress("av_buffersink_set_frame_size");
		pfnav_buffersrc_add_frame = GetAddress("av_buffersrc_add_frame");
		pfnav_buffersrc_add_frame_flags = GetAddress("av_buffersrc_add_frame_flags");
		pfnav_buffersrc_get_nb_failed_requests = GetAddress("av_buffersrc_get_nb_failed_requests");
		pfnav_buffersrc_parameters_alloc = GetAddress("av_buffersrc_parameters_alloc");
		pfnav_buffersrc_parameters_set = GetAddress("av_buffersrc_parameters_set");
		pfnav_buffersrc_write_frame = GetAddress("av_buffersrc_write_frame");
		pfnav_calloc = GetAddress("av_calloc");
		pfnav_camellia_alloc = GetAddress("av_camellia_alloc");
		pfnav_camellia_crypt = GetAddress("av_camellia_crypt");
		pfnav_camellia_init = GetAddress("av_camellia_init");
		pfnav_cast5_alloc = GetAddress("av_cast5_alloc");
		pfnav_cast5_crypt = GetAddress("av_cast5_crypt");
		pfnav_cast5_crypt2 = GetAddress("av_cast5_crypt2");
		pfnav_cast5_init = GetAddress("av_cast5_init");
		pfnav_channel_layout_extract_channel = GetAddress("av_channel_layout_extract_channel");
		pfnav_chroma_location_name = GetAddress("av_chroma_location_name");
		pfnav_cmp_i = GetAddress("av_cmp_i");
		pfnav_codec_get_chroma_intra_matrix = GetAddress("av_codec_get_chroma_intra_matrix");
		pfnav_codec_get_codec_descriptor = GetAddress("av_codec_get_codec_descriptor");
		pfnav_codec_get_codec_properties = GetAddress("av_codec_get_codec_properties");
		pfnav_codec_get_id = GetAddress("av_codec_get_id");
		pfnav_codec_get_lowres = GetAddress("av_codec_get_lowres");
		pfnav_codec_get_max_lowres = GetAddress("av_codec_get_max_lowres");
		pfnav_codec_get_pkt_timebase = GetAddress("av_codec_get_pkt_timebase");
		pfnav_codec_get_seek_preroll = GetAddress("av_codec_get_seek_preroll");
		pfnav_codec_get_tag = GetAddress("av_codec_get_tag");
		pfnav_codec_get_tag2 = GetAddress("av_codec_get_tag2");
		pfnav_codec_is_decoder = GetAddress("av_codec_is_decoder");
		pfnav_codec_is_encoder = GetAddress("av_codec_is_encoder");
		pfnav_codec_next = GetAddress("av_codec_next");
		pfnav_codec_set_chroma_intra_matrix = GetAddress("av_codec_set_chroma_intra_matrix");
		pfnav_codec_set_codec_descriptor = GetAddress("av_codec_set_codec_descriptor");
		pfnav_codec_set_lowres = GetAddress("av_codec_set_lowres");
		pfnav_codec_set_pkt_timebase = GetAddress("av_codec_set_pkt_timebase");
		pfnav_codec_set_seek_preroll = GetAddress("av_codec_set_seek_preroll");
		pfnav_color_primaries_name = GetAddress("av_color_primaries_name");
		pfnav_color_range_name = GetAddress("av_color_range_name");
		pfnav_color_space_name = GetAddress("av_color_space_name");
		pfnav_color_transfer_name = GetAddress("av_color_transfer_name");
		pfnav_compare_mod = GetAddress("av_compare_mod");
		pfnav_compare_ts = GetAddress("av_compare_ts");
		pfnav_convert_lang_to = GetAddress("av_convert_lang_to");
		pfnav_copy_packet = GetAddress("av_copy_packet");
		pfnav_copy_packet_side_data = GetAddress("av_copy_packet_side_data");
		pfnav_cpb_properties_alloc = GetAddress("av_cpb_properties_alloc");
		pfnav_cpu_count = GetAddress("av_cpu_count");
		pfnav_crc = GetAddress("av_crc");
		pfnav_crc_get_table = GetAddress("av_crc_get_table");
		pfnav_crc_init = GetAddress("av_crc_init");
		pfnav_d2q = GetAddress("av_d2q");
		pfnav_d2str = GetAddress("av_d2str");
		pfnav_d3d11va_alloc_context = GetAddress("av_d3d11va_alloc_context");
		pfnav_default_get_category = GetAddress("av_default_get_category");
		pfnav_default_item_name = GetAddress("av_default_item_name");
		pfnav_demuxer_open = GetAddress("av_demuxer_open");
		pfnav_des_alloc = GetAddress("av_des_alloc");
		pfnav_des_crypt = GetAddress("av_des_crypt");
		pfnav_des_init = GetAddress("av_des_init");
		pfnav_des_mac = GetAddress("av_des_mac");
		pfnav_dict_copy = GetAddress("av_dict_copy");
		pfnav_dict_count = GetAddress("av_dict_count");
		pfnav_dict_free = GetAddress("av_dict_free");
		pfnav_dict_get = GetAddress("av_dict_get");
		pfnav_dict_get_string = GetAddress("av_dict_get_string");
		pfnav_dict_parse_string = GetAddress("av_dict_parse_string");
		pfnav_dict_set = GetAddress("av_dict_set");
		pfnav_dict_set_int = GetAddress("av_dict_set_int");
		pfnav_dirac_parse_sequence_header = GetAddress("av_dirac_parse_sequence_header");
		pfnav_dirname = GetAddress("av_dirname");
		pfnav_display_matrix_flip = GetAddress("av_display_matrix_flip");
		pfnav_display_rotation_get = GetAddress("av_display_rotation_get");
		pfnav_display_rotation_set = GetAddress("av_display_rotation_set");
		pfnav_div_i = GetAddress("av_div_i");
		pfnav_div_q = GetAddress("av_div_q");
		pfnav_downmix_info_update_side_data = GetAddress("av_downmix_info_update_side_data");
		pfnav_dump_format = GetAddress("av_dump_format");
		pfnav_dup_packet = GetAddress("av_dup_packet");
		pfnav_dv_codec_profile = GetAddress("av_dv_codec_profile");
		pfnav_dv_codec_profile2 = GetAddress("av_dv_codec_profile2");
		pfnav_dv_frame_profile = GetAddress("av_dv_frame_profile");
		pfnav_dynarray2_add = GetAddress("av_dynarray2_add");
		pfnav_dynarray_add = GetAddress("av_dynarray_add");
		pfnav_dynarray_add_nofree = GetAddress("av_dynarray_add_nofree");
		pfnav_escape = GetAddress("av_escape");
		pfnav_expr_eval = GetAddress("av_expr_eval");
		pfnav_expr_free = GetAddress("av_expr_free");
		pfnav_expr_parse = GetAddress("av_expr_parse");
		pfnav_expr_parse_and_eval = GetAddress("av_expr_parse_and_eval");
		pfnav_fast_malloc = GetAddress("av_fast_malloc");
		pfnav_fast_mallocz = GetAddress("av_fast_mallocz");
		pfnav_fast_padded_malloc = GetAddress("av_fast_padded_malloc");
		pfnav_fast_padded_mallocz = GetAddress("av_fast_padded_mallocz");
		pfnav_fast_realloc = GetAddress("av_fast_realloc");
		pfnav_fft_calc = GetAddress("av_fft_calc");
		pfnav_fft_end = GetAddress("av_fft_end");
		pfnav_fft_init = GetAddress("av_fft_init");
		pfnav_fft_permute = GetAddress("av_fft_permute");
		pfnav_fifo_alloc = GetAddress("av_fifo_alloc");
		pfnav_fifo_alloc_array = GetAddress("av_fifo_alloc_array");
		pfnav_fifo_drain = GetAddress("av_fifo_drain");
		pfnav_fifo_free = GetAddress("av_fifo_free");
		pfnav_fifo_freep = GetAddress("av_fifo_freep");
		pfnav_fifo_generic_peek = GetAddress("av_fifo_generic_peek");
		pfnav_fifo_generic_peek_at = GetAddress("av_fifo_generic_peek_at");
		pfnav_fifo_generic_read = GetAddress("av_fifo_generic_read");
		pfnav_fifo_generic_write = GetAddress("av_fifo_generic_write");
		pfnav_fifo_grow = GetAddress("av_fifo_grow");
		pfnav_fifo_realloc2 = GetAddress("av_fifo_realloc2");
		pfnav_fifo_reset = GetAddress("av_fifo_reset");
		pfnav_fifo_size = GetAddress("av_fifo_size");
		pfnav_fifo_space = GetAddress("av_fifo_space");
		pfnav_file_map = GetAddress("av_file_map");
		pfnav_file_unmap = GetAddress("av_file_unmap");
		pfnav_filename_number_test = GetAddress("av_filename_number_test");
		pfnav_filter_next = GetAddress("av_filter_next");
		pfnav_find_best_pix_fmt_of_2 = GetAddress("av_find_best_pix_fmt_of_2");
		pfnav_find_best_stream = GetAddress("av_find_best_stream");
		pfnav_find_default_stream_index = GetAddress("av_find_default_stream_index");
		pfnav_find_info_tag = GetAddress("av_find_info_tag");
		pfnav_find_input_format = GetAddress("av_find_input_format");
		pfnav_find_nearest_q_idx = GetAddress("av_find_nearest_q_idx");
		pfnav_find_program_from_stream = GetAddress("av_find_program_from_stream");
		pfnav_fmt_ctx_get_duration_estimation_method = GetAddress("av_fmt_ctx_get_duration_estimation_method");
		pfnav_fopen_utf8 = GetAddress("av_fopen_utf8");
		pfnav_force_cpu_flags = GetAddress("av_force_cpu_flags");
		pfnav_format_get_audio_codec = GetAddress("av_format_get_audio_codec");
		pfnav_format_get_control_message_cb = GetAddress("av_format_get_control_message_cb");
		pfnav_format_get_data_codec = GetAddress("av_format_get_data_codec");
		pfnav_format_get_metadata_header_padding = GetAddress("av_format_get_metadata_header_padding");
		pfnav_format_get_opaque = GetAddress("av_format_get_opaque");
		pfnav_format_get_open_cb = GetAddress("av_format_get_open_cb");
		pfnav_format_get_probe_score = GetAddress("av_format_get_probe_score");
		pfnav_format_get_subtitle_codec = GetAddress("av_format_get_subtitle_codec");
		pfnav_format_get_video_codec = GetAddress("av_format_get_video_codec");
		pfnav_format_inject_global_side_data = GetAddress("av_format_inject_global_side_data");
		pfnav_format_set_audio_codec = GetAddress("av_format_set_audio_codec");
		pfnav_format_set_control_message_cb = GetAddress("av_format_set_control_message_cb");
		pfnav_format_set_data_codec = GetAddress("av_format_set_data_codec");
		pfnav_format_set_metadata_header_padding = GetAddress("av_format_set_metadata_header_padding");
		pfnav_format_set_opaque = GetAddress("av_format_set_opaque");
		pfnav_format_set_open_cb = GetAddress("av_format_set_open_cb");
		pfnav_format_set_subtitle_codec = GetAddress("av_format_set_subtitle_codec");
		pfnav_format_set_video_codec = GetAddress("av_format_set_video_codec");
		pfnav_frame_alloc = GetAddress("av_frame_alloc");
		pfnav_frame_clone = GetAddress("av_frame_clone");
		pfnav_frame_copy = GetAddress("av_frame_copy");
		pfnav_frame_copy_props = GetAddress("av_frame_copy_props");
		pfnav_frame_free = GetAddress("av_frame_free");
		pfnav_frame_get_best_effort_timestamp = GetAddress("av_frame_get_best_effort_timestamp");
		pfnav_frame_get_buffer = GetAddress("av_frame_get_buffer");
		pfnav_frame_get_channel_layout = GetAddress("av_frame_get_channel_layout");
		pfnav_frame_get_channels = GetAddress("av_frame_get_channels");
		pfnav_frame_get_color_range = GetAddress("av_frame_get_color_range");
		pfnav_frame_get_colorspace = GetAddress("av_frame_get_colorspace");
		pfnav_frame_get_decode_error_flags = GetAddress("av_frame_get_decode_error_flags");
		pfnav_frame_get_metadata = GetAddress("av_frame_get_metadata");
		pfnav_frame_get_pkt_duration = GetAddress("av_frame_get_pkt_duration");
		pfnav_frame_get_pkt_pos = GetAddress("av_frame_get_pkt_pos");
		pfnav_frame_get_pkt_size = GetAddress("av_frame_get_pkt_size");
		pfnav_frame_get_plane_buffer = GetAddress("av_frame_get_plane_buffer");
		pfnav_frame_get_qp_table = GetAddress("av_frame_get_qp_table");
		pfnav_frame_get_sample_rate = GetAddress("av_frame_get_sample_rate");
		pfnav_frame_get_side_data = GetAddress("av_frame_get_side_data");
		pfnav_frame_is_writable = GetAddress("av_frame_is_writable");
		pfnav_frame_make_writable = GetAddress("av_frame_make_writable");
		pfnav_frame_move_ref = GetAddress("av_frame_move_ref");
		pfnav_frame_new_side_data = GetAddress("av_frame_new_side_data");
		pfnav_frame_ref = GetAddress("av_frame_ref");
		pfnav_frame_remove_side_data = GetAddress("av_frame_remove_side_data");
		pfnav_frame_set_best_effort_timestamp = GetAddress("av_frame_set_best_effort_timestamp");
		pfnav_frame_set_channel_layout = GetAddress("av_frame_set_channel_layout");
		pfnav_frame_set_channels = GetAddress("av_frame_set_channels");
		pfnav_frame_set_color_range = GetAddress("av_frame_set_color_range");
		pfnav_frame_set_colorspace = GetAddress("av_frame_set_colorspace");
		pfnav_frame_set_decode_error_flags = GetAddress("av_frame_set_decode_error_flags");
		pfnav_frame_set_metadata = GetAddress("av_frame_set_metadata");
		pfnav_frame_set_pkt_duration = GetAddress("av_frame_set_pkt_duration");
		pfnav_frame_set_pkt_pos = GetAddress("av_frame_set_pkt_pos");
		pfnav_frame_set_pkt_size = GetAddress("av_frame_set_pkt_size");
		pfnav_frame_set_qp_table = GetAddress("av_frame_set_qp_table");
		pfnav_frame_set_sample_rate = GetAddress("av_frame_set_sample_rate");
		pfnav_frame_side_data_name = GetAddress("av_frame_side_data_name");
		pfnav_frame_unref = GetAddress("av_frame_unref");
		pfnav_free = GetAddress("av_free");
		pfnav_free_packet = GetAddress("av_free_packet");
		pfnav_freep = GetAddress("av_freep");
		pfnav_gcd = GetAddress("av_gcd");
		pfnav_get_alt_sample_fmt = GetAddress("av_get_alt_sample_fmt");
		pfnav_get_audio_frame_duration = GetAddress("av_get_audio_frame_duration");
		pfnav_get_audio_frame_duration2 = GetAddress("av_get_audio_frame_duration2");
		pfnav_get_bits_per_pixel = GetAddress("av_get_bits_per_pixel");
		pfnav_get_bits_per_sample = GetAddress("av_get_bits_per_sample");
		pfnav_get_bytes_per_sample = GetAddress("av_get_bytes_per_sample");
		pfnav_get_channel_description = GetAddress("av_get_channel_description");
		pfnav_get_channel_layout = GetAddress("av_get_channel_layout");
		pfnav_get_channel_layout_channel_index = GetAddress("av_get_channel_layout_channel_index");
		pfnav_get_channel_layout_nb_channels = GetAddress("av_get_channel_layout_nb_channels");
		pfnav_get_channel_layout_string = GetAddress("av_get_channel_layout_string");
		pfnav_get_channel_name = GetAddress("av_get_channel_name");
		pfnav_get_codec_tag_string = GetAddress("av_get_codec_tag_string");
		pfnav_get_colorspace_name = GetAddress("av_get_colorspace_name");
		pfnav_get_cpu_flags = GetAddress("av_get_cpu_flags");
		pfnav_get_default_channel_layout = GetAddress("av_get_default_channel_layout");
		pfnav_get_exact_bits_per_sample = GetAddress("av_get_exact_bits_per_sample");
		pfnav_get_frame_filename = GetAddress("av_get_frame_filename");
		pfnav_get_frame_filename2 = GetAddress("av_get_frame_filename2");
		pfnav_get_known_color_name = GetAddress("av_get_known_color_name");
		pfnav_get_media_type_string = GetAddress("av_get_media_type_string");
		pfnav_get_output_timestamp = GetAddress("av_get_output_timestamp");
		pfnav_get_packed_sample_fmt = GetAddress("av_get_packed_sample_fmt");
		pfnav_get_packet = GetAddress("av_get_packet");
		pfnav_get_padded_bits_per_pixel = GetAddress("av_get_padded_bits_per_pixel");
		pfnav_get_pcm_codec = GetAddress("av_get_pcm_codec");
		pfnav_get_picture_type_char = GetAddress("av_get_picture_type_char");
		pfnav_get_pix_fmt = GetAddress("av_get_pix_fmt");
		pfnav_get_pix_fmt_loss = GetAddress("av_get_pix_fmt_loss");
		pfnav_get_pix_fmt_name = GetAddress("av_get_pix_fmt_name");
		pfnav_get_pix_fmt_string = GetAddress("av_get_pix_fmt_string");
		pfnav_get_planar_sample_fmt = GetAddress("av_get_planar_sample_fmt");
		pfnav_get_profile_name = GetAddress("av_get_profile_name");
		pfnav_get_random_seed = GetAddress("av_get_random_seed");
		pfnav_get_sample_fmt = GetAddress("av_get_sample_fmt");
		pfnav_get_sample_fmt_name = GetAddress("av_get_sample_fmt_name");
		pfnav_get_sample_fmt_string = GetAddress("av_get_sample_fmt_string");
		pfnav_get_standard_channel_layout = GetAddress("av_get_standard_channel_layout");
		pfnav_get_time_base_q = GetAddress("av_get_time_base_q");
		pfnav_get_token = GetAddress("av_get_token");
		pfnav_gettime = GetAddress("av_gettime");
		pfnav_gettime_relative = GetAddress("av_gettime_relative");
		pfnav_gettime_relative_is_monotonic = GetAddress("av_gettime_relative_is_monotonic");
		pfnav_grow_packet = GetAddress("av_grow_packet");
		pfnav_guess_codec = GetAddress("av_guess_codec");
		pfnav_guess_format = GetAddress("av_guess_format");
		pfnav_guess_frame_rate = GetAddress("av_guess_frame_rate");
		pfnav_guess_sample_aspect_ratio = GetAddress("av_guess_sample_aspect_ratio");
		pfnav_hash_alloc = GetAddress("av_hash_alloc");
		pfnav_hash_final = GetAddress("av_hash_final");
		pfnav_hash_final_b64 = GetAddress("av_hash_final_b64");
		pfnav_hash_final_bin = GetAddress("av_hash_final_bin");
		pfnav_hash_final_hex = GetAddress("av_hash_final_hex");
		pfnav_hash_freep = GetAddress("av_hash_freep");
		pfnav_hash_get_name = GetAddress("av_hash_get_name");
		pfnav_hash_get_size = GetAddress("av_hash_get_size");
		pfnav_hash_init = GetAddress("av_hash_init");
		pfnav_hash_names = GetAddress("av_hash_names");
		pfnav_hash_update = GetAddress("av_hash_update");
		pfnav_hex_dump = GetAddress("av_hex_dump");
		pfnav_hex_dump_log = GetAddress("av_hex_dump_log");
		pfnav_hmac_alloc = GetAddress("av_hmac_alloc");
		pfnav_hmac_calc = GetAddress("av_hmac_calc");
		pfnav_hmac_final = GetAddress("av_hmac_final");
		pfnav_hmac_free = GetAddress("av_hmac_free");
		pfnav_hmac_init = GetAddress("av_hmac_init");
		pfnav_hmac_update = GetAddress("av_hmac_update");
		pfnav_hwaccel_next = GetAddress("av_hwaccel_next");
		pfnav_hwdevice_ctx_alloc = GetAddress("av_hwdevice_ctx_alloc");
		pfnav_hwdevice_ctx_create = GetAddress("av_hwdevice_ctx_create");
		pfnav_hwdevice_ctx_init = GetAddress("av_hwdevice_ctx_init");
		pfnav_hwdevice_get_hwframe_constraints = GetAddress("av_hwdevice_get_hwframe_constraints");
		pfnav_hwdevice_hwconfig_alloc = GetAddress("av_hwdevice_hwconfig_alloc");
		pfnav_hwframe_constraints_free = GetAddress("av_hwframe_constraints_free");
		pfnav_hwframe_ctx_alloc = GetAddress("av_hwframe_ctx_alloc");
		pfnav_hwframe_ctx_init = GetAddress("av_hwframe_ctx_init");
		pfnav_hwframe_get_buffer = GetAddress("av_hwframe_get_buffer");
		pfnav_hwframe_transfer_data = GetAddress("av_hwframe_transfer_data");
		pfnav_hwframe_transfer_get_formats = GetAddress("av_hwframe_transfer_get_formats");
		pfnav_i2int = GetAddress("av_i2int");
		pfnav_iformat_next = GetAddress("av_iformat_next");
		pfnav_image_alloc = GetAddress("av_image_alloc");
		pfnav_image_check_sar = GetAddress("av_image_check_sar");
		pfnav_image_check_size = GetAddress("av_image_check_size");
		pfnav_image_copy = GetAddress("av_image_copy");
		pfnav_image_copy_plane = GetAddress("av_image_copy_plane");
		pfnav_image_copy_to_buffer = GetAddress("av_image_copy_to_buffer");
		pfnav_image_fill_arrays = GetAddress("av_image_fill_arrays");
		pfnav_image_fill_linesizes = GetAddress("av_image_fill_linesizes");
		pfnav_image_fill_max_pixsteps = GetAddress("av_image_fill_max_pixsteps");
		pfnav_image_fill_pointers = GetAddress("av_image_fill_pointers");
		pfnav_image_get_buffer_size = GetAddress("av_image_get_buffer_size");
		pfnav_image_get_linesize = GetAddress("av_image_get_linesize");
		pfnav_imdct_calc = GetAddress("av_imdct_calc");
		pfnav_imdct_half = GetAddress("av_imdct_half");
		pfnav_index_search_timestamp = GetAddress("av_index_search_timestamp");
		pfnav_init_packet = GetAddress("av_init_packet");
		pfnav_input_audio_device_next = GetAddress("av_input_audio_device_next");
		pfnav_input_video_device_next = GetAddress("av_input_video_device_next");
		pfnav_int2i = GetAddress("av_int2i");
		pfnav_int_list_length_for_size = GetAddress("av_int_list_length_for_size");
		pfnav_interleaved_write_frame = GetAddress("av_interleaved_write_frame");
		pfnav_interleaved_write_uncoded_frame = GetAddress("av_interleaved_write_uncoded_frame");
		pfnav_jni_get_java_vm = GetAddress("av_jni_get_java_vm");
		pfnav_jni_set_java_vm = GetAddress("av_jni_set_java_vm");
		pfnav_lfg_init = GetAddress("av_lfg_init");
		pfnav_lockmgr_register = GetAddress("av_lockmgr_register");
		pfnav_log = GetAddress("av_log");
		pfnav_log2 = GetAddress("av_log2");
		pfnav_log2_16bit = GetAddress("av_log2_16bit");
		pfnav_log2_i = GetAddress("av_log2_i");
		pfnav_log_ask_for_sample = GetAddress("av_log_ask_for_sample");
		pfnav_log_default_callback = GetAddress("av_log_default_callback");
		pfnav_log_format_line = GetAddress("av_log_format_line");
		pfnav_log_format_line2 = GetAddress("av_log_format_line2");
		pfnav_log_get_flags = GetAddress("av_log_get_flags");
		pfnav_log_get_level = GetAddress("av_log_get_level");
		pfnav_log_missing_feature = GetAddress("av_log_missing_feature");
		pfnav_log_set_callback = GetAddress("av_log_set_callback");
		pfnav_log_set_flags = GetAddress("av_log_set_flags");
		pfnav_log_set_level = GetAddress("av_log_set_level");
		pfnav_lzo1x_decode = GetAddress("av_lzo1x_decode");
		pfnav_malloc = GetAddress("av_malloc");
		pfnav_mallocz = GetAddress("av_mallocz");
		pfnav_mastering_display_metadata_alloc = GetAddress("av_mastering_display_metadata_alloc");
		pfnav_mastering_display_metadata_create_side_data = GetAddress("av_mastering_display_metadata_create_side_data");
		pfnav_match_ext = GetAddress("av_match_ext");
		pfnav_match_list = GetAddress("av_match_list");
		pfnav_match_name = GetAddress("av_match_name");
		pfnav_max_alloc = GetAddress("av_max_alloc");
		pfnav_md5_alloc = GetAddress("av_md5_alloc");
		pfnav_md5_final = GetAddress("av_md5_final");
		pfnav_md5_init = GetAddress("av_md5_init");
		pfnav_md5_sum = GetAddress("av_md5_sum");
		pfnav_md5_update = GetAddress("av_md5_update");
		pfnav_mdct_calc = GetAddress("av_mdct_calc");
		pfnav_mdct_end = GetAddress("av_mdct_end");
		pfnav_mdct_init = GetAddress("av_mdct_init");
		pfnav_mediacodec_alloc_context = GetAddress("av_mediacodec_alloc_context");
		pfnav_mediacodec_default_free = GetAddress("av_mediacodec_default_free");
		pfnav_mediacodec_default_init = GetAddress("av_mediacodec_default_init");
		pfnav_mediacodec_release_buffer = GetAddress("av_mediacodec_release_buffer");
		pfnav_memcpy_backptr = GetAddress("av_memcpy_backptr");
		pfnav_memdup = GetAddress("av_memdup");
		pfnav_mod_i = GetAddress("av_mod_i");
		pfnav_mul_i = GetAddress("av_mul_i");
		pfnav_mul_q = GetAddress("av_mul_q");
		pfnav_murmur3_alloc = GetAddress("av_murmur3_alloc");
		pfnav_murmur3_final = GetAddress("av_murmur3_final");
		pfnav_murmur3_init = GetAddress("av_murmur3_init");
		pfnav_murmur3_init_seeded = GetAddress("av_murmur3_init_seeded");
		pfnav_murmur3_update = GetAddress("av_murmur3_update");
		pfnav_nearer_q = GetAddress("av_nearer_q");
		pfnav_new_packet = GetAddress("av_new_packet");
		pfnav_new_program = GetAddress("av_new_program");
		pfnav_oformat_next = GetAddress("av_oformat_next");
		pfnav_opt_child_class_next = GetAddress("av_opt_child_class_next");
		pfnav_opt_child_next = GetAddress("av_opt_child_next");
		pfnav_opt_copy = GetAddress("av_opt_copy");
		pfnav_opt_eval_double = GetAddress("av_opt_eval_double");
		pfnav_opt_eval_flags = GetAddress("av_opt_eval_flags");
		pfnav_opt_eval_float = GetAddress("av_opt_eval_float");
		pfnav_opt_eval_int = GetAddress("av_opt_eval_int");
		pfnav_opt_eval_int64 = GetAddress("av_opt_eval_int64");
		pfnav_opt_eval_q = GetAddress("av_opt_eval_q");
		pfnav_opt_find = GetAddress("av_opt_find");
		pfnav_opt_find2 = GetAddress("av_opt_find2");
		pfnav_opt_flag_is_set = GetAddress("av_opt_flag_is_set");
		pfnav_opt_free = GetAddress("av_opt_free");
		pfnav_opt_freep_ranges = GetAddress("av_opt_freep_ranges");
		pfnav_opt_get = GetAddress("av_opt_get");
		pfnav_opt_get_channel_layout = GetAddress("av_opt_get_channel_layout");
		pfnav_opt_get_dict_val = GetAddress("av_opt_get_dict_val");
		pfnav_opt_get_double = GetAddress("av_opt_get_double");
		pfnav_opt_get_image_size = GetAddress("av_opt_get_image_size");
		pfnav_opt_get_int = GetAddress("av_opt_get_int");
		pfnav_opt_get_key_value = GetAddress("av_opt_get_key_value");
		pfnav_opt_get_pixel_fmt = GetAddress("av_opt_get_pixel_fmt");
		pfnav_opt_get_q = GetAddress("av_opt_get_q");
		pfnav_opt_get_sample_fmt = GetAddress("av_opt_get_sample_fmt");
		pfnav_opt_get_video_rate = GetAddress("av_opt_get_video_rate");
		pfnav_opt_is_set_to_default = GetAddress("av_opt_is_set_to_default");
		pfnav_opt_is_set_to_default_by_name = GetAddress("av_opt_is_set_to_default_by_name");
		pfnav_opt_next = GetAddress("av_opt_next");
		pfnav_opt_ptr = GetAddress("av_opt_ptr");
		pfnav_opt_query_ranges = GetAddress("av_opt_query_ranges");
		pfnav_opt_query_ranges_default = GetAddress("av_opt_query_ranges_default");
		pfnav_opt_serialize = GetAddress("av_opt_serialize");
		pfnav_opt_set = GetAddress("av_opt_set");
		pfnav_opt_set_bin = GetAddress("av_opt_set_bin");
		pfnav_opt_set_channel_layout = GetAddress("av_opt_set_channel_layout");
		pfnav_opt_set_defaults = GetAddress("av_opt_set_defaults");
		pfnav_opt_set_defaults2 = GetAddress("av_opt_set_defaults2");
		pfnav_opt_set_dict = GetAddress("av_opt_set_dict");
		pfnav_opt_set_dict2 = GetAddress("av_opt_set_dict2");
		pfnav_opt_set_dict_val = GetAddress("av_opt_set_dict_val");
		pfnav_opt_set_double = GetAddress("av_opt_set_double");
		pfnav_opt_set_from_string = GetAddress("av_opt_set_from_string");
		pfnav_opt_set_image_size = GetAddress("av_opt_set_image_size");
		pfnav_opt_set_int = GetAddress("av_opt_set_int");
		pfnav_opt_set_pixel_fmt = GetAddress("av_opt_set_pixel_fmt");
		pfnav_opt_set_q = GetAddress("av_opt_set_q");
		pfnav_opt_set_sample_fmt = GetAddress("av_opt_set_sample_fmt");
		pfnav_opt_set_video_rate = GetAddress("av_opt_set_video_rate");
		pfnav_opt_show2 = GetAddress("av_opt_show2");
		pfnav_output_audio_device_next = GetAddress("av_output_audio_device_next");
		pfnav_output_video_device_next = GetAddress("av_output_video_device_next");
		pfnav_packet_add_side_data = GetAddress("av_packet_add_side_data");
		pfnav_packet_alloc = GetAddress("av_packet_alloc");
		pfnav_packet_clone = GetAddress("av_packet_clone");
		pfnav_packet_copy_props = GetAddress("av_packet_copy_props");
		pfnav_packet_free = GetAddress("av_packet_free");
		pfnav_packet_free_side_data = GetAddress("av_packet_free_side_data");
		pfnav_packet_from_data = GetAddress("av_packet_from_data");
		pfnav_packet_get_side_data = GetAddress("av_packet_get_side_data");
		pfnav_packet_merge_side_data = GetAddress("av_packet_merge_side_data");
		pfnav_packet_move_ref = GetAddress("av_packet_move_ref");
		pfnav_packet_new_side_data = GetAddress("av_packet_new_side_data");
		pfnav_packet_pack_dictionary = GetAddress("av_packet_pack_dictionary");
		pfnav_packet_ref = GetAddress("av_packet_ref");
		pfnav_packet_rescale_ts = GetAddress("av_packet_rescale_ts");
		pfnav_packet_shrink_side_data = GetAddress("av_packet_shrink_side_data");
		pfnav_packet_side_data_name = GetAddress("av_packet_side_data_name");
		pfnav_packet_split_side_data = GetAddress("av_packet_split_side_data");
		pfnav_packet_unpack_dictionary = GetAddress("av_packet_unpack_dictionary");
		pfnav_packet_unref = GetAddress("av_packet_unref");
		pfnav_parse_color = GetAddress("av_parse_color");
		pfnav_parse_cpu_caps = GetAddress("av_parse_cpu_caps");
		pfnav_parse_cpu_flags = GetAddress("av_parse_cpu_flags");
		pfnav_parse_ratio = GetAddress("av_parse_ratio");
		pfnav_parse_time = GetAddress("av_parse_time");
		pfnav_parse_video_rate = GetAddress("av_parse_video_rate");
		pfnav_parse_video_size = GetAddress("av_parse_video_size");
		pfnav_parser_change = GetAddress("av_parser_change");
		pfnav_parser_close = GetAddress("av_parser_close");
		pfnav_parser_init = GetAddress("av_parser_init");
		pfnav_parser_next = GetAddress("av_parser_next");
		pfnav_parser_parse2 = GetAddress("av_parser_parse2");
		pfnav_picture_copy = GetAddress("av_picture_copy");
		pfnav_picture_crop = GetAddress("av_picture_crop");
		pfnav_picture_pad = GetAddress("av_picture_pad");
		pfnav_pix_fmt_count_planes = GetAddress("av_pix_fmt_count_planes");
		pfnav_pix_fmt_desc_get = GetAddress("av_pix_fmt_desc_get");
		pfnav_pix_fmt_desc_get_id = GetAddress("av_pix_fmt_desc_get_id");
		pfnav_pix_fmt_desc_next = GetAddress("av_pix_fmt_desc_next");
		pfnav_pix_fmt_get_chroma_sub_sample = GetAddress("av_pix_fmt_get_chroma_sub_sample");
		pfnav_pix_fmt_swap_endianness = GetAddress("av_pix_fmt_swap_endianness");
		pfnav_pixelutils_get_sad_fn = GetAddress("av_pixelutils_get_sad_fn");
		pfnav_pkt_dump2 = GetAddress("av_pkt_dump2");
		pfnav_pkt_dump_log2 = GetAddress("av_pkt_dump_log2");
		pfnav_probe_input_buffer = GetAddress("av_probe_input_buffer");
		pfnav_probe_input_buffer2 = GetAddress("av_probe_input_buffer2");
		pfnav_probe_input_format = GetAddress("av_probe_input_format");
		pfnav_probe_input_format2 = GetAddress("av_probe_input_format2");
		pfnav_probe_input_format3 = GetAddress("av_probe_input_format3");
		pfnav_program_add_stream_index = GetAddress("av_program_add_stream_index");
		pfnav_q2intfloat = GetAddress("av_q2intfloat");
		pfnav_qsv_alloc_context = GetAddress("av_qsv_alloc_context");
		pfnav_rc4_alloc = GetAddress("av_rc4_alloc");
		pfnav_rc4_crypt = GetAddress("av_rc4_crypt");
		pfnav_rc4_init = GetAddress("av_rc4_init");
		pfnav_read_frame = GetAddress("av_read_frame");
		pfnav_read_image_line = GetAddress("av_read_image_line");
		pfnav_read_pause = GetAddress("av_read_pause");
		pfnav_read_play = GetAddress("av_read_play");
		pfnav_realloc = GetAddress("av_realloc");
		pfnav_realloc_array = GetAddress("av_realloc_array");
		pfnav_realloc_f = GetAddress("av_realloc_f");
		pfnav_reallocp = GetAddress("av_reallocp");
		pfnav_reallocp_array = GetAddress("av_reallocp_array");
		pfnav_reduce = GetAddress("av_reduce");
		pfnav_register_all = GetAddress("av_register_all");
		pfnav_register_bitstream_filter = GetAddress("av_register_bitstream_filter");
		pfnav_register_codec_parser = GetAddress("av_register_codec_parser");
		pfnav_register_hwaccel = GetAddress("av_register_hwaccel");
		pfnav_register_input_format = GetAddress("av_register_input_format");
		pfnav_register_output_format = GetAddress("av_register_output_format");
		pfnav_resample = GetAddress("av_resample");
		pfnav_resample_close = GetAddress("av_resample_close");
		pfnav_resample_compensate = GetAddress("av_resample_compensate");
		pfnav_resample_init = GetAddress("av_resample_init");
		pfnav_rescale = GetAddress("av_rescale");
		pfnav_rescale_delta = GetAddress("av_rescale_delta");
		pfnav_rescale_q = GetAddress("av_rescale_q");
		pfnav_rescale_q_rnd = GetAddress("av_rescale_q_rnd");
		pfnav_rescale_rnd = GetAddress("av_rescale_rnd");
		pfnav_ripemd_alloc = GetAddress("av_ripemd_alloc");
		pfnav_ripemd_final = GetAddress("av_ripemd_final");
		pfnav_ripemd_init = GetAddress("av_ripemd_init");
		pfnav_ripemd_update = GetAddress("av_ripemd_update");
		pfnav_sample_fmt_is_planar = GetAddress("av_sample_fmt_is_planar");
		pfnav_samples_alloc = GetAddress("av_samples_alloc");
		pfnav_samples_alloc_array_and_samples = GetAddress("av_samples_alloc_array_and_samples");
		pfnav_samples_copy = GetAddress("av_samples_copy");
		pfnav_samples_fill_arrays = GetAddress("av_samples_fill_arrays");
		pfnav_samples_get_buffer_size = GetAddress("av_samples_get_buffer_size");
		pfnav_samples_set_silence = GetAddress("av_samples_set_silence");
		pfnav_sdp_create = GetAddress("av_sdp_create");
		pfnav_seek_frame = GetAddress("av_seek_frame");
		pfnav_set_cpu_flags_mask = GetAddress("av_set_cpu_flags_mask");
		pfnav_set_options_string = GetAddress("av_set_options_string");
		pfnav_sha512_alloc = GetAddress("av_sha512_alloc");
		pfnav_sha512_final = GetAddress("av_sha512_final");
		pfnav_sha512_init = GetAddress("av_sha512_init");
		pfnav_sha512_update = GetAddress("av_sha512_update");
		pfnav_sha_alloc = GetAddress("av_sha_alloc");
		pfnav_sha_final = GetAddress("av_sha_final");
		pfnav_sha_init = GetAddress("av_sha_init");
		pfnav_sha_update = GetAddress("av_sha_update");
		pfnav_shr_i = GetAddress("av_shr_i");
		pfnav_shrink_packet = GetAddress("av_shrink_packet");
		pfnav_small_strptime = GetAddress("av_small_strptime");
		pfnav_stereo3d_alloc = GetAddress("av_stereo3d_alloc");
		pfnav_stereo3d_create_side_data = GetAddress("av_stereo3d_create_side_data");
		pfnav_stereo3d_from_name = GetAddress("av_stereo3d_from_name");
		pfnav_stereo3d_type_name = GetAddress("av_stereo3d_type_name");
		pfnav_strcasecmp = GetAddress("av_strcasecmp");
		pfnav_strdup = GetAddress("av_strdup");
		pfnav_stream_add_side_data = GetAddress("av_stream_add_side_data");
		pfnav_stream_get_codec_timebase = GetAddress("av_stream_get_codec_timebase");
		pfnav_stream_get_end_pts = GetAddress("av_stream_get_end_pts");
		pfnav_stream_get_parser = GetAddress("av_stream_get_parser");
		pfnav_stream_get_r_frame_rate = GetAddress("av_stream_get_r_frame_rate");
		pfnav_stream_get_recommended_encoder_configuration = GetAddress("av_stream_get_recommended_encoder_configuration");
		pfnav_stream_get_side_data = GetAddress("av_stream_get_side_data");
		pfnav_stream_new_side_data = GetAddress("av_stream_new_side_data");
		pfnav_stream_set_r_frame_rate = GetAddress("av_stream_set_r_frame_rate");
		pfnav_stream_set_recommended_encoder_configuration = GetAddress("av_stream_set_recommended_encoder_configuration");
		pfnav_strerror = GetAddress("av_strerror");
		pfnav_stristart = GetAddress("av_stristart");
		pfnav_stristr = GetAddress("av_stristr");
		pfnav_strlcat = GetAddress("av_strlcat");
		pfnav_strlcatf = GetAddress("av_strlcatf");
		pfnav_strlcpy = GetAddress("av_strlcpy");
		pfnav_strncasecmp = GetAddress("av_strncasecmp");
		pfnav_strndup = GetAddress("av_strndup");
		pfnav_strnstr = GetAddress("av_strnstr");
		pfnav_strstart = GetAddress("av_strstart");
		pfnav_strtod = GetAddress("av_strtod");
		pfnav_strtok = GetAddress("av_strtok");
		pfnav_sub_i = GetAddress("av_sub_i");
		pfnav_sub_q = GetAddress("av_sub_q");
		pfnav_tea_alloc = GetAddress("av_tea_alloc");
		pfnav_tea_crypt = GetAddress("av_tea_crypt");
		pfnav_tea_init = GetAddress("av_tea_init");
		pfnav_tempfile = GetAddress("av_tempfile");
		pfnav_thread_message_flush = GetAddress("av_thread_message_flush");
		pfnav_thread_message_queue_alloc = GetAddress("av_thread_message_queue_alloc");
		pfnav_thread_message_queue_free = GetAddress("av_thread_message_queue_free");
		pfnav_thread_message_queue_recv = GetAddress("av_thread_message_queue_recv");
		pfnav_thread_message_queue_send = GetAddress("av_thread_message_queue_send");
		pfnav_thread_message_queue_set_err_recv = GetAddress("av_thread_message_queue_set_err_recv");
		pfnav_thread_message_queue_set_err_send = GetAddress("av_thread_message_queue_set_err_send");
		pfnav_thread_message_queue_set_free_func = GetAddress("av_thread_message_queue_set_free_func");
		pfnav_timecode_adjust_ntsc_framenum2 = GetAddress("av_timecode_adjust_ntsc_framenum2");
		pfnav_timecode_check_frame_rate = GetAddress("av_timecode_check_frame_rate");
		pfnav_timecode_get_smpte_from_framenum = GetAddress("av_timecode_get_smpte_from_framenum");
		pfnav_timecode_init = GetAddress("av_timecode_init");
		pfnav_timecode_init_from_string = GetAddress("av_timecode_init_from_string");
		pfnav_timecode_make_mpeg_tc_string = GetAddress("av_timecode_make_mpeg_tc_string");
		pfnav_timecode_make_smpte_tc_string = GetAddress("av_timecode_make_smpte_tc_string");
		pfnav_timecode_make_string = GetAddress("av_timecode_make_string");
		pfnav_timegm = GetAddress("av_timegm");
		pfnav_tree_destroy = GetAddress("av_tree_destroy");
		pfnav_tree_enumerate = GetAddress("av_tree_enumerate");
		pfnav_tree_find = GetAddress("av_tree_find");
		pfnav_tree_insert = GetAddress("av_tree_insert");
		pfnav_tree_node_alloc = GetAddress("av_tree_node_alloc");
		pfnav_twofish_alloc = GetAddress("av_twofish_alloc");
		pfnav_twofish_crypt = GetAddress("av_twofish_crypt");
		pfnav_twofish_init = GetAddress("av_twofish_init");
		pfnav_url_split = GetAddress("av_url_split");
		pfnav_usleep = GetAddress("av_usleep");
		pfnav_utf8_decode = GetAddress("av_utf8_decode");
		pfnav_vbprintf = GetAddress("av_vbprintf");
		pfnav_version_info = GetAddress("av_version_info");
		pfnav_vlog = GetAddress("av_vlog");
		pfnav_write_frame = GetAddress("av_write_frame");
		pfnav_write_image_line = GetAddress("av_write_image_line");
		pfnav_write_trailer = GetAddress("av_write_trailer");
		pfnav_write_uncoded_frame = GetAddress("av_write_uncoded_frame");
		pfnav_write_uncoded_frame_query = GetAddress("av_write_uncoded_frame_query");
		pfnav_xiphlacing = GetAddress("av_xiphlacing");
		pfnav_xtea_alloc = GetAddress("av_xtea_alloc");
		pfnav_xtea_crypt = GetAddress("av_xtea_crypt");
		pfnav_xtea_init = GetAddress("av_xtea_init");
		pfnav_xtea_le_crypt = GetAddress("av_xtea_le_crypt");
		pfnav_xtea_le_init = GetAddress("av_xtea_le_init");
		pfnavcodec_align_dimensions = GetAddress("avcodec_align_dimensions");
		pfnavcodec_align_dimensions2 = GetAddress("avcodec_align_dimensions2");
		pfnavcodec_alloc_context3 = GetAddress("avcodec_alloc_context3");
		pfnavcodec_chroma_pos_to_enum = GetAddress("avcodec_chroma_pos_to_enum");
		pfnavcodec_close = GetAddress("avcodec_close");
		pfnavcodec_configuration = GetAddress("avcodec_configuration");
		pfnavcodec_copy_context = GetAddress("avcodec_copy_context");
		pfnavcodec_dct_alloc = GetAddress("avcodec_dct_alloc");
		pfnavcodec_dct_get_class = GetAddress("avcodec_dct_get_class");
		pfnavcodec_dct_init = GetAddress("avcodec_dct_init");
		pfnavcodec_decode_audio4 = GetAddress("avcodec_decode_audio4");
		pfnavcodec_decode_subtitle2 = GetAddress("avcodec_decode_subtitle2");
		pfnavcodec_decode_video2 = GetAddress("avcodec_decode_video2");
		pfnavcodec_default_execute = GetAddress("avcodec_default_execute");
		pfnavcodec_default_execute2 = GetAddress("avcodec_default_execute2");
		pfnavcodec_default_get_buffer2 = GetAddress("avcodec_default_get_buffer2");
		pfnavcodec_default_get_format = GetAddress("avcodec_default_get_format");
		pfnavcodec_descriptor_get = GetAddress("avcodec_descriptor_get");
		pfnavcodec_descriptor_get_by_name = GetAddress("avcodec_descriptor_get_by_name");
		pfnavcodec_descriptor_next = GetAddress("avcodec_descriptor_next");
		pfnavcodec_encode_audio2 = GetAddress("avcodec_encode_audio2");
		pfnavcodec_encode_subtitle = GetAddress("avcodec_encode_subtitle");
		pfnavcodec_encode_video2 = GetAddress("avcodec_encode_video2");
		pfnavcodec_enum_to_chroma_pos = GetAddress("avcodec_enum_to_chroma_pos");
		pfnavcodec_fill_audio_frame = GetAddress("avcodec_fill_audio_frame");
		pfnavcodec_find_best_pix_fmt2 = GetAddress("avcodec_find_best_pix_fmt2");
		pfnavcodec_find_best_pix_fmt_of_2 = GetAddress("avcodec_find_best_pix_fmt_of_2");
		pfnavcodec_find_best_pix_fmt_of_list = GetAddress("avcodec_find_best_pix_fmt_of_list");
		pfnavcodec_find_decoder = GetAddress("avcodec_find_decoder");
		pfnavcodec_find_decoder_by_name = GetAddress("avcodec_find_decoder_by_name");
		pfnavcodec_find_encoder = GetAddress("avcodec_find_encoder");
		pfnavcodec_find_encoder_by_name = GetAddress("avcodec_find_encoder_by_name");
		pfnavcodec_flush_buffers = GetAddress("avcodec_flush_buffers");
		pfnavcodec_free_context = GetAddress("avcodec_free_context");
		pfnavcodec_get_chroma_sub_sample = GetAddress("avcodec_get_chroma_sub_sample");
		pfnavcodec_get_class = GetAddress("avcodec_get_class");
		pfnavcodec_get_context_defaults3 = GetAddress("avcodec_get_context_defaults3");
		pfnavcodec_get_edge_width = GetAddress("avcodec_get_edge_width");
		pfnavcodec_get_frame_class = GetAddress("avcodec_get_frame_class");
		pfnavcodec_get_name = GetAddress("avcodec_get_name");
		pfnavcodec_get_pix_fmt_loss = GetAddress("avcodec_get_pix_fmt_loss");
		pfnavcodec_get_subtitle_rect_class = GetAddress("avcodec_get_subtitle_rect_class");
		pfnavcodec_get_type = GetAddress("avcodec_get_type");
		pfnavcodec_is_open = GetAddress("avcodec_is_open");
		pfnavcodec_license = GetAddress("avcodec_license");
		pfnavcodec_open2 = GetAddress("avcodec_open2");
		pfnavcodec_parameters_alloc = GetAddress("avcodec_parameters_alloc");
		pfnavcodec_parameters_copy = GetAddress("avcodec_parameters_copy");
		pfnavcodec_parameters_free = GetAddress("avcodec_parameters_free");
		pfnavcodec_parameters_from_context = GetAddress("avcodec_parameters_from_context");
		pfnavcodec_parameters_to_context = GetAddress("avcodec_parameters_to_context");
		pfnavcodec_pix_fmt_to_codec_tag = GetAddress("avcodec_pix_fmt_to_codec_tag");
		pfnavcodec_profile_name = GetAddress("avcodec_profile_name");
		pfnavcodec_receive_frame = GetAddress("avcodec_receive_frame");
		pfnavcodec_receive_packet = GetAddress("avcodec_receive_packet");
		pfnavcodec_register = GetAddress("avcodec_register");
		pfnavcodec_register_all = GetAddress("avcodec_register_all");
		pfnavcodec_send_frame = GetAddress("avcodec_send_frame");
		pfnavcodec_send_packet = GetAddress("avcodec_send_packet");
		pfnavcodec_set_dimensions = GetAddress("avcodec_set_dimensions");
		pfnavcodec_string = GetAddress("avcodec_string");
		pfnavcodec_version = GetAddress("avcodec_version");
		pfnavdevice_app_to_dev_control_message = GetAddress("avdevice_app_to_dev_control_message");
		pfnavdevice_capabilities_create = GetAddress("avdevice_capabilities_create");
		pfnavdevice_capabilities_free = GetAddress("avdevice_capabilities_free");
		pfnavdevice_configuration = GetAddress("avdevice_configuration");
		pfnavdevice_dev_to_app_control_message = GetAddress("avdevice_dev_to_app_control_message");
		pfnavdevice_free_list_devices = GetAddress("avdevice_free_list_devices");
		pfnavdevice_license = GetAddress("avdevice_license");
		pfnavdevice_list_devices = GetAddress("avdevice_list_devices");
		pfnavdevice_list_input_sources = GetAddress("avdevice_list_input_sources");
		pfnavdevice_list_output_sinks = GetAddress("avdevice_list_output_sinks");
		pfnavdevice_register_all = GetAddress("avdevice_register_all");
		pfnavdevice_version = GetAddress("avdevice_version");
		pfnavfilter_add_matrix = GetAddress("avfilter_add_matrix");
		pfnavfilter_config_links = GetAddress("avfilter_config_links");
		pfnavfilter_configuration = GetAddress("avfilter_configuration");
		pfnavfilter_free = GetAddress("avfilter_free");
		pfnavfilter_get_by_name = GetAddress("avfilter_get_by_name");
		pfnavfilter_get_class = GetAddress("avfilter_get_class");
		pfnavfilter_get_matrix = GetAddress("avfilter_get_matrix");
		pfnavfilter_graph_add_filter = GetAddress("avfilter_graph_add_filter");
		pfnavfilter_graph_alloc = GetAddress("avfilter_graph_alloc");
		pfnavfilter_graph_alloc_filter = GetAddress("avfilter_graph_alloc_filter");
		pfnavfilter_graph_config = GetAddress("avfilter_graph_config");
		pfnavfilter_graph_create_filter = GetAddress("avfilter_graph_create_filter");
		pfnavfilter_graph_dump = GetAddress("avfilter_graph_dump");
		pfnavfilter_graph_free = GetAddress("avfilter_graph_free");
		pfnavfilter_graph_get_filter = GetAddress("avfilter_graph_get_filter");
		pfnavfilter_graph_parse = GetAddress("avfilter_graph_parse");
		pfnavfilter_graph_parse2 = GetAddress("avfilter_graph_parse2");
		pfnavfilter_graph_parse_ptr = GetAddress("avfilter_graph_parse_ptr");
		pfnavfilter_graph_queue_command = GetAddress("avfilter_graph_queue_command");
		pfnavfilter_graph_request_oldest = GetAddress("avfilter_graph_request_oldest");
		pfnavfilter_graph_send_command = GetAddress("avfilter_graph_send_command");
		pfnavfilter_graph_set_auto_convert = GetAddress("avfilter_graph_set_auto_convert");
		pfnavfilter_init_dict = GetAddress("avfilter_init_dict");
		pfnavfilter_init_filter = GetAddress("avfilter_init_filter");
		pfnavfilter_init_str = GetAddress("avfilter_init_str");
		pfnavfilter_inout_alloc = GetAddress("avfilter_inout_alloc");
		pfnavfilter_inout_free = GetAddress("avfilter_inout_free");
		pfnavfilter_insert_filter = GetAddress("avfilter_insert_filter");
		pfnavfilter_license = GetAddress("avfilter_license");
		pfnavfilter_link = GetAddress("avfilter_link");
		pfnavfilter_link_free = GetAddress("avfilter_link_free");
		pfnavfilter_link_get_channels = GetAddress("avfilter_link_get_channels");
		pfnavfilter_link_set_closed = GetAddress("avfilter_link_set_closed");
		pfnavfilter_make_format64_list = GetAddress("avfilter_make_format64_list");
		pfnavfilter_mul_matrix = GetAddress("avfilter_mul_matrix");
		pfnavfilter_next = GetAddress("avfilter_next");
		pfnavfilter_open = GetAddress("avfilter_open");
		pfnavfilter_pad_count = GetAddress("avfilter_pad_count");
		pfnavfilter_pad_get_name = GetAddress("avfilter_pad_get_name");
		pfnavfilter_pad_get_type = GetAddress("avfilter_pad_get_type");
		pfnavfilter_process_command = GetAddress("avfilter_process_command");
		pfnavfilter_register = GetAddress("avfilter_register");
		pfnavfilter_register_all = GetAddress("avfilter_register_all");
		pfnavfilter_sub_matrix = GetAddress("avfilter_sub_matrix");
		pfnavfilter_transform = GetAddress("avfilter_transform");
		pfnavfilter_uninit = GetAddress("avfilter_uninit");
		pfnavfilter_version = GetAddress("avfilter_version");
		pfnavformat_alloc_context = GetAddress("avformat_alloc_context");
		pfnavformat_alloc_output_context2 = GetAddress("avformat_alloc_output_context2");
		pfnavformat_close_input = GetAddress("avformat_close_input");
		pfnavformat_configuration = GetAddress("avformat_configuration");
		pfnavformat_find_stream_info = GetAddress("avformat_find_stream_info");
		pfnavformat_flush = GetAddress("avformat_flush");
		pfnavformat_free_context = GetAddress("avformat_free_context");
		pfnavformat_get_class = GetAddress("avformat_get_class");
		pfnavformat_get_mov_audio_tags = GetAddress("avformat_get_mov_audio_tags");
		pfnavformat_get_mov_video_tags = GetAddress("avformat_get_mov_video_tags");
		pfnavformat_get_riff_audio_tags = GetAddress("avformat_get_riff_audio_tags");
		pfnavformat_get_riff_video_tags = GetAddress("avformat_get_riff_video_tags");
		pfnavformat_init_output = GetAddress("avformat_init_output");
		pfnavformat_license = GetAddress("avformat_license");
		pfnavformat_match_stream_specifier = GetAddress("avformat_match_stream_specifier");
		pfnavformat_network_deinit = GetAddress("avformat_network_deinit");
		pfnavformat_network_init = GetAddress("avformat_network_init");
		pfnavformat_new_stream = GetAddress("avformat_new_stream");
		pfnavformat_open_input = GetAddress("avformat_open_input");
		pfnavformat_query_codec = GetAddress("avformat_query_codec");
		pfnavformat_queue_attached_pictures = GetAddress("avformat_queue_attached_pictures");
		pfnavformat_seek_file = GetAddress("avformat_seek_file");
		pfnavformat_transfer_internal_stream_timing_info = GetAddress("avformat_transfer_internal_stream_timing_info");
		pfnavformat_version = GetAddress("avformat_version");
		pfnavformat_write_header = GetAddress("avformat_write_header");
		pfnavio_accept = GetAddress("avio_accept");
		pfnavio_alloc_context = GetAddress("avio_alloc_context");
		pfnavio_check = GetAddress("avio_check");
		pfnavio_close = GetAddress("avio_close");
		pfnavio_close_dir = GetAddress("avio_close_dir");
		pfnavio_close_dyn_buf = GetAddress("avio_close_dyn_buf");
		pfnavio_closep = GetAddress("avio_closep");
		pfnavio_enum_protocols = GetAddress("avio_enum_protocols");
		pfnavio_feof = GetAddress("avio_feof");
		pfnavio_find_protocol_name = GetAddress("avio_find_protocol_name");
		pfnavio_flush = GetAddress("avio_flush");
		pfnavio_free_directory_entry = GetAddress("avio_free_directory_entry");
		pfnavio_get_str = GetAddress("avio_get_str");
		pfnavio_get_str16be = GetAddress("avio_get_str16be");
		pfnavio_get_str16le = GetAddress("avio_get_str16le");
		pfnavio_handshake = GetAddress("avio_handshake");
		pfnavio_open = GetAddress("avio_open");
		pfnavio_open2 = GetAddress("avio_open2");
		pfnavio_open_dir = GetAddress("avio_open_dir");
		pfnavio_open_dyn_buf = GetAddress("avio_open_dyn_buf");
		pfnavio_pause = GetAddress("avio_pause");
		pfnavio_printf = GetAddress("avio_printf");
		pfnavio_put_str = GetAddress("avio_put_str");
		pfnavio_put_str16be = GetAddress("avio_put_str16be");
		pfnavio_put_str16le = GetAddress("avio_put_str16le");
		pfnavio_r8 = GetAddress("avio_r8");
		pfnavio_rb16 = GetAddress("avio_rb16");
		pfnavio_rb24 = GetAddress("avio_rb24");
		pfnavio_rb32 = GetAddress("avio_rb32");
		pfnavio_rb64 = GetAddress("avio_rb64");
		pfnavio_read = GetAddress("avio_read");
		pfnavio_read_dir = GetAddress("avio_read_dir");
		pfnavio_read_to_bprint = GetAddress("avio_read_to_bprint");
		pfnavio_rl16 = GetAddress("avio_rl16");
		pfnavio_rl24 = GetAddress("avio_rl24");
		pfnavio_rl32 = GetAddress("avio_rl32");
		pfnavio_rl64 = GetAddress("avio_rl64");
		pfnavio_seek = GetAddress("avio_seek");
		pfnavio_seek_time = GetAddress("avio_seek_time");
		pfnavio_size = GetAddress("avio_size");
		pfnavio_skip = GetAddress("avio_skip");
		pfnavio_w8 = GetAddress("avio_w8");
		pfnavio_wb16 = GetAddress("avio_wb16");
		pfnavio_wb24 = GetAddress("avio_wb24");
		pfnavio_wb32 = GetAddress("avio_wb32");
		pfnavio_wb64 = GetAddress("avio_wb64");
		pfnavio_wl16 = GetAddress("avio_wl16");
		pfnavio_wl24 = GetAddress("avio_wl24");
		pfnavio_wl32 = GetAddress("avio_wl32");
		pfnavio_wl64 = GetAddress("avio_wl64");
		pfnavio_write = GetAddress("avio_write");
		pfnavio_write_marker = GetAddress("avio_write_marker");
		pfnavpicture_alloc = GetAddress("avpicture_alloc");
		pfnavpicture_fill = GetAddress("avpicture_fill");
		pfnavpicture_free = GetAddress("avpicture_free");
		pfnavpicture_get_size = GetAddress("avpicture_get_size");
		pfnavpicture_layout = GetAddress("avpicture_layout");
		pfnavpriv_aac_parse_header = GetAddress("avpriv_aac_parse_header");
		pfnavpriv_align_put_bits = GetAddress("avpriv_align_put_bits");
		pfnavpriv_alloc_fixed_dsp = GetAddress("avpriv_alloc_fixed_dsp");
		pfnavpriv_bprint_to_extradata = GetAddress("avpriv_bprint_to_extradata");
		pfnavpriv_codec_get_cap_skip_frame_fill_param = GetAddress("avpriv_codec_get_cap_skip_frame_fill_param");
		pfnavpriv_copy_bits = GetAddress("avpriv_copy_bits");
		pfnavpriv_copy_pce_data = GetAddress("avpriv_copy_pce_data");
		pfnavpriv_dict_set_timestamp = GetAddress("avpriv_dict_set_timestamp");
		pfnavpriv_emms_yasm = GetAddress("avpriv_emms_yasm");
		pfnavpriv_find_pix_fmt = GetAddress("avpriv_find_pix_fmt");
		pfnavpriv_find_start_code = GetAddress("avpriv_find_start_code");
		pfnavpriv_float_dsp_alloc = GetAddress("avpriv_float_dsp_alloc");
		pfnavpriv_frame_get_metadatap = GetAddress("avpriv_frame_get_metadatap");
		pfnavpriv_get_gamma_from_trc = GetAddress("avpriv_get_gamma_from_trc");
		pfnavpriv_get_raw_pix_fmt_tags = GetAddress("avpriv_get_raw_pix_fmt_tags");
		pfnavpriv_get_trc_function_from_trc = GetAddress("avpriv_get_trc_function_from_trc");
		pfnavpriv_h264_has_num_reorder_frames = GetAddress("avpriv_h264_has_num_reorder_frames");
		pfnavpriv_init_lls = GetAddress("avpriv_init_lls");
		pfnavpriv_io_delete = GetAddress("avpriv_io_delete");
		pfnavpriv_io_move = GetAddress("avpriv_io_move");
		pfnavpriv_lock_avformat = GetAddress("avpriv_lock_avformat");
		pfnavpriv_mpa_decode_header = GetAddress("avpriv_mpa_decode_header");
		pfnavpriv_mpa_decode_header2 = GetAddress("avpriv_mpa_decode_header2");
		pfnavpriv_mpeg4audio_get_config = GetAddress("avpriv_mpeg4audio_get_config");
		pfnavpriv_mpegaudio_decode_header = GetAddress("avpriv_mpegaudio_decode_header");
		pfnavpriv_mpegts_parse_close = GetAddress("avpriv_mpegts_parse_close");
		pfnavpriv_mpegts_parse_open = GetAddress("avpriv_mpegts_parse_open");
		pfnavpriv_mpegts_parse_packet = GetAddress("avpriv_mpegts_parse_packet");
		pfnavpriv_new_chapter = GetAddress("avpriv_new_chapter");
		pfnavpriv_put_string = GetAddress("avpriv_put_string");
		pfnavpriv_report_missing_feature = GetAddress("avpriv_report_missing_feature");
		pfnavpriv_request_sample = GetAddress("avpriv_request_sample");
		pfnavpriv_scalarproduct_float_c = GetAddress("avpriv_scalarproduct_float_c");
		pfnavpriv_set_pts_info = GetAddress("avpriv_set_pts_info");
		pfnavpriv_set_systematic_pal2 = GetAddress("avpriv_set_systematic_pal2");
		pfnavpriv_snprintf = GetAddress("avpriv_snprintf");
		pfnavpriv_solve_lls = GetAddress("avpriv_solve_lls");
		pfnavpriv_split_xiph_headers = GetAddress("avpriv_split_xiph_headers");
		pfnavpriv_strtod = GetAddress("avpriv_strtod");
		pfnavpriv_toupper4 = GetAddress("avpriv_toupper4");
		pfnavpriv_unlock_avformat = GetAddress("avpriv_unlock_avformat");
		pfnavpriv_vsnprintf = GetAddress("avpriv_vsnprintf");
		pfnavsubtitle_free = GetAddress("avsubtitle_free");
		pfnavutil_configuration = GetAddress("avutil_configuration");
		pfnavutil_license = GetAddress("avutil_license");
		pfnavutil_version = GetAddress("avutil_version");
		pfnffio_open_dyn_packet_buf = GetAddress("ffio_open_dyn_packet_buf");
		pfnffio_set_buf_size = GetAddress("ffio_set_buf_size");
		pfnffurl_close = GetAddress("ffurl_close");
		pfnffurl_open = GetAddress("ffurl_open");
		pfnffurl_write = GetAddress("ffurl_write");
		pfnswr_alloc = GetAddress("swr_alloc");
		pfnswr_alloc_set_opts = GetAddress("swr_alloc_set_opts");
		pfnswr_build_matrix = GetAddress("swr_build_matrix");
		pfnswr_close = GetAddress("swr_close");
		pfnswr_config_frame = GetAddress("swr_config_frame");
		pfnswr_convert = GetAddress("swr_convert");
		pfnswr_convert_frame = GetAddress("swr_convert_frame");
		pfnswr_drop_output = GetAddress("swr_drop_output");
		pfnswr_free = GetAddress("swr_free");
		pfnswr_get_class = GetAddress("swr_get_class");
		pfnswr_get_delay = GetAddress("swr_get_delay");
		pfnswr_get_out_samples = GetAddress("swr_get_out_samples");
		pfnswr_init = GetAddress("swr_init");
		pfnswr_inject_silence = GetAddress("swr_inject_silence");
		pfnswr_is_initialized = GetAddress("swr_is_initialized");
		pfnswr_next_pts = GetAddress("swr_next_pts");
		pfnswr_set_channel_mapping = GetAddress("swr_set_channel_mapping");
		pfnswr_set_compensation = GetAddress("swr_set_compensation");
		pfnswr_set_matrix = GetAddress("swr_set_matrix");
		pfnswresample_configuration = GetAddress("swresample_configuration");
		pfnswresample_license = GetAddress("swresample_license");
		pfnswresample_version = GetAddress("swresample_version");
		pfnsws_addVec = GetAddress("sws_addVec");
		pfnsws_allocVec = GetAddress("sws_allocVec");
		pfnsws_alloc_context = GetAddress("sws_alloc_context");
		pfnsws_alloc_set_opts = GetAddress("sws_alloc_set_opts");
		pfnsws_cloneVec = GetAddress("sws_cloneVec");
		pfnsws_convVec = GetAddress("sws_convVec");
		pfnsws_convertPalette8ToPacked24 = GetAddress("sws_convertPalette8ToPacked24");
		pfnsws_convertPalette8ToPacked32 = GetAddress("sws_convertPalette8ToPacked32");
		pfnsws_freeContext = GetAddress("sws_freeContext");
		pfnsws_freeFilter = GetAddress("sws_freeFilter");
		pfnsws_freeVec = GetAddress("sws_freeVec");
		pfnsws_getCachedContext = GetAddress("sws_getCachedContext");
		pfnsws_getCoefficients = GetAddress("sws_getCoefficients");
		pfnsws_getColorspaceDetails = GetAddress("sws_getColorspaceDetails");
		pfnsws_getConstVec = GetAddress("sws_getConstVec");
		pfnsws_getContext = GetAddress("sws_getContext");
		pfnsws_getDefaultFilter = GetAddress("sws_getDefaultFilter");
		pfnsws_getGaussianVec = GetAddress("sws_getGaussianVec");
		pfnsws_getIdentityVec = GetAddress("sws_getIdentityVec");
		pfnsws_get_class = GetAddress("sws_get_class");
		pfnsws_init_context = GetAddress("sws_init_context");
		pfnsws_isSupportedEndiannessConversion = GetAddress("sws_isSupportedEndiannessConversion");
		pfnsws_isSupportedInput = GetAddress("sws_isSupportedInput");
		pfnsws_isSupportedOutput = GetAddress("sws_isSupportedOutput");
		pfnsws_normalizeVec = GetAddress("sws_normalizeVec");
		pfnsws_printVec2 = GetAddress("sws_printVec2");
		pfnsws_scale = GetAddress("sws_scale");
		pfnsws_scaleVec = GetAddress("sws_scaleVec");
		pfnsws_setColorspaceDetails = GetAddress("sws_setColorspaceDetails");
		pfnsws_shiftVec = GetAddress("sws_shiftVec");
		pfnsws_subVec = GetAddress("sws_subVec");
		pfnswscale_configuration = GetAddress("swscale_configuration");
		pfnswscale_license = GetAddress("swscale_license");
		pfnswscale_version = GetAddress("swscale_version");
		pfnurl_feof = GetAddress("url_feof");
	}

	// 加载原始模块
	inline BOOL WINAPI Load()
	{
		TCHAR tzPath[MAX_PATH];
		TCHAR tzTemp[MAX_PATH * 2];

		lstrcpy(tzPath, TEXT("libFFmpegOrg.dll"));
		m_hModule = LoadLibrary(tzPath);
		if (m_hModule == NULL)
		{
			wsprintf(tzTemp, TEXT("无法加载 %s，程序无法正常运行。"), tzPath);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_ICONSTOP);
		}
		else
		{
			InitializeAddresses();
		}

		return (m_hModule != NULL);	
	}
		
	// 释放原始模块
	inline VOID WINAPI Free()
	{
		if (m_hModule)
		{
			FreeLibrary(m_hModule);
		}
	}
}
using namespace AheadLib;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 入口函数
BOOL WINAPI DllMain(HMODULE hModule, DWORD dwReason, PVOID pvReserved)
{
	if (dwReason == DLL_PROCESS_ATTACH)
	{
		DisableThreadLibraryCalls(hModule);

		return Load();
	}
	else if (dwReason == DLL_PROCESS_DETACH)
	{
		Free();
	}

	return TRUE;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_audio_resample(void)
{
	__asm JMP pfnaudio_resample;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_audio_resample_close(void)
{
	__asm JMP pfnaudio_resample_close;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_abuffersink_params_alloc(void)
{
	__asm JMP pfnav_abuffersink_params_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_add_i(void)
{
	__asm JMP pfnav_add_i;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_add_index_entry(void)
{
	__asm JMP pfnav_add_index_entry;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_add_q(void)
{
	__asm JMP pfnav_add_q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_add_stable(void)
{
	__asm JMP pfnav_add_stable;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_adler32_update(void)
{
	__asm JMP pfnav_adler32_update;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_alloc(void)
{
	__asm JMP pfnav_aes_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_crypt(void)
{
	__asm JMP pfnav_aes_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_ctr_alloc(void)
{
	__asm JMP pfnav_aes_ctr_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_ctr_crypt(void)
{
	__asm JMP pfnav_aes_ctr_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_ctr_free(void)
{
	__asm JMP pfnav_aes_ctr_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_ctr_get_iv(void)
{
	__asm JMP pfnav_aes_ctr_get_iv;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_ctr_increment_iv(void)
{
	__asm JMP pfnav_aes_ctr_increment_iv;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_ctr_init(void)
{
	__asm JMP pfnav_aes_ctr_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_ctr_set_iv(void)
{
	__asm JMP pfnav_aes_ctr_set_iv;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_ctr_set_random_iv(void)
{
	__asm JMP pfnav_aes_ctr_set_random_iv;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_aes_init(void)
{
	__asm JMP pfnav_aes_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_append_packet(void)
{
	__asm JMP pfnav_append_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_append_path_component(void)
{
	__asm JMP pfnav_append_path_component;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_apply_bitstream_filters(void)
{
	__asm JMP pfnav_apply_bitstream_filters;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_asprintf(void)
{
	__asm JMP pfnav_asprintf;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_assert0_fpu(void)
{
	__asm JMP pfnav_assert0_fpu;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_convert(void)
{
	__asm JMP pfnav_audio_convert;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_convert_alloc(void)
{
	__asm JMP pfnav_audio_convert_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_convert_free(void)
{
	__asm JMP pfnav_audio_convert_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_alloc(void)
{
	__asm JMP pfnav_audio_fifo_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_drain(void)
{
	__asm JMP pfnav_audio_fifo_drain;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_free(void)
{
	__asm JMP pfnav_audio_fifo_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_peek(void)
{
	__asm JMP pfnav_audio_fifo_peek;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_peek_at(void)
{
	__asm JMP pfnav_audio_fifo_peek_at;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_read(void)
{
	__asm JMP pfnav_audio_fifo_read;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_realloc(void)
{
	__asm JMP pfnav_audio_fifo_realloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_reset(void)
{
	__asm JMP pfnav_audio_fifo_reset;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_size(void)
{
	__asm JMP pfnav_audio_fifo_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_space(void)
{
	__asm JMP pfnav_audio_fifo_space;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_fifo_write(void)
{
	__asm JMP pfnav_audio_fifo_write;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_audio_resample_init(void)
{
	__asm JMP pfnav_audio_resample_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_base64_decode(void)
{
	__asm JMP pfnav_base64_decode;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_base64_encode(void)
{
	__asm JMP pfnav_base64_encode;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_basename(void)
{
	__asm JMP pfnav_basename;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bitstream_filter_close(void)
{
	__asm JMP pfnav_bitstream_filter_close;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bitstream_filter_filter(void)
{
	__asm JMP pfnav_bitstream_filter_filter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bitstream_filter_init(void)
{
	__asm JMP pfnav_bitstream_filter_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bitstream_filter_next(void)
{
	__asm JMP pfnav_bitstream_filter_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_blowfish_alloc(void)
{
	__asm JMP pfnav_blowfish_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_blowfish_crypt(void)
{
	__asm JMP pfnav_blowfish_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_blowfish_crypt_ecb(void)
{
	__asm JMP pfnav_blowfish_crypt_ecb;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_blowfish_init(void)
{
	__asm JMP pfnav_blowfish_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bmg_get(void)
{
	__asm JMP pfnav_bmg_get;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprint_append_data(void)
{
	__asm JMP pfnav_bprint_append_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprint_channel_layout(void)
{
	__asm JMP pfnav_bprint_channel_layout;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprint_chars(void)
{
	__asm JMP pfnav_bprint_chars;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprint_clear(void)
{
	__asm JMP pfnav_bprint_clear;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprint_escape(void)
{
	__asm JMP pfnav_bprint_escape;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprint_finalize(void)
{
	__asm JMP pfnav_bprint_finalize;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprint_get_buffer(void)
{
	__asm JMP pfnav_bprint_get_buffer;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprint_init(void)
{
	__asm JMP pfnav_bprint_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprint_init_for_buffer(void)
{
	__asm JMP pfnav_bprint_init_for_buffer;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprint_strftime(void)
{
	__asm JMP pfnav_bprint_strftime;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bprintf(void)
{
	__asm JMP pfnav_bprintf;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_alloc(void)
{
	__asm JMP pfnav_bsf_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_free(void)
{
	__asm JMP pfnav_bsf_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_get_by_name(void)
{
	__asm JMP pfnav_bsf_get_by_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_get_class(void)
{
	__asm JMP pfnav_bsf_get_class;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_get_null_filter(void)
{
	__asm JMP pfnav_bsf_get_null_filter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_init(void)
{
	__asm JMP pfnav_bsf_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_list_alloc(void)
{
	__asm JMP pfnav_bsf_list_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_list_append(void)
{
	__asm JMP pfnav_bsf_list_append;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_list_append2(void)
{
	__asm JMP pfnav_bsf_list_append2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_list_finalize(void)
{
	__asm JMP pfnav_bsf_list_finalize;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_list_free(void)
{
	__asm JMP pfnav_bsf_list_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_list_parse_str(void)
{
	__asm JMP pfnav_bsf_list_parse_str;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_next(void)
{
	__asm JMP pfnav_bsf_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_receive_packet(void)
{
	__asm JMP pfnav_bsf_receive_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_bsf_send_packet(void)
{
	__asm JMP pfnav_bsf_send_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_alloc(void)
{
	__asm JMP pfnav_buffer_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_allocz(void)
{
	__asm JMP pfnav_buffer_allocz;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_create(void)
{
	__asm JMP pfnav_buffer_create;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_default_free(void)
{
	__asm JMP pfnav_buffer_default_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_get_opaque(void)
{
	__asm JMP pfnav_buffer_get_opaque;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_get_ref_count(void)
{
	__asm JMP pfnav_buffer_get_ref_count;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_is_writable(void)
{
	__asm JMP pfnav_buffer_is_writable;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_make_writable(void)
{
	__asm JMP pfnav_buffer_make_writable;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_pool_get(void)
{
	__asm JMP pfnav_buffer_pool_get;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_pool_init(void)
{
	__asm JMP pfnav_buffer_pool_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_pool_init2(void)
{
	__asm JMP pfnav_buffer_pool_init2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_pool_uninit(void)
{
	__asm JMP pfnav_buffer_pool_uninit;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_realloc(void)
{
	__asm JMP pfnav_buffer_realloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_ref(void)
{
	__asm JMP pfnav_buffer_ref;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffer_unref(void)
{
	__asm JMP pfnav_buffer_unref;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersink_get_frame(void)
{
	__asm JMP pfnav_buffersink_get_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersink_get_frame_flags(void)
{
	__asm JMP pfnav_buffersink_get_frame_flags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersink_get_frame_rate(void)
{
	__asm JMP pfnav_buffersink_get_frame_rate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersink_get_samples(void)
{
	__asm JMP pfnav_buffersink_get_samples;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersink_params_alloc(void)
{
	__asm JMP pfnav_buffersink_params_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersink_set_frame_size(void)
{
	__asm JMP pfnav_buffersink_set_frame_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersrc_add_frame(void)
{
	__asm JMP pfnav_buffersrc_add_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersrc_add_frame_flags(void)
{
	__asm JMP pfnav_buffersrc_add_frame_flags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersrc_get_nb_failed_requests(void)
{
	__asm JMP pfnav_buffersrc_get_nb_failed_requests;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersrc_parameters_alloc(void)
{
	__asm JMP pfnav_buffersrc_parameters_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersrc_parameters_set(void)
{
	__asm JMP pfnav_buffersrc_parameters_set;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_buffersrc_write_frame(void)
{
	__asm JMP pfnav_buffersrc_write_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_calloc(void)
{
	__asm JMP pfnav_calloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_camellia_alloc(void)
{
	__asm JMP pfnav_camellia_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_camellia_crypt(void)
{
	__asm JMP pfnav_camellia_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_camellia_init(void)
{
	__asm JMP pfnav_camellia_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_cast5_alloc(void)
{
	__asm JMP pfnav_cast5_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_cast5_crypt(void)
{
	__asm JMP pfnav_cast5_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_cast5_crypt2(void)
{
	__asm JMP pfnav_cast5_crypt2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_cast5_init(void)
{
	__asm JMP pfnav_cast5_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_channel_layout_extract_channel(void)
{
	__asm JMP pfnav_channel_layout_extract_channel;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_chroma_location_name(void)
{
	__asm JMP pfnav_chroma_location_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_cmp_i(void)
{
	__asm JMP pfnav_cmp_i;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_get_chroma_intra_matrix(void)
{
	__asm JMP pfnav_codec_get_chroma_intra_matrix;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_get_codec_descriptor(void)
{
	__asm JMP pfnav_codec_get_codec_descriptor;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_get_codec_properties(void)
{
	__asm JMP pfnav_codec_get_codec_properties;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_get_id(void)
{
	__asm JMP pfnav_codec_get_id;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_get_lowres(void)
{
	__asm JMP pfnav_codec_get_lowres;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_get_max_lowres(void)
{
	__asm JMP pfnav_codec_get_max_lowres;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_get_pkt_timebase(void)
{
	__asm JMP pfnav_codec_get_pkt_timebase;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_get_seek_preroll(void)
{
	__asm JMP pfnav_codec_get_seek_preroll;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_get_tag(void)
{
	__asm JMP pfnav_codec_get_tag;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_get_tag2(void)
{
	__asm JMP pfnav_codec_get_tag2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_is_decoder(void)
{
	__asm JMP pfnav_codec_is_decoder;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_is_encoder(void)
{
	__asm JMP pfnav_codec_is_encoder;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_next(void)
{
	__asm JMP pfnav_codec_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_set_chroma_intra_matrix(void)
{
	__asm JMP pfnav_codec_set_chroma_intra_matrix;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_set_codec_descriptor(void)
{
	__asm JMP pfnav_codec_set_codec_descriptor;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_set_lowres(void)
{
	__asm JMP pfnav_codec_set_lowres;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_set_pkt_timebase(void)
{
	__asm JMP pfnav_codec_set_pkt_timebase;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_codec_set_seek_preroll(void)
{
	__asm JMP pfnav_codec_set_seek_preroll;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_color_primaries_name(void)
{
	__asm JMP pfnav_color_primaries_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_color_range_name(void)
{
	__asm JMP pfnav_color_range_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_color_space_name(void)
{
	__asm JMP pfnav_color_space_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_color_transfer_name(void)
{
	__asm JMP pfnav_color_transfer_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_compare_mod(void)
{
	__asm JMP pfnav_compare_mod;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_compare_ts(void)
{
	__asm JMP pfnav_compare_ts;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_convert_lang_to(void)
{
	__asm JMP pfnav_convert_lang_to;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_copy_packet(void)
{
	__asm JMP pfnav_copy_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_copy_packet_side_data(void)
{
	__asm JMP pfnav_copy_packet_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_cpb_properties_alloc(void)
{
	__asm JMP pfnav_cpb_properties_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_cpu_count(void)
{
	__asm JMP pfnav_cpu_count;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_crc(void)
{
	__asm JMP pfnav_crc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_crc_get_table(void)
{
	__asm JMP pfnav_crc_get_table;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_crc_init(void)
{
	__asm JMP pfnav_crc_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_d2q(void)
{
	__asm JMP pfnav_d2q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_d2str(void)
{
	__asm JMP pfnav_d2str;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_d3d11va_alloc_context(void)
{
	__asm JMP pfnav_d3d11va_alloc_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_default_get_category(void)
{
	__asm JMP pfnav_default_get_category;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_default_item_name(void)
{
	__asm JMP pfnav_default_item_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_demuxer_open(void)
{
	__asm JMP pfnav_demuxer_open;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_des_alloc(void)
{
	__asm JMP pfnav_des_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_des_crypt(void)
{
	__asm JMP pfnav_des_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_des_init(void)
{
	__asm JMP pfnav_des_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_des_mac(void)
{
	__asm JMP pfnav_des_mac;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dict_copy(void)
{
	__asm JMP pfnav_dict_copy;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dict_count(void)
{
	__asm JMP pfnav_dict_count;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dict_free(void)
{
	__asm JMP pfnav_dict_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dict_get(void)
{
	__asm JMP pfnav_dict_get;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dict_get_string(void)
{
	__asm JMP pfnav_dict_get_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dict_parse_string(void)
{
	__asm JMP pfnav_dict_parse_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dict_set(void)
{
	__asm JMP pfnav_dict_set;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dict_set_int(void)
{
	__asm JMP pfnav_dict_set_int;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dirac_parse_sequence_header(void)
{
	__asm JMP pfnav_dirac_parse_sequence_header;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dirname(void)
{
	__asm JMP pfnav_dirname;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_display_matrix_flip(void)
{
	__asm JMP pfnav_display_matrix_flip;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_display_rotation_get(void)
{
	__asm JMP pfnav_display_rotation_get;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_display_rotation_set(void)
{
	__asm JMP pfnav_display_rotation_set;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_div_i(void)
{
	__asm JMP pfnav_div_i;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_div_q(void)
{
	__asm JMP pfnav_div_q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_downmix_info_update_side_data(void)
{
	__asm JMP pfnav_downmix_info_update_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dump_format(void)
{
	__asm JMP pfnav_dump_format;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dup_packet(void)
{
	__asm JMP pfnav_dup_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dv_codec_profile(void)
{
	__asm JMP pfnav_dv_codec_profile;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dv_codec_profile2(void)
{
	__asm JMP pfnav_dv_codec_profile2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dv_frame_profile(void)
{
	__asm JMP pfnav_dv_frame_profile;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dynarray2_add(void)
{
	__asm JMP pfnav_dynarray2_add;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dynarray_add(void)
{
	__asm JMP pfnav_dynarray_add;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_dynarray_add_nofree(void)
{
	__asm JMP pfnav_dynarray_add_nofree;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_escape(void)
{
	__asm JMP pfnav_escape;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_expr_eval(void)
{
	__asm JMP pfnav_expr_eval;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_expr_free(void)
{
	__asm JMP pfnav_expr_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_expr_parse(void)
{
	__asm JMP pfnav_expr_parse;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_expr_parse_and_eval(void)
{
	__asm JMP pfnav_expr_parse_and_eval;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fast_malloc(void)
{
	__asm JMP pfnav_fast_malloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fast_mallocz(void)
{
	__asm JMP pfnav_fast_mallocz;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fast_padded_malloc(void)
{
	__asm JMP pfnav_fast_padded_malloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fast_padded_mallocz(void)
{
	__asm JMP pfnav_fast_padded_mallocz;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fast_realloc(void)
{
	__asm JMP pfnav_fast_realloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fft_calc(void)
{
	__asm JMP pfnav_fft_calc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fft_end(void)
{
	__asm JMP pfnav_fft_end;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fft_init(void)
{
	__asm JMP pfnav_fft_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fft_permute(void)
{
	__asm JMP pfnav_fft_permute;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_alloc(void)
{
	__asm JMP pfnav_fifo_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_alloc_array(void)
{
	__asm JMP pfnav_fifo_alloc_array;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_drain(void)
{
	__asm JMP pfnav_fifo_drain;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_free(void)
{
	__asm JMP pfnav_fifo_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_freep(void)
{
	__asm JMP pfnav_fifo_freep;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_generic_peek(void)
{
	__asm JMP pfnav_fifo_generic_peek;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_generic_peek_at(void)
{
	__asm JMP pfnav_fifo_generic_peek_at;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_generic_read(void)
{
	__asm JMP pfnav_fifo_generic_read;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_generic_write(void)
{
	__asm JMP pfnav_fifo_generic_write;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_grow(void)
{
	__asm JMP pfnav_fifo_grow;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_realloc2(void)
{
	__asm JMP pfnav_fifo_realloc2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_reset(void)
{
	__asm JMP pfnav_fifo_reset;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_size(void)
{
	__asm JMP pfnav_fifo_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fifo_space(void)
{
	__asm JMP pfnav_fifo_space;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_file_map(void)
{
	__asm JMP pfnav_file_map;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_file_unmap(void)
{
	__asm JMP pfnav_file_unmap;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_filename_number_test(void)
{
	__asm JMP pfnav_filename_number_test;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_filter_next(void)
{
	__asm JMP pfnav_filter_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_find_best_pix_fmt_of_2(void)
{
	__asm JMP pfnav_find_best_pix_fmt_of_2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_find_best_stream(void)
{
	__asm JMP pfnav_find_best_stream;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_find_default_stream_index(void)
{
	__asm JMP pfnav_find_default_stream_index;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_find_info_tag(void)
{
	__asm JMP pfnav_find_info_tag;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_find_input_format(void)
{
	__asm JMP pfnav_find_input_format;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_find_nearest_q_idx(void)
{
	__asm JMP pfnav_find_nearest_q_idx;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_find_program_from_stream(void)
{
	__asm JMP pfnav_find_program_from_stream;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fmt_ctx_get_duration_estimation_method(void)
{
	__asm JMP pfnav_fmt_ctx_get_duration_estimation_method;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_fopen_utf8(void)
{
	__asm JMP pfnav_fopen_utf8;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_force_cpu_flags(void)
{
	__asm JMP pfnav_force_cpu_flags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_get_audio_codec(void)
{
	__asm JMP pfnav_format_get_audio_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_get_control_message_cb(void)
{
	__asm JMP pfnav_format_get_control_message_cb;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_get_data_codec(void)
{
	__asm JMP pfnav_format_get_data_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_get_metadata_header_padding(void)
{
	__asm JMP pfnav_format_get_metadata_header_padding;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_get_opaque(void)
{
	__asm JMP pfnav_format_get_opaque;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_get_open_cb(void)
{
	__asm JMP pfnav_format_get_open_cb;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_get_probe_score(void)
{
	__asm JMP pfnav_format_get_probe_score;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_get_subtitle_codec(void)
{
	__asm JMP pfnav_format_get_subtitle_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_get_video_codec(void)
{
	__asm JMP pfnav_format_get_video_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_inject_global_side_data(void)
{
	__asm JMP pfnav_format_inject_global_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_set_audio_codec(void)
{
	__asm JMP pfnav_format_set_audio_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_set_control_message_cb(void)
{
	__asm JMP pfnav_format_set_control_message_cb;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_set_data_codec(void)
{
	__asm JMP pfnav_format_set_data_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_set_metadata_header_padding(void)
{
	__asm JMP pfnav_format_set_metadata_header_padding;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_set_opaque(void)
{
	__asm JMP pfnav_format_set_opaque;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_set_open_cb(void)
{
	__asm JMP pfnav_format_set_open_cb;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_set_subtitle_codec(void)
{
	__asm JMP pfnav_format_set_subtitle_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_format_set_video_codec(void)
{
	__asm JMP pfnav_format_set_video_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_alloc(void)
{
	__asm JMP pfnav_frame_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_clone(void)
{
	__asm JMP pfnav_frame_clone;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_copy(void)
{
	__asm JMP pfnav_frame_copy;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_copy_props(void)
{
	__asm JMP pfnav_frame_copy_props;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_free(void)
{
	__asm JMP pfnav_frame_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_best_effort_timestamp(void)
{
	__asm JMP pfnav_frame_get_best_effort_timestamp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_buffer(void)
{
	__asm JMP pfnav_frame_get_buffer;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_channel_layout(void)
{
	__asm JMP pfnav_frame_get_channel_layout;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_channels(void)
{
	__asm JMP pfnav_frame_get_channels;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_color_range(void)
{
	__asm JMP pfnav_frame_get_color_range;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_colorspace(void)
{
	__asm JMP pfnav_frame_get_colorspace;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_decode_error_flags(void)
{
	__asm JMP pfnav_frame_get_decode_error_flags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_metadata(void)
{
	__asm JMP pfnav_frame_get_metadata;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_pkt_duration(void)
{
	__asm JMP pfnav_frame_get_pkt_duration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_pkt_pos(void)
{
	__asm JMP pfnav_frame_get_pkt_pos;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_pkt_size(void)
{
	__asm JMP pfnav_frame_get_pkt_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_plane_buffer(void)
{
	__asm JMP pfnav_frame_get_plane_buffer;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_qp_table(void)
{
	__asm JMP pfnav_frame_get_qp_table;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_sample_rate(void)
{
	__asm JMP pfnav_frame_get_sample_rate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_get_side_data(void)
{
	__asm JMP pfnav_frame_get_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_is_writable(void)
{
	__asm JMP pfnav_frame_is_writable;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_make_writable(void)
{
	__asm JMP pfnav_frame_make_writable;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_move_ref(void)
{
	__asm JMP pfnav_frame_move_ref;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_new_side_data(void)
{
	__asm JMP pfnav_frame_new_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_ref(void)
{
	__asm JMP pfnav_frame_ref;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_remove_side_data(void)
{
	__asm JMP pfnav_frame_remove_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_best_effort_timestamp(void)
{
	__asm JMP pfnav_frame_set_best_effort_timestamp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_channel_layout(void)
{
	__asm JMP pfnav_frame_set_channel_layout;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_channels(void)
{
	__asm JMP pfnav_frame_set_channels;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_color_range(void)
{
	__asm JMP pfnav_frame_set_color_range;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_colorspace(void)
{
	__asm JMP pfnav_frame_set_colorspace;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_decode_error_flags(void)
{
	__asm JMP pfnav_frame_set_decode_error_flags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_metadata(void)
{
	__asm JMP pfnav_frame_set_metadata;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_pkt_duration(void)
{
	__asm JMP pfnav_frame_set_pkt_duration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_pkt_pos(void)
{
	__asm JMP pfnav_frame_set_pkt_pos;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_pkt_size(void)
{
	__asm JMP pfnav_frame_set_pkt_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_qp_table(void)
{
	__asm JMP pfnav_frame_set_qp_table;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_set_sample_rate(void)
{
	__asm JMP pfnav_frame_set_sample_rate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_side_data_name(void)
{
	__asm JMP pfnav_frame_side_data_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_frame_unref(void)
{
	__asm JMP pfnav_frame_unref;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_free(void)
{
	__asm JMP pfnav_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_free_packet(void)
{
	__asm JMP pfnav_free_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_freep(void)
{
	__asm JMP pfnav_freep;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_gcd(void)
{
	__asm JMP pfnav_gcd;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_alt_sample_fmt(void)
{
	__asm JMP pfnav_get_alt_sample_fmt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_audio_frame_duration(void)
{
	__asm JMP pfnav_get_audio_frame_duration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_audio_frame_duration2(void)
{
	__asm JMP pfnav_get_audio_frame_duration2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_bits_per_pixel(void)
{
	__asm JMP pfnav_get_bits_per_pixel;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_bits_per_sample(void)
{
	__asm JMP pfnav_get_bits_per_sample;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_bytes_per_sample(void)
{
	__asm JMP pfnav_get_bytes_per_sample;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_channel_description(void)
{
	__asm JMP pfnav_get_channel_description;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_channel_layout(void)
{
	__asm JMP pfnav_get_channel_layout;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_channel_layout_channel_index(void)
{
	__asm JMP pfnav_get_channel_layout_channel_index;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_channel_layout_nb_channels(void)
{
	__asm JMP pfnav_get_channel_layout_nb_channels;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_channel_layout_string(void)
{
	__asm JMP pfnav_get_channel_layout_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_channel_name(void)
{
	__asm JMP pfnav_get_channel_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_codec_tag_string(void)
{
	__asm JMP pfnav_get_codec_tag_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_colorspace_name(void)
{
	__asm JMP pfnav_get_colorspace_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_cpu_flags(void)
{
	__asm JMP pfnav_get_cpu_flags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_default_channel_layout(void)
{
	__asm JMP pfnav_get_default_channel_layout;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_exact_bits_per_sample(void)
{
	__asm JMP pfnav_get_exact_bits_per_sample;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_frame_filename(void)
{
	__asm JMP pfnav_get_frame_filename;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_frame_filename2(void)
{
	__asm JMP pfnav_get_frame_filename2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_known_color_name(void)
{
	__asm JMP pfnav_get_known_color_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_media_type_string(void)
{
	__asm JMP pfnav_get_media_type_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_output_timestamp(void)
{
	__asm JMP pfnav_get_output_timestamp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_packed_sample_fmt(void)
{
	__asm JMP pfnav_get_packed_sample_fmt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_packet(void)
{
	__asm JMP pfnav_get_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_padded_bits_per_pixel(void)
{
	__asm JMP pfnav_get_padded_bits_per_pixel;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_pcm_codec(void)
{
	__asm JMP pfnav_get_pcm_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_picture_type_char(void)
{
	__asm JMP pfnav_get_picture_type_char;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_pix_fmt(void)
{
	__asm JMP pfnav_get_pix_fmt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_pix_fmt_loss(void)
{
	__asm JMP pfnav_get_pix_fmt_loss;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_pix_fmt_name(void)
{
	__asm JMP pfnav_get_pix_fmt_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_pix_fmt_string(void)
{
	__asm JMP pfnav_get_pix_fmt_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_planar_sample_fmt(void)
{
	__asm JMP pfnav_get_planar_sample_fmt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_profile_name(void)
{
	__asm JMP pfnav_get_profile_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_random_seed(void)
{
	__asm JMP pfnav_get_random_seed;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_sample_fmt(void)
{
	__asm JMP pfnav_get_sample_fmt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_sample_fmt_name(void)
{
	__asm JMP pfnav_get_sample_fmt_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_sample_fmt_string(void)
{
	__asm JMP pfnav_get_sample_fmt_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_standard_channel_layout(void)
{
	__asm JMP pfnav_get_standard_channel_layout;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_time_base_q(void)
{
	__asm JMP pfnav_get_time_base_q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_get_token(void)
{
	__asm JMP pfnav_get_token;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_gettime(void)
{
	__asm JMP pfnav_gettime;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_gettime_relative(void)
{
	__asm JMP pfnav_gettime_relative;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_gettime_relative_is_monotonic(void)
{
	__asm JMP pfnav_gettime_relative_is_monotonic;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_grow_packet(void)
{
	__asm JMP pfnav_grow_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_guess_codec(void)
{
	__asm JMP pfnav_guess_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_guess_format(void)
{
	__asm JMP pfnav_guess_format;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_guess_frame_rate(void)
{
	__asm JMP pfnav_guess_frame_rate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_guess_sample_aspect_ratio(void)
{
	__asm JMP pfnav_guess_sample_aspect_ratio;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_alloc(void)
{
	__asm JMP pfnav_hash_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_final(void)
{
	__asm JMP pfnav_hash_final;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_final_b64(void)
{
	__asm JMP pfnav_hash_final_b64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_final_bin(void)
{
	__asm JMP pfnav_hash_final_bin;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_final_hex(void)
{
	__asm JMP pfnav_hash_final_hex;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_freep(void)
{
	__asm JMP pfnav_hash_freep;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_get_name(void)
{
	__asm JMP pfnav_hash_get_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_get_size(void)
{
	__asm JMP pfnav_hash_get_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_init(void)
{
	__asm JMP pfnav_hash_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_names(void)
{
	__asm JMP pfnav_hash_names;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hash_update(void)
{
	__asm JMP pfnav_hash_update;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hex_dump(void)
{
	__asm JMP pfnav_hex_dump;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hex_dump_log(void)
{
	__asm JMP pfnav_hex_dump_log;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hmac_alloc(void)
{
	__asm JMP pfnav_hmac_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hmac_calc(void)
{
	__asm JMP pfnav_hmac_calc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hmac_final(void)
{
	__asm JMP pfnav_hmac_final;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hmac_free(void)
{
	__asm JMP pfnav_hmac_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hmac_init(void)
{
	__asm JMP pfnav_hmac_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hmac_update(void)
{
	__asm JMP pfnav_hmac_update;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwaccel_next(void)
{
	__asm JMP pfnav_hwaccel_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwdevice_ctx_alloc(void)
{
	__asm JMP pfnav_hwdevice_ctx_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwdevice_ctx_create(void)
{
	__asm JMP pfnav_hwdevice_ctx_create;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwdevice_ctx_init(void)
{
	__asm JMP pfnav_hwdevice_ctx_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwdevice_get_hwframe_constraints(void)
{
	__asm JMP pfnav_hwdevice_get_hwframe_constraints;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwdevice_hwconfig_alloc(void)
{
	__asm JMP pfnav_hwdevice_hwconfig_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwframe_constraints_free(void)
{
	__asm JMP pfnav_hwframe_constraints_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwframe_ctx_alloc(void)
{
	__asm JMP pfnav_hwframe_ctx_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwframe_ctx_init(void)
{
	__asm JMP pfnav_hwframe_ctx_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwframe_get_buffer(void)
{
	__asm JMP pfnav_hwframe_get_buffer;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwframe_transfer_data(void)
{
	__asm JMP pfnav_hwframe_transfer_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_hwframe_transfer_get_formats(void)
{
	__asm JMP pfnav_hwframe_transfer_get_formats;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_i2int(void)
{
	__asm JMP pfnav_i2int;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_iformat_next(void)
{
	__asm JMP pfnav_iformat_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_alloc(void)
{
	__asm JMP pfnav_image_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_check_sar(void)
{
	__asm JMP pfnav_image_check_sar;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_check_size(void)
{
	__asm JMP pfnav_image_check_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_copy(void)
{
	__asm JMP pfnav_image_copy;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_copy_plane(void)
{
	__asm JMP pfnav_image_copy_plane;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_copy_to_buffer(void)
{
	__asm JMP pfnav_image_copy_to_buffer;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_fill_arrays(void)
{
	__asm JMP pfnav_image_fill_arrays;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_fill_linesizes(void)
{
	__asm JMP pfnav_image_fill_linesizes;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_fill_max_pixsteps(void)
{
	__asm JMP pfnav_image_fill_max_pixsteps;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_fill_pointers(void)
{
	__asm JMP pfnav_image_fill_pointers;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_get_buffer_size(void)
{
	__asm JMP pfnav_image_get_buffer_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_image_get_linesize(void)
{
	__asm JMP pfnav_image_get_linesize;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_imdct_calc(void)
{
	__asm JMP pfnav_imdct_calc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_imdct_half(void)
{
	__asm JMP pfnav_imdct_half;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_index_search_timestamp(void)
{
	__asm JMP pfnav_index_search_timestamp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_init_packet(void)
{
	__asm JMP pfnav_init_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_input_audio_device_next(void)
{
	__asm JMP pfnav_input_audio_device_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_input_video_device_next(void)
{
	__asm JMP pfnav_input_video_device_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_int2i(void)
{
	__asm JMP pfnav_int2i;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_int_list_length_for_size(void)
{
	__asm JMP pfnav_int_list_length_for_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_interleaved_write_frame(void)
{
	__asm JMP pfnav_interleaved_write_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_interleaved_write_uncoded_frame(void)
{
	__asm JMP pfnav_interleaved_write_uncoded_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_jni_get_java_vm(void)
{
	__asm JMP pfnav_jni_get_java_vm;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_jni_set_java_vm(void)
{
	__asm JMP pfnav_jni_set_java_vm;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_lfg_init(void)
{
	__asm JMP pfnav_lfg_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_lockmgr_register(void)
{
	__asm JMP pfnav_lockmgr_register;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log(void)
{
	__asm JMP pfnav_log;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log2(void)
{
	__asm JMP pfnav_log2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log2_16bit(void)
{
	__asm JMP pfnav_log2_16bit;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log2_i(void)
{
	__asm JMP pfnav_log2_i;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log_ask_for_sample(void)
{
	__asm JMP pfnav_log_ask_for_sample;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log_default_callback(void)
{
	__asm JMP pfnav_log_default_callback;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log_format_line(void)
{
	__asm JMP pfnav_log_format_line;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log_format_line2(void)
{
	__asm JMP pfnav_log_format_line2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log_get_flags(void)
{
	__asm JMP pfnav_log_get_flags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log_get_level(void)
{
	__asm JMP pfnav_log_get_level;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log_missing_feature(void)
{
	__asm JMP pfnav_log_missing_feature;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log_set_callback(void)
{
	__asm JMP pfnav_log_set_callback;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log_set_flags(void)
{
	__asm JMP pfnav_log_set_flags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_log_set_level(void)
{
	__asm JMP pfnav_log_set_level;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_lzo1x_decode(void)
{
	__asm JMP pfnav_lzo1x_decode;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_malloc(void)
{
	__asm JMP pfnav_malloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mallocz(void)
{
	__asm JMP pfnav_mallocz;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mastering_display_metadata_alloc(void)
{
	__asm JMP pfnav_mastering_display_metadata_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mastering_display_metadata_create_side_data(void)
{
	__asm JMP pfnav_mastering_display_metadata_create_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_match_ext(void)
{
	__asm JMP pfnav_match_ext;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_match_list(void)
{
	__asm JMP pfnav_match_list;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_match_name(void)
{
	__asm JMP pfnav_match_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_max_alloc(void)
{
	__asm JMP pfnav_max_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_md5_alloc(void)
{
	__asm JMP pfnav_md5_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_md5_final(void)
{
	__asm JMP pfnav_md5_final;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_md5_init(void)
{
	__asm JMP pfnav_md5_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_md5_sum(void)
{
	__asm JMP pfnav_md5_sum;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_md5_update(void)
{
	__asm JMP pfnav_md5_update;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mdct_calc(void)
{
	__asm JMP pfnav_mdct_calc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mdct_end(void)
{
	__asm JMP pfnav_mdct_end;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mdct_init(void)
{
	__asm JMP pfnav_mdct_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mediacodec_alloc_context(void)
{
	__asm JMP pfnav_mediacodec_alloc_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mediacodec_default_free(void)
{
	__asm JMP pfnav_mediacodec_default_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mediacodec_default_init(void)
{
	__asm JMP pfnav_mediacodec_default_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mediacodec_release_buffer(void)
{
	__asm JMP pfnav_mediacodec_release_buffer;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_memcpy_backptr(void)
{
	__asm JMP pfnav_memcpy_backptr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_memdup(void)
{
	__asm JMP pfnav_memdup;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mod_i(void)
{
	__asm JMP pfnav_mod_i;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mul_i(void)
{
	__asm JMP pfnav_mul_i;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_mul_q(void)
{
	__asm JMP pfnav_mul_q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_murmur3_alloc(void)
{
	__asm JMP pfnav_murmur3_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_murmur3_final(void)
{
	__asm JMP pfnav_murmur3_final;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_murmur3_init(void)
{
	__asm JMP pfnav_murmur3_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_murmur3_init_seeded(void)
{
	__asm JMP pfnav_murmur3_init_seeded;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_murmur3_update(void)
{
	__asm JMP pfnav_murmur3_update;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_nearer_q(void)
{
	__asm JMP pfnav_nearer_q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_new_packet(void)
{
	__asm JMP pfnav_new_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_new_program(void)
{
	__asm JMP pfnav_new_program;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_oformat_next(void)
{
	__asm JMP pfnav_oformat_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_child_class_next(void)
{
	__asm JMP pfnav_opt_child_class_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_child_next(void)
{
	__asm JMP pfnav_opt_child_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_copy(void)
{
	__asm JMP pfnav_opt_copy;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_eval_double(void)
{
	__asm JMP pfnav_opt_eval_double;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_eval_flags(void)
{
	__asm JMP pfnav_opt_eval_flags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_eval_float(void)
{
	__asm JMP pfnav_opt_eval_float;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_eval_int(void)
{
	__asm JMP pfnav_opt_eval_int;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_eval_int64(void)
{
	__asm JMP pfnav_opt_eval_int64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_eval_q(void)
{
	__asm JMP pfnav_opt_eval_q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_find(void)
{
	__asm JMP pfnav_opt_find;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_find2(void)
{
	__asm JMP pfnav_opt_find2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_flag_is_set(void)
{
	__asm JMP pfnav_opt_flag_is_set;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_free(void)
{
	__asm JMP pfnav_opt_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_freep_ranges(void)
{
	__asm JMP pfnav_opt_freep_ranges;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get(void)
{
	__asm JMP pfnav_opt_get;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get_channel_layout(void)
{
	__asm JMP pfnav_opt_get_channel_layout;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get_dict_val(void)
{
	__asm JMP pfnav_opt_get_dict_val;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get_double(void)
{
	__asm JMP pfnav_opt_get_double;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get_image_size(void)
{
	__asm JMP pfnav_opt_get_image_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get_int(void)
{
	__asm JMP pfnav_opt_get_int;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get_key_value(void)
{
	__asm JMP pfnav_opt_get_key_value;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get_pixel_fmt(void)
{
	__asm JMP pfnav_opt_get_pixel_fmt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get_q(void)
{
	__asm JMP pfnav_opt_get_q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get_sample_fmt(void)
{
	__asm JMP pfnav_opt_get_sample_fmt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_get_video_rate(void)
{
	__asm JMP pfnav_opt_get_video_rate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_is_set_to_default(void)
{
	__asm JMP pfnav_opt_is_set_to_default;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_is_set_to_default_by_name(void)
{
	__asm JMP pfnav_opt_is_set_to_default_by_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_next(void)
{
	__asm JMP pfnav_opt_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_ptr(void)
{
	__asm JMP pfnav_opt_ptr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_query_ranges(void)
{
	__asm JMP pfnav_opt_query_ranges;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_query_ranges_default(void)
{
	__asm JMP pfnav_opt_query_ranges_default;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_serialize(void)
{
	__asm JMP pfnav_opt_serialize;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set(void)
{
	__asm JMP pfnav_opt_set;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_bin(void)
{
	__asm JMP pfnav_opt_set_bin;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_channel_layout(void)
{
	__asm JMP pfnav_opt_set_channel_layout;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_defaults(void)
{
	__asm JMP pfnav_opt_set_defaults;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_defaults2(void)
{
	__asm JMP pfnav_opt_set_defaults2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_dict(void)
{
	__asm JMP pfnav_opt_set_dict;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_dict2(void)
{
	__asm JMP pfnav_opt_set_dict2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_dict_val(void)
{
	__asm JMP pfnav_opt_set_dict_val;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_double(void)
{
	__asm JMP pfnav_opt_set_double;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_from_string(void)
{
	__asm JMP pfnav_opt_set_from_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_image_size(void)
{
	__asm JMP pfnav_opt_set_image_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_int(void)
{
	__asm JMP pfnav_opt_set_int;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_pixel_fmt(void)
{
	__asm JMP pfnav_opt_set_pixel_fmt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_q(void)
{
	__asm JMP pfnav_opt_set_q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_sample_fmt(void)
{
	__asm JMP pfnav_opt_set_sample_fmt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_set_video_rate(void)
{
	__asm JMP pfnav_opt_set_video_rate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_opt_show2(void)
{
	__asm JMP pfnav_opt_show2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_output_audio_device_next(void)
{
	__asm JMP pfnav_output_audio_device_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_output_video_device_next(void)
{
	__asm JMP pfnav_output_video_device_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_add_side_data(void)
{
	__asm JMP pfnav_packet_add_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_alloc(void)
{
	__asm JMP pfnav_packet_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_clone(void)
{
	__asm JMP pfnav_packet_clone;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_copy_props(void)
{
	__asm JMP pfnav_packet_copy_props;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_free(void)
{
	__asm JMP pfnav_packet_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_free_side_data(void)
{
	__asm JMP pfnav_packet_free_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_from_data(void)
{
	__asm JMP pfnav_packet_from_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_get_side_data(void)
{
	__asm JMP pfnav_packet_get_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_merge_side_data(void)
{
	__asm JMP pfnav_packet_merge_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_move_ref(void)
{
	__asm JMP pfnav_packet_move_ref;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_new_side_data(void)
{
	__asm JMP pfnav_packet_new_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_pack_dictionary(void)
{
	__asm JMP pfnav_packet_pack_dictionary;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_ref(void)
{
	__asm JMP pfnav_packet_ref;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_rescale_ts(void)
{
	__asm JMP pfnav_packet_rescale_ts;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_shrink_side_data(void)
{
	__asm JMP pfnav_packet_shrink_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_side_data_name(void)
{
	__asm JMP pfnav_packet_side_data_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_split_side_data(void)
{
	__asm JMP pfnav_packet_split_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_unpack_dictionary(void)
{
	__asm JMP pfnav_packet_unpack_dictionary;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_packet_unref(void)
{
	__asm JMP pfnav_packet_unref;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parse_color(void)
{
	__asm JMP pfnav_parse_color;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parse_cpu_caps(void)
{
	__asm JMP pfnav_parse_cpu_caps;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parse_cpu_flags(void)
{
	__asm JMP pfnav_parse_cpu_flags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parse_ratio(void)
{
	__asm JMP pfnav_parse_ratio;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parse_time(void)
{
	__asm JMP pfnav_parse_time;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parse_video_rate(void)
{
	__asm JMP pfnav_parse_video_rate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parse_video_size(void)
{
	__asm JMP pfnav_parse_video_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parser_change(void)
{
	__asm JMP pfnav_parser_change;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parser_close(void)
{
	__asm JMP pfnav_parser_close;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parser_init(void)
{
	__asm JMP pfnav_parser_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parser_next(void)
{
	__asm JMP pfnav_parser_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_parser_parse2(void)
{
	__asm JMP pfnav_parser_parse2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_picture_copy(void)
{
	__asm JMP pfnav_picture_copy;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_picture_crop(void)
{
	__asm JMP pfnav_picture_crop;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_picture_pad(void)
{
	__asm JMP pfnav_picture_pad;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_pix_fmt_count_planes(void)
{
	__asm JMP pfnav_pix_fmt_count_planes;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_pix_fmt_desc_get(void)
{
	__asm JMP pfnav_pix_fmt_desc_get;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_pix_fmt_desc_get_id(void)
{
	__asm JMP pfnav_pix_fmt_desc_get_id;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_pix_fmt_desc_next(void)
{
	__asm JMP pfnav_pix_fmt_desc_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_pix_fmt_get_chroma_sub_sample(void)
{
	__asm JMP pfnav_pix_fmt_get_chroma_sub_sample;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_pix_fmt_swap_endianness(void)
{
	__asm JMP pfnav_pix_fmt_swap_endianness;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_pixelutils_get_sad_fn(void)
{
	__asm JMP pfnav_pixelutils_get_sad_fn;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_pkt_dump2(void)
{
	__asm JMP pfnav_pkt_dump2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_pkt_dump_log2(void)
{
	__asm JMP pfnav_pkt_dump_log2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_probe_input_buffer(void)
{
	__asm JMP pfnav_probe_input_buffer;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_probe_input_buffer2(void)
{
	__asm JMP pfnav_probe_input_buffer2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_probe_input_format(void)
{
	__asm JMP pfnav_probe_input_format;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_probe_input_format2(void)
{
	__asm JMP pfnav_probe_input_format2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_probe_input_format3(void)
{
	__asm JMP pfnav_probe_input_format3;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_program_add_stream_index(void)
{
	__asm JMP pfnav_program_add_stream_index;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_q2intfloat(void)
{
	__asm JMP pfnav_q2intfloat;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_qsv_alloc_context(void)
{
	__asm JMP pfnav_qsv_alloc_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_rc4_alloc(void)
{
	__asm JMP pfnav_rc4_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_rc4_crypt(void)
{
	__asm JMP pfnav_rc4_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_rc4_init(void)
{
	__asm JMP pfnav_rc4_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_read_frame(void)
{
	__asm JMP pfnav_read_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_read_image_line(void)
{
	__asm JMP pfnav_read_image_line;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_read_pause(void)
{
	__asm JMP pfnav_read_pause;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_read_play(void)
{
	__asm JMP pfnav_read_play;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_realloc(void)
{
	__asm JMP pfnav_realloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_realloc_array(void)
{
	__asm JMP pfnav_realloc_array;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_realloc_f(void)
{
	__asm JMP pfnav_realloc_f;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_reallocp(void)
{
	__asm JMP pfnav_reallocp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_reallocp_array(void)
{
	__asm JMP pfnav_reallocp_array;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_reduce(void)
{
	__asm JMP pfnav_reduce;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_register_all(void)
{
	__asm JMP pfnav_register_all;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_register_bitstream_filter(void)
{
	__asm JMP pfnav_register_bitstream_filter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_register_codec_parser(void)
{
	__asm JMP pfnav_register_codec_parser;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_register_hwaccel(void)
{
	__asm JMP pfnav_register_hwaccel;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_register_input_format(void)
{
	__asm JMP pfnav_register_input_format;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_register_output_format(void)
{
	__asm JMP pfnav_register_output_format;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_resample(void)
{
	__asm JMP pfnav_resample;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_resample_close(void)
{
	__asm JMP pfnav_resample_close;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_resample_compensate(void)
{
	__asm JMP pfnav_resample_compensate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_resample_init(void)
{
	__asm JMP pfnav_resample_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_rescale(void)
{
	__asm JMP pfnav_rescale;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_rescale_delta(void)
{
	__asm JMP pfnav_rescale_delta;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_rescale_q(void)
{
	__asm JMP pfnav_rescale_q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_rescale_q_rnd(void)
{
	__asm JMP pfnav_rescale_q_rnd;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_rescale_rnd(void)
{
	__asm JMP pfnav_rescale_rnd;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_ripemd_alloc(void)
{
	__asm JMP pfnav_ripemd_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_ripemd_final(void)
{
	__asm JMP pfnav_ripemd_final;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_ripemd_init(void)
{
	__asm JMP pfnav_ripemd_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_ripemd_update(void)
{
	__asm JMP pfnav_ripemd_update;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sample_fmt_is_planar(void)
{
	__asm JMP pfnav_sample_fmt_is_planar;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_samples_alloc(void)
{
	__asm JMP pfnav_samples_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_samples_alloc_array_and_samples(void)
{
	__asm JMP pfnav_samples_alloc_array_and_samples;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_samples_copy(void)
{
	__asm JMP pfnav_samples_copy;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_samples_fill_arrays(void)
{
	__asm JMP pfnav_samples_fill_arrays;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_samples_get_buffer_size(void)
{
	__asm JMP pfnav_samples_get_buffer_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_samples_set_silence(void)
{
	__asm JMP pfnav_samples_set_silence;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sdp_create(void)
{
	__asm JMP pfnav_sdp_create;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_seek_frame(void)
{
	__asm JMP pfnav_seek_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_set_cpu_flags_mask(void)
{
	__asm JMP pfnav_set_cpu_flags_mask;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_set_options_string(void)
{
	__asm JMP pfnav_set_options_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sha512_alloc(void)
{
	__asm JMP pfnav_sha512_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sha512_final(void)
{
	__asm JMP pfnav_sha512_final;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sha512_init(void)
{
	__asm JMP pfnav_sha512_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sha512_update(void)
{
	__asm JMP pfnav_sha512_update;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sha_alloc(void)
{
	__asm JMP pfnav_sha_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sha_final(void)
{
	__asm JMP pfnav_sha_final;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sha_init(void)
{
	__asm JMP pfnav_sha_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sha_update(void)
{
	__asm JMP pfnav_sha_update;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_shr_i(void)
{
	__asm JMP pfnav_shr_i;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_shrink_packet(void)
{
	__asm JMP pfnav_shrink_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_small_strptime(void)
{
	__asm JMP pfnav_small_strptime;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stereo3d_alloc(void)
{
	__asm JMP pfnav_stereo3d_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stereo3d_create_side_data(void)
{
	__asm JMP pfnav_stereo3d_create_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stereo3d_from_name(void)
{
	__asm JMP pfnav_stereo3d_from_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stereo3d_type_name(void)
{
	__asm JMP pfnav_stereo3d_type_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strcasecmp(void)
{
	__asm JMP pfnav_strcasecmp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strdup(void)
{
	__asm JMP pfnav_strdup;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stream_add_side_data(void)
{
	__asm JMP pfnav_stream_add_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stream_get_codec_timebase(void)
{
	__asm JMP pfnav_stream_get_codec_timebase;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stream_get_end_pts(void)
{
	__asm JMP pfnav_stream_get_end_pts;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stream_get_parser(void)
{
	__asm JMP pfnav_stream_get_parser;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stream_get_r_frame_rate(void)
{
	__asm JMP pfnav_stream_get_r_frame_rate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stream_get_recommended_encoder_configuration(void)
{
	__asm JMP pfnav_stream_get_recommended_encoder_configuration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stream_get_side_data(void)
{
	__asm JMP pfnav_stream_get_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stream_new_side_data(void)
{
	__asm JMP pfnav_stream_new_side_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stream_set_r_frame_rate(void)
{
	__asm JMP pfnav_stream_set_r_frame_rate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stream_set_recommended_encoder_configuration(void)
{
	__asm JMP pfnav_stream_set_recommended_encoder_configuration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strerror(void)
{
	__asm JMP pfnav_strerror;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stristart(void)
{
	__asm JMP pfnav_stristart;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_stristr(void)
{
	__asm JMP pfnav_stristr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strlcat(void)
{
	__asm JMP pfnav_strlcat;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strlcatf(void)
{
	__asm JMP pfnav_strlcatf;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strlcpy(void)
{
	__asm JMP pfnav_strlcpy;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strncasecmp(void)
{
	__asm JMP pfnav_strncasecmp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strndup(void)
{
	__asm JMP pfnav_strndup;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strnstr(void)
{
	__asm JMP pfnav_strnstr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strstart(void)
{
	__asm JMP pfnav_strstart;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strtod(void)
{
	__asm JMP pfnav_strtod;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_strtok(void)
{
	__asm JMP pfnav_strtok;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sub_i(void)
{
	__asm JMP pfnav_sub_i;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_sub_q(void)
{
	__asm JMP pfnav_sub_q;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_tea_alloc(void)
{
	__asm JMP pfnav_tea_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_tea_crypt(void)
{
	__asm JMP pfnav_tea_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_tea_init(void)
{
	__asm JMP pfnav_tea_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_tempfile(void)
{
	__asm JMP pfnav_tempfile;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_thread_message_flush(void)
{
	__asm JMP pfnav_thread_message_flush;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_thread_message_queue_alloc(void)
{
	__asm JMP pfnav_thread_message_queue_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_thread_message_queue_free(void)
{
	__asm JMP pfnav_thread_message_queue_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_thread_message_queue_recv(void)
{
	__asm JMP pfnav_thread_message_queue_recv;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_thread_message_queue_send(void)
{
	__asm JMP pfnav_thread_message_queue_send;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_thread_message_queue_set_err_recv(void)
{
	__asm JMP pfnav_thread_message_queue_set_err_recv;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_thread_message_queue_set_err_send(void)
{
	__asm JMP pfnav_thread_message_queue_set_err_send;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_thread_message_queue_set_free_func(void)
{
	__asm JMP pfnav_thread_message_queue_set_free_func;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_timecode_adjust_ntsc_framenum2(void)
{
	__asm JMP pfnav_timecode_adjust_ntsc_framenum2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_timecode_check_frame_rate(void)
{
	__asm JMP pfnav_timecode_check_frame_rate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_timecode_get_smpte_from_framenum(void)
{
	__asm JMP pfnav_timecode_get_smpte_from_framenum;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_timecode_init(void)
{
	__asm JMP pfnav_timecode_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_timecode_init_from_string(void)
{
	__asm JMP pfnav_timecode_init_from_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_timecode_make_mpeg_tc_string(void)
{
	__asm JMP pfnav_timecode_make_mpeg_tc_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_timecode_make_smpte_tc_string(void)
{
	__asm JMP pfnav_timecode_make_smpte_tc_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_timecode_make_string(void)
{
	__asm JMP pfnav_timecode_make_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_timegm(void)
{
	__asm JMP pfnav_timegm;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_tree_destroy(void)
{
	__asm JMP pfnav_tree_destroy;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_tree_enumerate(void)
{
	__asm JMP pfnav_tree_enumerate;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_tree_find(void)
{
	__asm JMP pfnav_tree_find;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_tree_insert(void)
{
	__asm JMP pfnav_tree_insert;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_tree_node_alloc(void)
{
	__asm JMP pfnav_tree_node_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_twofish_alloc(void)
{
	__asm JMP pfnav_twofish_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_twofish_crypt(void)
{
	__asm JMP pfnav_twofish_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_twofish_init(void)
{
	__asm JMP pfnav_twofish_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_url_split(void)
{
	__asm JMP pfnav_url_split;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_usleep(void)
{
	__asm JMP pfnav_usleep;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_utf8_decode(void)
{
	__asm JMP pfnav_utf8_decode;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_vbprintf(void)
{
	__asm JMP pfnav_vbprintf;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_version_info(void)
{
	__asm JMP pfnav_version_info;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_vlog(void)
{
	__asm JMP pfnav_vlog;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_write_frame(void)
{
	__asm JMP pfnav_write_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_write_image_line(void)
{
	__asm JMP pfnav_write_image_line;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_write_trailer(void)
{
	__asm JMP pfnav_write_trailer;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_write_uncoded_frame(void)
{
	__asm JMP pfnav_write_uncoded_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_write_uncoded_frame_query(void)
{
	__asm JMP pfnav_write_uncoded_frame_query;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_xiphlacing(void)
{
	__asm JMP pfnav_xiphlacing;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_xtea_alloc(void)
{
	__asm JMP pfnav_xtea_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_xtea_crypt(void)
{
	__asm JMP pfnav_xtea_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_xtea_init(void)
{
	__asm JMP pfnav_xtea_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_xtea_le_crypt(void)
{
	__asm JMP pfnav_xtea_le_crypt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_av_xtea_le_init(void)
{
	__asm JMP pfnav_xtea_le_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_align_dimensions(void)
{
	__asm JMP pfnavcodec_align_dimensions;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_align_dimensions2(void)
{
	__asm JMP pfnavcodec_align_dimensions2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_alloc_context3(void)
{
	__asm JMP pfnavcodec_alloc_context3;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_chroma_pos_to_enum(void)
{
	__asm JMP pfnavcodec_chroma_pos_to_enum;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_close(void)
{
	__asm JMP pfnavcodec_close;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_configuration(void)
{
	__asm JMP pfnavcodec_configuration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_copy_context(void)
{
	__asm JMP pfnavcodec_copy_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_dct_alloc(void)
{
	__asm JMP pfnavcodec_dct_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_dct_get_class(void)
{
	__asm JMP pfnavcodec_dct_get_class;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_dct_init(void)
{
	__asm JMP pfnavcodec_dct_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_decode_audio4(void)
{
	__asm JMP pfnavcodec_decode_audio4;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_decode_subtitle2(void)
{
	__asm JMP pfnavcodec_decode_subtitle2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_decode_video2(void)
{
	__asm JMP pfnavcodec_decode_video2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_default_execute(void)
{
	__asm JMP pfnavcodec_default_execute;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_default_execute2(void)
{
	__asm JMP pfnavcodec_default_execute2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_default_get_buffer2(void)
{
	__asm JMP pfnavcodec_default_get_buffer2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_default_get_format(void)
{
	__asm JMP pfnavcodec_default_get_format;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_descriptor_get(void)
{
	__asm JMP pfnavcodec_descriptor_get;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_descriptor_get_by_name(void)
{
	__asm JMP pfnavcodec_descriptor_get_by_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_descriptor_next(void)
{
	__asm JMP pfnavcodec_descriptor_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_encode_audio2(void)
{
	__asm JMP pfnavcodec_encode_audio2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_encode_subtitle(void)
{
	__asm JMP pfnavcodec_encode_subtitle;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_encode_video2(void)
{
	__asm JMP pfnavcodec_encode_video2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_enum_to_chroma_pos(void)
{
	__asm JMP pfnavcodec_enum_to_chroma_pos;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_fill_audio_frame(void)
{
	__asm JMP pfnavcodec_fill_audio_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_find_best_pix_fmt2(void)
{
	__asm JMP pfnavcodec_find_best_pix_fmt2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_find_best_pix_fmt_of_2(void)
{
	__asm JMP pfnavcodec_find_best_pix_fmt_of_2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_find_best_pix_fmt_of_list(void)
{
	__asm JMP pfnavcodec_find_best_pix_fmt_of_list;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_find_decoder(void)
{
	__asm JMP pfnavcodec_find_decoder;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_find_decoder_by_name(void)
{
	__asm JMP pfnavcodec_find_decoder_by_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_find_encoder(void)
{
	__asm JMP pfnavcodec_find_encoder;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_find_encoder_by_name(void)
{
	__asm JMP pfnavcodec_find_encoder_by_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_flush_buffers(void)
{
	__asm JMP pfnavcodec_flush_buffers;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_free_context(void)
{
	__asm JMP pfnavcodec_free_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_get_chroma_sub_sample(void)
{
	__asm JMP pfnavcodec_get_chroma_sub_sample;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_get_class(void)
{
	__asm JMP pfnavcodec_get_class;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_get_context_defaults3(void)
{
	__asm JMP pfnavcodec_get_context_defaults3;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_get_edge_width(void)
{
	__asm JMP pfnavcodec_get_edge_width;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_get_frame_class(void)
{
	__asm JMP pfnavcodec_get_frame_class;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_get_name(void)
{
	__asm JMP pfnavcodec_get_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_get_pix_fmt_loss(void)
{
	__asm JMP pfnavcodec_get_pix_fmt_loss;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_get_subtitle_rect_class(void)
{
	__asm JMP pfnavcodec_get_subtitle_rect_class;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_get_type(void)
{
	__asm JMP pfnavcodec_get_type;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_is_open(void)
{
	__asm JMP pfnavcodec_is_open;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_license(void)
{
	__asm JMP pfnavcodec_license;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_open2(void)
{
	__asm JMP pfnavcodec_open2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_parameters_alloc(void)
{
	__asm JMP pfnavcodec_parameters_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_parameters_copy(void)
{
	__asm JMP pfnavcodec_parameters_copy;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_parameters_free(void)
{
	__asm JMP pfnavcodec_parameters_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_parameters_from_context(void)
{
	__asm JMP pfnavcodec_parameters_from_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_parameters_to_context(void)
{
	__asm JMP pfnavcodec_parameters_to_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_pix_fmt_to_codec_tag(void)
{
	__asm JMP pfnavcodec_pix_fmt_to_codec_tag;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_profile_name(void)
{
	__asm JMP pfnavcodec_profile_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_receive_frame(void)
{
	__asm JMP pfnavcodec_receive_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_receive_packet(void)
{
	__asm JMP pfnavcodec_receive_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_register(void)
{
	__asm JMP pfnavcodec_register;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_register_all(void)
{
	__asm JMP pfnavcodec_register_all;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_send_frame(void)
{
	__asm JMP pfnavcodec_send_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_send_packet(void)
{
	__asm JMP pfnavcodec_send_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_set_dimensions(void)
{
	__asm JMP pfnavcodec_set_dimensions;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_string(void)
{
	__asm JMP pfnavcodec_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avcodec_version(void)
{
	__asm JMP pfnavcodec_version;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_app_to_dev_control_message(void)
{
	__asm JMP pfnavdevice_app_to_dev_control_message;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_capabilities_create(void)
{
	__asm JMP pfnavdevice_capabilities_create;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_capabilities_free(void)
{
	__asm JMP pfnavdevice_capabilities_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_configuration(void)
{
	__asm JMP pfnavdevice_configuration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_dev_to_app_control_message(void)
{
	__asm JMP pfnavdevice_dev_to_app_control_message;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_free_list_devices(void)
{
	__asm JMP pfnavdevice_free_list_devices;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_license(void)
{
	__asm JMP pfnavdevice_license;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_list_devices(void)
{
	__asm JMP pfnavdevice_list_devices;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_list_input_sources(void)
{
	__asm JMP pfnavdevice_list_input_sources;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_list_output_sinks(void)
{
	__asm JMP pfnavdevice_list_output_sinks;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_register_all(void)
{
	__asm JMP pfnavdevice_register_all;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avdevice_version(void)
{
	__asm JMP pfnavdevice_version;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_add_matrix(void)
{
	__asm JMP pfnavfilter_add_matrix;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_config_links(void)
{
	__asm JMP pfnavfilter_config_links;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_configuration(void)
{
	__asm JMP pfnavfilter_configuration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_free(void)
{
	__asm JMP pfnavfilter_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_get_by_name(void)
{
	__asm JMP pfnavfilter_get_by_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_get_class(void)
{
	__asm JMP pfnavfilter_get_class;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_get_matrix(void)
{
	__asm JMP pfnavfilter_get_matrix;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_add_filter(void)
{
	__asm JMP pfnavfilter_graph_add_filter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_alloc(void)
{
	__asm JMP pfnavfilter_graph_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_alloc_filter(void)
{
	__asm JMP pfnavfilter_graph_alloc_filter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_config(void)
{
	__asm JMP pfnavfilter_graph_config;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_create_filter(void)
{
	__asm JMP pfnavfilter_graph_create_filter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_dump(void)
{
	__asm JMP pfnavfilter_graph_dump;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_free(void)
{
	__asm JMP pfnavfilter_graph_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_get_filter(void)
{
	__asm JMP pfnavfilter_graph_get_filter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_parse(void)
{
	__asm JMP pfnavfilter_graph_parse;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_parse2(void)
{
	__asm JMP pfnavfilter_graph_parse2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_parse_ptr(void)
{
	__asm JMP pfnavfilter_graph_parse_ptr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_queue_command(void)
{
	__asm JMP pfnavfilter_graph_queue_command;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_request_oldest(void)
{
	__asm JMP pfnavfilter_graph_request_oldest;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_send_command(void)
{
	__asm JMP pfnavfilter_graph_send_command;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_graph_set_auto_convert(void)
{
	__asm JMP pfnavfilter_graph_set_auto_convert;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_init_dict(void)
{
	__asm JMP pfnavfilter_init_dict;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_init_filter(void)
{
	__asm JMP pfnavfilter_init_filter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_init_str(void)
{
	__asm JMP pfnavfilter_init_str;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_inout_alloc(void)
{
	__asm JMP pfnavfilter_inout_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_inout_free(void)
{
	__asm JMP pfnavfilter_inout_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_insert_filter(void)
{
	__asm JMP pfnavfilter_insert_filter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_license(void)
{
	__asm JMP pfnavfilter_license;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_link(void)
{
	__asm JMP pfnavfilter_link;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_link_free(void)
{
	__asm JMP pfnavfilter_link_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_link_get_channels(void)
{
	__asm JMP pfnavfilter_link_get_channels;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_link_set_closed(void)
{
	__asm JMP pfnavfilter_link_set_closed;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_make_format64_list(void)
{
	__asm JMP pfnavfilter_make_format64_list;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_mul_matrix(void)
{
	__asm JMP pfnavfilter_mul_matrix;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_next(void)
{
	__asm JMP pfnavfilter_next;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_open(void)
{
	__asm JMP pfnavfilter_open;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_pad_count(void)
{
	__asm JMP pfnavfilter_pad_count;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_pad_get_name(void)
{
	__asm JMP pfnavfilter_pad_get_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_pad_get_type(void)
{
	__asm JMP pfnavfilter_pad_get_type;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_process_command(void)
{
	__asm JMP pfnavfilter_process_command;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_register(void)
{
	__asm JMP pfnavfilter_register;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_register_all(void)
{
	__asm JMP pfnavfilter_register_all;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_sub_matrix(void)
{
	__asm JMP pfnavfilter_sub_matrix;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_transform(void)
{
	__asm JMP pfnavfilter_transform;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_uninit(void)
{
	__asm JMP pfnavfilter_uninit;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avfilter_version(void)
{
	__asm JMP pfnavfilter_version;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_alloc_context(void)
{
	__asm JMP pfnavformat_alloc_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_alloc_output_context2(void)
{
	__asm JMP pfnavformat_alloc_output_context2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_close_input(void)
{
	__asm JMP pfnavformat_close_input;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_configuration(void)
{
	__asm JMP pfnavformat_configuration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_find_stream_info(void)
{
	__asm JMP pfnavformat_find_stream_info;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_flush(void)
{
	__asm JMP pfnavformat_flush;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_free_context(void)
{
	__asm JMP pfnavformat_free_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_get_class(void)
{
	__asm JMP pfnavformat_get_class;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_get_mov_audio_tags(void)
{
	__asm JMP pfnavformat_get_mov_audio_tags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_get_mov_video_tags(void)
{
	__asm JMP pfnavformat_get_mov_video_tags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_get_riff_audio_tags(void)
{
	__asm JMP pfnavformat_get_riff_audio_tags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_get_riff_video_tags(void)
{
	__asm JMP pfnavformat_get_riff_video_tags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_init_output(void)
{
	__asm JMP pfnavformat_init_output;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_license(void)
{
	__asm JMP pfnavformat_license;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_match_stream_specifier(void)
{
	__asm JMP pfnavformat_match_stream_specifier;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_network_deinit(void)
{
	__asm JMP pfnavformat_network_deinit;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_network_init(void)
{
	__asm JMP pfnavformat_network_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_new_stream(void)
{
	__asm JMP pfnavformat_new_stream;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_open_input(void)
{
	__asm JMP pfnavformat_open_input;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_query_codec(void)
{
	__asm JMP pfnavformat_query_codec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_queue_attached_pictures(void)
{
	__asm JMP pfnavformat_queue_attached_pictures;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_seek_file(void)
{
	__asm JMP pfnavformat_seek_file;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_transfer_internal_stream_timing_info(void)
{
	__asm JMP pfnavformat_transfer_internal_stream_timing_info;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_version(void)
{
	__asm JMP pfnavformat_version;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avformat_write_header(void)
{
	__asm JMP pfnavformat_write_header;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_accept(void)
{
	__asm JMP pfnavio_accept;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_alloc_context(void)
{
	__asm JMP pfnavio_alloc_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_check(void)
{
	__asm JMP pfnavio_check;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_close(void)
{
	__asm JMP pfnavio_close;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_close_dir(void)
{
	__asm JMP pfnavio_close_dir;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_close_dyn_buf(void)
{
	__asm JMP pfnavio_close_dyn_buf;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_closep(void)
{
	__asm JMP pfnavio_closep;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_enum_protocols(void)
{
	__asm JMP pfnavio_enum_protocols;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_feof(void)
{
	__asm JMP pfnavio_feof;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_find_protocol_name(void)
{
	__asm JMP pfnavio_find_protocol_name;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_flush(void)
{
	__asm JMP pfnavio_flush;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_free_directory_entry(void)
{
	__asm JMP pfnavio_free_directory_entry;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_get_str(void)
{
	__asm JMP pfnavio_get_str;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_get_str16be(void)
{
	__asm JMP pfnavio_get_str16be;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_get_str16le(void)
{
	__asm JMP pfnavio_get_str16le;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_handshake(void)
{
	__asm JMP pfnavio_handshake;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_open(void)
{
	__asm JMP pfnavio_open;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_open2(void)
{
	__asm JMP pfnavio_open2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_open_dir(void)
{
	__asm JMP pfnavio_open_dir;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_open_dyn_buf(void)
{
	__asm JMP pfnavio_open_dyn_buf;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_pause(void)
{
	__asm JMP pfnavio_pause;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_printf(void)
{
	__asm JMP pfnavio_printf;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_put_str(void)
{
	__asm JMP pfnavio_put_str;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_put_str16be(void)
{
	__asm JMP pfnavio_put_str16be;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_put_str16le(void)
{
	__asm JMP pfnavio_put_str16le;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_r8(void)
{
	__asm JMP pfnavio_r8;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_rb16(void)
{
	__asm JMP pfnavio_rb16;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_rb24(void)
{
	__asm JMP pfnavio_rb24;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_rb32(void)
{
	__asm JMP pfnavio_rb32;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_rb64(void)
{
	__asm JMP pfnavio_rb64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_read(void)
{
	__asm JMP pfnavio_read;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_read_dir(void)
{
	__asm JMP pfnavio_read_dir;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_read_to_bprint(void)
{
	__asm JMP pfnavio_read_to_bprint;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_rl16(void)
{
	__asm JMP pfnavio_rl16;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_rl24(void)
{
	__asm JMP pfnavio_rl24;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_rl32(void)
{
	__asm JMP pfnavio_rl32;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_rl64(void)
{
	__asm JMP pfnavio_rl64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_seek(void)
{
	__asm JMP pfnavio_seek;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_seek_time(void)
{
	__asm JMP pfnavio_seek_time;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_size(void)
{
	__asm JMP pfnavio_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_skip(void)
{
	__asm JMP pfnavio_skip;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_w8(void)
{
	__asm JMP pfnavio_w8;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_wb16(void)
{
	__asm JMP pfnavio_wb16;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_wb24(void)
{
	__asm JMP pfnavio_wb24;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_wb32(void)
{
	__asm JMP pfnavio_wb32;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_wb64(void)
{
	__asm JMP pfnavio_wb64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_wl16(void)
{
	__asm JMP pfnavio_wl16;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_wl24(void)
{
	__asm JMP pfnavio_wl24;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_wl32(void)
{
	__asm JMP pfnavio_wl32;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_wl64(void)
{
	__asm JMP pfnavio_wl64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_write(void)
{
	__asm JMP pfnavio_write;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avio_write_marker(void)
{
	__asm JMP pfnavio_write_marker;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpicture_alloc(void)
{
	__asm JMP pfnavpicture_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpicture_fill(void)
{
	__asm JMP pfnavpicture_fill;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpicture_free(void)
{
	__asm JMP pfnavpicture_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpicture_get_size(void)
{
	__asm JMP pfnavpicture_get_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpicture_layout(void)
{
	__asm JMP pfnavpicture_layout;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_aac_parse_header(void)
{
	__asm JMP pfnavpriv_aac_parse_header;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_align_put_bits(void)
{
	__asm JMP pfnavpriv_align_put_bits;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_alloc_fixed_dsp(void)
{
	__asm JMP pfnavpriv_alloc_fixed_dsp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_bprint_to_extradata(void)
{
	__asm JMP pfnavpriv_bprint_to_extradata;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_codec_get_cap_skip_frame_fill_param(void)
{
	__asm JMP pfnavpriv_codec_get_cap_skip_frame_fill_param;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_copy_bits(void)
{
	__asm JMP pfnavpriv_copy_bits;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_copy_pce_data(void)
{
	__asm JMP pfnavpriv_copy_pce_data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_dict_set_timestamp(void)
{
	__asm JMP pfnavpriv_dict_set_timestamp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_emms_yasm(void)
{
	__asm JMP pfnavpriv_emms_yasm;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_find_pix_fmt(void)
{
	__asm JMP pfnavpriv_find_pix_fmt;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_find_start_code(void)
{
	__asm JMP pfnavpriv_find_start_code;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_float_dsp_alloc(void)
{
	__asm JMP pfnavpriv_float_dsp_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_frame_get_metadatap(void)
{
	__asm JMP pfnavpriv_frame_get_metadatap;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_get_gamma_from_trc(void)
{
	__asm JMP pfnavpriv_get_gamma_from_trc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_get_raw_pix_fmt_tags(void)
{
	__asm JMP pfnavpriv_get_raw_pix_fmt_tags;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_get_trc_function_from_trc(void)
{
	__asm JMP pfnavpriv_get_trc_function_from_trc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_h264_has_num_reorder_frames(void)
{
	__asm JMP pfnavpriv_h264_has_num_reorder_frames;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_init_lls(void)
{
	__asm JMP pfnavpriv_init_lls;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_io_delete(void)
{
	__asm JMP pfnavpriv_io_delete;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_io_move(void)
{
	__asm JMP pfnavpriv_io_move;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_lock_avformat(void)
{
	__asm JMP pfnavpriv_lock_avformat;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_mpa_decode_header(void)
{
	__asm JMP pfnavpriv_mpa_decode_header;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_mpa_decode_header2(void)
{
	__asm JMP pfnavpriv_mpa_decode_header2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_mpeg4audio_get_config(void)
{
	__asm JMP pfnavpriv_mpeg4audio_get_config;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_mpegaudio_decode_header(void)
{
	__asm JMP pfnavpriv_mpegaudio_decode_header;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_mpegts_parse_close(void)
{
	__asm JMP pfnavpriv_mpegts_parse_close;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_mpegts_parse_open(void)
{
	__asm JMP pfnavpriv_mpegts_parse_open;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_mpegts_parse_packet(void)
{
	__asm JMP pfnavpriv_mpegts_parse_packet;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_new_chapter(void)
{
	__asm JMP pfnavpriv_new_chapter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_put_string(void)
{
	__asm JMP pfnavpriv_put_string;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_report_missing_feature(void)
{
	__asm JMP pfnavpriv_report_missing_feature;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_request_sample(void)
{
	__asm JMP pfnavpriv_request_sample;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_scalarproduct_float_c(void)
{
	__asm JMP pfnavpriv_scalarproduct_float_c;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_set_pts_info(void)
{
	__asm JMP pfnavpriv_set_pts_info;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_set_systematic_pal2(void)
{
	__asm JMP pfnavpriv_set_systematic_pal2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_snprintf(void)
{
	__asm JMP pfnavpriv_snprintf;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_solve_lls(void)
{
	__asm JMP pfnavpriv_solve_lls;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_split_xiph_headers(void)
{
	__asm JMP pfnavpriv_split_xiph_headers;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_strtod(void)
{
	__asm JMP pfnavpriv_strtod;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_toupper4(void)
{
	__asm JMP pfnavpriv_toupper4;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_unlock_avformat(void)
{
	__asm JMP pfnavpriv_unlock_avformat;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avpriv_vsnprintf(void)
{
	__asm JMP pfnavpriv_vsnprintf;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avsubtitle_free(void)
{
	__asm JMP pfnavsubtitle_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avutil_configuration(void)
{
	__asm JMP pfnavutil_configuration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avutil_license(void)
{
	__asm JMP pfnavutil_license;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_avutil_version(void)
{
	__asm JMP pfnavutil_version;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ffio_open_dyn_packet_buf(void)
{
	__asm JMP pfnffio_open_dyn_packet_buf;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ffio_set_buf_size(void)
{
	__asm JMP pfnffio_set_buf_size;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ffurl_close(void)
{
	__asm JMP pfnffurl_close;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ffurl_open(void)
{
	__asm JMP pfnffurl_open;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ffurl_write(void)
{
	__asm JMP pfnffurl_write;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_alloc(void)
{
	__asm JMP pfnswr_alloc;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_alloc_set_opts(void)
{
	__asm JMP pfnswr_alloc_set_opts;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_build_matrix(void)
{
	__asm JMP pfnswr_build_matrix;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_close(void)
{
	__asm JMP pfnswr_close;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_config_frame(void)
{
	__asm JMP pfnswr_config_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_convert(void)
{
	__asm JMP pfnswr_convert;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_convert_frame(void)
{
	__asm JMP pfnswr_convert_frame;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_drop_output(void)
{
	__asm JMP pfnswr_drop_output;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_free(void)
{
	__asm JMP pfnswr_free;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_get_class(void)
{
	__asm JMP pfnswr_get_class;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_get_delay(void)
{
	__asm JMP pfnswr_get_delay;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_get_out_samples(void)
{
	__asm JMP pfnswr_get_out_samples;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_init(void)
{
	__asm JMP pfnswr_init;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_inject_silence(void)
{
	__asm JMP pfnswr_inject_silence;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_is_initialized(void)
{
	__asm JMP pfnswr_is_initialized;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_next_pts(void)
{
	__asm JMP pfnswr_next_pts;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_set_channel_mapping(void)
{
	__asm JMP pfnswr_set_channel_mapping;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_set_compensation(void)
{
	__asm JMP pfnswr_set_compensation;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swr_set_matrix(void)
{
	__asm JMP pfnswr_set_matrix;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swresample_configuration(void)
{
	__asm JMP pfnswresample_configuration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swresample_license(void)
{
	__asm JMP pfnswresample_license;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swresample_version(void)
{
	__asm JMP pfnswresample_version;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_addVec(void)
{
	__asm JMP pfnsws_addVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_allocVec(void)
{
	__asm JMP pfnsws_allocVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_alloc_context(void)
{
	__asm JMP pfnsws_alloc_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_alloc_set_opts(void)
{
	__asm JMP pfnsws_alloc_set_opts;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_cloneVec(void)
{
	__asm JMP pfnsws_cloneVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_convVec(void)
{
	__asm JMP pfnsws_convVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_convertPalette8ToPacked24(void)
{
	__asm JMP pfnsws_convertPalette8ToPacked24;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_convertPalette8ToPacked32(void)
{
	__asm JMP pfnsws_convertPalette8ToPacked32;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_freeContext(void)
{
	__asm JMP pfnsws_freeContext;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_freeFilter(void)
{
	__asm JMP pfnsws_freeFilter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_freeVec(void)
{
	__asm JMP pfnsws_freeVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_getCachedContext(void)
{
	__asm JMP pfnsws_getCachedContext;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_getCoefficients(void)
{
	__asm JMP pfnsws_getCoefficients;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_getColorspaceDetails(void)
{
	__asm JMP pfnsws_getColorspaceDetails;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_getConstVec(void)
{
	__asm JMP pfnsws_getConstVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_getContext(void)
{
	__asm JMP pfnsws_getContext;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_getDefaultFilter(void)
{
	__asm JMP pfnsws_getDefaultFilter;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_getGaussianVec(void)
{
	__asm JMP pfnsws_getGaussianVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_getIdentityVec(void)
{
	__asm JMP pfnsws_getIdentityVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_get_class(void)
{
	__asm JMP pfnsws_get_class;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_init_context(void)
{
	__asm JMP pfnsws_init_context;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_isSupportedEndiannessConversion(void)
{
	__asm JMP pfnsws_isSupportedEndiannessConversion;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_isSupportedInput(void)
{
	__asm JMP pfnsws_isSupportedInput;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_isSupportedOutput(void)
{
	__asm JMP pfnsws_isSupportedOutput;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_normalizeVec(void)
{
	__asm JMP pfnsws_normalizeVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_printVec2(void)
{
	__asm JMP pfnsws_printVec2;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_scale(void)
{
	__asm JMP pfnsws_scale;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_scaleVec(void)
{
	__asm JMP pfnsws_scaleVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_setColorspaceDetails(void)
{
	__asm JMP pfnsws_setColorspaceDetails;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_shiftVec(void)
{
	__asm JMP pfnsws_shiftVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sws_subVec(void)
{
	__asm JMP pfnsws_subVec;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swscale_configuration(void)
{
	__asm JMP pfnswscale_configuration;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swscale_license(void)
{
	__asm JMP pfnswscale_license;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_swscale_version(void)
{
	__asm JMP pfnswscale_version;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_url_feof(void)
{
	__asm JMP pfnurl_feof;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma comment(linker, "/EXPORT:av_device_capabilities=libFFmpegOrg.av_device_capabilities,@158")
#pragma comment(linker, "/EXPORT:av_device_ffversion=libFFmpegOrg.av_device_ffversion,@159")
#pragma comment(linker, "/EXPORT:av_filter_ffversion=libFFmpegOrg.av_filter_ffversion,@215")
#pragma comment(linker, "/EXPORT:avfilter_all_channel_layouts=libFFmpegOrg.avfilter_all_channel_layouts,@752")
