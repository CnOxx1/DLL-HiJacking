


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 头文件
#include <Windows.h>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
#pragma comment(linker, "/EXPORT:SymGetOmapBlockBase=_AheadLib_SymGetOmapBlockBase,@1")
#pragma comment(linker, "/EXPORT:DbgHelpCreateUserDump=_AheadLib_DbgHelpCreateUserDump,@2")
#pragma comment(linker, "/EXPORT:DbgHelpCreateUserDumpW=_AheadLib_DbgHelpCreateUserDumpW,@3")
#pragma comment(linker, "/EXPORT:EnumDirTree=_AheadLib_EnumDirTree,@4")
#pragma comment(linker, "/EXPORT:EnumDirTreeW=_AheadLib_EnumDirTreeW,@5")
#pragma comment(linker, "/EXPORT:EnumerateLoadedModules64=_AheadLib_EnumerateLoadedModules64,@6")
#pragma comment(linker, "/EXPORT:EnumerateLoadedModules=_AheadLib_EnumerateLoadedModules,@7")
#pragma comment(linker, "/EXPORT:EnumerateLoadedModulesEx=_AheadLib_EnumerateLoadedModulesEx,@8")
#pragma comment(linker, "/EXPORT:EnumerateLoadedModulesExW=_AheadLib_EnumerateLoadedModulesExW,@9")
#pragma comment(linker, "/EXPORT:EnumerateLoadedModulesW64=_AheadLib_EnumerateLoadedModulesW64,@10")
#pragma comment(linker, "/EXPORT:ExtensionApiVersion=_AheadLib_ExtensionApiVersion,@11")
#pragma comment(linker, "/EXPORT:FindDebugInfoFile=_AheadLib_FindDebugInfoFile,@12")
#pragma comment(linker, "/EXPORT:FindDebugInfoFileEx=_AheadLib_FindDebugInfoFileEx,@13")
#pragma comment(linker, "/EXPORT:FindDebugInfoFileExW=_AheadLib_FindDebugInfoFileExW,@14")
#pragma comment(linker, "/EXPORT:FindExecutableImage=_AheadLib_FindExecutableImage,@15")
#pragma comment(linker, "/EXPORT:FindExecutableImageEx=_AheadLib_FindExecutableImageEx,@16")
#pragma comment(linker, "/EXPORT:FindExecutableImageExW=_AheadLib_FindExecutableImageExW,@17")
#pragma comment(linker, "/EXPORT:FindFileInPath=_AheadLib_FindFileInPath,@18")
#pragma comment(linker, "/EXPORT:FindFileInSearchPath=_AheadLib_FindFileInSearchPath,@19")
#pragma comment(linker, "/EXPORT:GetTimestampForLoadedLibrary=_AheadLib_GetTimestampForLoadedLibrary,@20")
#pragma comment(linker, "/EXPORT:ImageDirectoryEntryToData=_AheadLib_ImageDirectoryEntryToData,@21")
#pragma comment(linker, "/EXPORT:ImageDirectoryEntryToDataEx=_AheadLib_ImageDirectoryEntryToDataEx,@22")
#pragma comment(linker, "/EXPORT:ImageNtHeader=_AheadLib_ImageNtHeader,@23")
#pragma comment(linker, "/EXPORT:ImageRvaToSection=_AheadLib_ImageRvaToSection,@24")
#pragma comment(linker, "/EXPORT:ImageRvaToVa=_AheadLib_ImageRvaToVa,@25")
#pragma comment(linker, "/EXPORT:ImagehlpApiVersion=_AheadLib_ImagehlpApiVersion,@26")
#pragma comment(linker, "/EXPORT:ImagehlpApiVersionEx=_AheadLib_ImagehlpApiVersionEx,@27")
#pragma comment(linker, "/EXPORT:MakeSureDirectoryPathExists=_AheadLib_MakeSureDirectoryPathExists,@28")
#pragma comment(linker, "/EXPORT:MapDebugInformation=_AheadLib_MapDebugInformation,@29")
#pragma comment(linker, "/EXPORT:MiniDumpReadDumpStream=_AheadLib_MiniDumpReadDumpStream,@30")
#pragma comment(linker, "/EXPORT:MiniDumpWriteDump=_AheadLib_MiniDumpWriteDump,@31")
#pragma comment(linker, "/EXPORT:SearchTreeForFile=_AheadLib_SearchTreeForFile,@32")
#pragma comment(linker, "/EXPORT:SearchTreeForFileW=_AheadLib_SearchTreeForFileW,@33")
#pragma comment(linker, "/EXPORT:StackWalk64=_AheadLib_StackWalk64,@34")
#pragma comment(linker, "/EXPORT:StackWalk=_AheadLib_StackWalk,@35")
#pragma comment(linker, "/EXPORT:SymAddSourceStream=_AheadLib_SymAddSourceStream,@36")
#pragma comment(linker, "/EXPORT:SymAddSourceStreamA=_AheadLib_SymAddSourceStreamA,@37")
#pragma comment(linker, "/EXPORT:SymAddSourceStreamW=_AheadLib_SymAddSourceStreamW,@38")
#pragma comment(linker, "/EXPORT:SymAddSymbol=_AheadLib_SymAddSymbol,@39")
#pragma comment(linker, "/EXPORT:SymAddSymbolW=_AheadLib_SymAddSymbolW,@40")
#pragma comment(linker, "/EXPORT:SymCleanup=_AheadLib_SymCleanup,@41")
#pragma comment(linker, "/EXPORT:SymDeleteSymbol=_AheadLib_SymDeleteSymbol,@42")
#pragma comment(linker, "/EXPORT:SymDeleteSymbolW=_AheadLib_SymDeleteSymbolW,@43")
#pragma comment(linker, "/EXPORT:SymEnumLines=_AheadLib_SymEnumLines,@44")
#pragma comment(linker, "/EXPORT:SymEnumLinesW=_AheadLib_SymEnumLinesW,@45")
#pragma comment(linker, "/EXPORT:SymEnumProcesses=_AheadLib_SymEnumProcesses,@46")
#pragma comment(linker, "/EXPORT:SymEnumSourceFileTokens=_AheadLib_SymEnumSourceFileTokens,@47")
#pragma comment(linker, "/EXPORT:SymEnumSourceFiles=_AheadLib_SymEnumSourceFiles,@48")
#pragma comment(linker, "/EXPORT:SymEnumSourceFilesW=_AheadLib_SymEnumSourceFilesW,@49")
#pragma comment(linker, "/EXPORT:SymEnumSourceLines=_AheadLib_SymEnumSourceLines,@50")
#pragma comment(linker, "/EXPORT:SymEnumSourceLinesW=_AheadLib_SymEnumSourceLinesW,@51")
#pragma comment(linker, "/EXPORT:SymEnumSym=_AheadLib_SymEnumSym,@52")
#pragma comment(linker, "/EXPORT:SymEnumSymbols=_AheadLib_SymEnumSymbols,@53")
#pragma comment(linker, "/EXPORT:SymEnumSymbolsForAddr=_AheadLib_SymEnumSymbolsForAddr,@54")
#pragma comment(linker, "/EXPORT:SymEnumSymbolsForAddrW=_AheadLib_SymEnumSymbolsForAddrW,@55")
#pragma comment(linker, "/EXPORT:SymEnumSymbolsW=_AheadLib_SymEnumSymbolsW,@56")
#pragma comment(linker, "/EXPORT:SymEnumTypes=_AheadLib_SymEnumTypes,@57")
#pragma comment(linker, "/EXPORT:SymEnumTypesByName=_AheadLib_SymEnumTypesByName,@58")
#pragma comment(linker, "/EXPORT:SymEnumTypesByNameW=_AheadLib_SymEnumTypesByNameW,@59")
#pragma comment(linker, "/EXPORT:SymEnumTypesW=_AheadLib_SymEnumTypesW,@60")
#pragma comment(linker, "/EXPORT:SymEnumerateModules64=_AheadLib_SymEnumerateModules64,@61")
#pragma comment(linker, "/EXPORT:SymEnumerateModules=_AheadLib_SymEnumerateModules,@62")
#pragma comment(linker, "/EXPORT:SymEnumerateModulesW64=_AheadLib_SymEnumerateModulesW64,@63")
#pragma comment(linker, "/EXPORT:SymEnumerateSymbols64=_AheadLib_SymEnumerateSymbols64,@64")
#pragma comment(linker, "/EXPORT:SymEnumerateSymbols=_AheadLib_SymEnumerateSymbols,@65")
#pragma comment(linker, "/EXPORT:SymEnumerateSymbolsW64=_AheadLib_SymEnumerateSymbolsW64,@66")
#pragma comment(linker, "/EXPORT:SymEnumerateSymbolsW=_AheadLib_SymEnumerateSymbolsW,@67")
#pragma comment(linker, "/EXPORT:SymFindDebugInfoFile=_AheadLib_SymFindDebugInfoFile,@68")
#pragma comment(linker, "/EXPORT:SymFindDebugInfoFileW=_AheadLib_SymFindDebugInfoFileW,@69")
#pragma comment(linker, "/EXPORT:SymFindExecutableImage=_AheadLib_SymFindExecutableImage,@70")
#pragma comment(linker, "/EXPORT:SymFindExecutableImageW=_AheadLib_SymFindExecutableImageW,@71")
#pragma comment(linker, "/EXPORT:SymFindFileInPath=_AheadLib_SymFindFileInPath,@72")
#pragma comment(linker, "/EXPORT:SymFindFileInPathW=_AheadLib_SymFindFileInPathW,@73")
#pragma comment(linker, "/EXPORT:SymFromAddr=_AheadLib_SymFromAddr,@74")
#pragma comment(linker, "/EXPORT:SymFromAddrW=_AheadLib_SymFromAddrW,@75")
#pragma comment(linker, "/EXPORT:SymFromIndex=_AheadLib_SymFromIndex,@76")
#pragma comment(linker, "/EXPORT:SymFromIndexW=_AheadLib_SymFromIndexW,@77")
#pragma comment(linker, "/EXPORT:SymFromName=_AheadLib_SymFromName,@78")
#pragma comment(linker, "/EXPORT:SymFromNameW=_AheadLib_SymFromNameW,@79")
#pragma comment(linker, "/EXPORT:SymFromToken=_AheadLib_SymFromToken,@80")
#pragma comment(linker, "/EXPORT:SymFromTokenW=_AheadLib_SymFromTokenW,@81")
#pragma comment(linker, "/EXPORT:SymFunctionTableAccess64=_AheadLib_SymFunctionTableAccess64,@82")
#pragma comment(linker, "/EXPORT:SymFunctionTableAccess=_AheadLib_SymFunctionTableAccess,@83")
#pragma comment(linker, "/EXPORT:SymGetFileLineOffsets64=_AheadLib_SymGetFileLineOffsets64,@84")
#pragma comment(linker, "/EXPORT:SymGetHomeDirectory=_AheadLib_SymGetHomeDirectory,@85")
#pragma comment(linker, "/EXPORT:SymGetHomeDirectoryW=_AheadLib_SymGetHomeDirectoryW,@86")
#pragma comment(linker, "/EXPORT:SymGetLineFromAddr64=_AheadLib_SymGetLineFromAddr64,@87")
#pragma comment(linker, "/EXPORT:SymGetLineFromAddr=_AheadLib_SymGetLineFromAddr,@88")
#pragma comment(linker, "/EXPORT:SymGetLineFromAddrW64=_AheadLib_SymGetLineFromAddrW64,@89")
#pragma comment(linker, "/EXPORT:SymGetLineFromName64=_AheadLib_SymGetLineFromName64,@90")
#pragma comment(linker, "/EXPORT:SymGetLineFromName=_AheadLib_SymGetLineFromName,@91")
#pragma comment(linker, "/EXPORT:SymGetLineFromNameW64=_AheadLib_SymGetLineFromNameW64,@92")
#pragma comment(linker, "/EXPORT:SymGetLineNext64=_AheadLib_SymGetLineNext64,@93")
#pragma comment(linker, "/EXPORT:SymGetLineNext=_AheadLib_SymGetLineNext,@94")
#pragma comment(linker, "/EXPORT:SymGetLineNextW64=_AheadLib_SymGetLineNextW64,@95")
#pragma comment(linker, "/EXPORT:SymGetLinePrev64=_AheadLib_SymGetLinePrev64,@96")
#pragma comment(linker, "/EXPORT:SymGetLinePrev=_AheadLib_SymGetLinePrev,@97")
#pragma comment(linker, "/EXPORT:SymGetLinePrevW64=_AheadLib_SymGetLinePrevW64,@98")
#pragma comment(linker, "/EXPORT:SymGetModuleBase64=_AheadLib_SymGetModuleBase64,@99")
#pragma comment(linker, "/EXPORT:SymGetModuleBase=_AheadLib_SymGetModuleBase,@100")
#pragma comment(linker, "/EXPORT:SymGetModuleInfo64=_AheadLib_SymGetModuleInfo64,@101")
#pragma comment(linker, "/EXPORT:SymGetModuleInfo=_AheadLib_SymGetModuleInfo,@102")
#pragma comment(linker, "/EXPORT:SymGetModuleInfoW64=_AheadLib_SymGetModuleInfoW64,@103")
#pragma comment(linker, "/EXPORT:SymGetModuleInfoW=_AheadLib_SymGetModuleInfoW,@104")
#pragma comment(linker, "/EXPORT:SymGetOmaps=_AheadLib_SymGetOmaps,@105")
#pragma comment(linker, "/EXPORT:SymGetOptions=_AheadLib_SymGetOptions,@106")
#pragma comment(linker, "/EXPORT:SymGetScope=_AheadLib_SymGetScope,@107")
#pragma comment(linker, "/EXPORT:SymGetScopeW=_AheadLib_SymGetScopeW,@108")
#pragma comment(linker, "/EXPORT:SymGetSearchPath=_AheadLib_SymGetSearchPath,@109")
#pragma comment(linker, "/EXPORT:SymGetSearchPathW=_AheadLib_SymGetSearchPathW,@110")
#pragma comment(linker, "/EXPORT:SymGetSourceFile=_AheadLib_SymGetSourceFile,@111")
#pragma comment(linker, "/EXPORT:SymGetSourceFileFromToken=_AheadLib_SymGetSourceFileFromToken,@112")
#pragma comment(linker, "/EXPORT:SymGetSourceFileFromTokenW=_AheadLib_SymGetSourceFileFromTokenW,@113")
#pragma comment(linker, "/EXPORT:SymGetSourceFileToken=_AheadLib_SymGetSourceFileToken,@114")
#pragma comment(linker, "/EXPORT:SymGetSourceFileTokenW=_AheadLib_SymGetSourceFileTokenW,@115")
#pragma comment(linker, "/EXPORT:SymGetSourceFileW=_AheadLib_SymGetSourceFileW,@116")
#pragma comment(linker, "/EXPORT:SymGetSourceVarFromToken=_AheadLib_SymGetSourceVarFromToken,@117")
#pragma comment(linker, "/EXPORT:SymGetSourceVarFromTokenW=_AheadLib_SymGetSourceVarFromTokenW,@118")
#pragma comment(linker, "/EXPORT:SymGetSymFromAddr64=_AheadLib_SymGetSymFromAddr64,@119")
#pragma comment(linker, "/EXPORT:SymGetSymFromAddr=_AheadLib_SymGetSymFromAddr,@120")
#pragma comment(linker, "/EXPORT:SymGetSymFromName64=_AheadLib_SymGetSymFromName64,@121")
#pragma comment(linker, "/EXPORT:SymGetSymFromName=_AheadLib_SymGetSymFromName,@122")
#pragma comment(linker, "/EXPORT:SymGetSymNext64=_AheadLib_SymGetSymNext64,@123")
#pragma comment(linker, "/EXPORT:SymGetSymNext=_AheadLib_SymGetSymNext,@124")
#pragma comment(linker, "/EXPORT:SymGetSymPrev64=_AheadLib_SymGetSymPrev64,@125")
#pragma comment(linker, "/EXPORT:SymGetSymPrev=_AheadLib_SymGetSymPrev,@126")
#pragma comment(linker, "/EXPORT:SymGetSymbolFile=_AheadLib_SymGetSymbolFile,@127")
#pragma comment(linker, "/EXPORT:SymGetSymbolFileW=_AheadLib_SymGetSymbolFileW,@128")
#pragma comment(linker, "/EXPORT:SymGetTypeFromName=_AheadLib_SymGetTypeFromName,@129")
#pragma comment(linker, "/EXPORT:SymGetTypeFromNameW=_AheadLib_SymGetTypeFromNameW,@130")
#pragma comment(linker, "/EXPORT:SymGetTypeInfo=_AheadLib_SymGetTypeInfo,@131")
#pragma comment(linker, "/EXPORT:SymGetTypeInfoEx=_AheadLib_SymGetTypeInfoEx,@132")
#pragma comment(linker, "/EXPORT:SymGetUnwindInfo=_AheadLib_SymGetUnwindInfo,@133")
#pragma comment(linker, "/EXPORT:SymInitialize=_AheadLib_SymInitialize,@134")
#pragma comment(linker, "/EXPORT:SymInitializeW=_AheadLib_SymInitializeW,@135")
#pragma comment(linker, "/EXPORT:SymLoadModule64=_AheadLib_SymLoadModule64,@136")
#pragma comment(linker, "/EXPORT:SymLoadModule=_AheadLib_SymLoadModule,@137")
#pragma comment(linker, "/EXPORT:SymLoadModuleEx=_AheadLib_SymLoadModuleEx,@138")
#pragma comment(linker, "/EXPORT:SymLoadModuleExW=_AheadLib_SymLoadModuleExW,@139")
#pragma comment(linker, "/EXPORT:SymMatchFileName=_AheadLib_SymMatchFileName,@140")
#pragma comment(linker, "/EXPORT:SymMatchFileNameW=_AheadLib_SymMatchFileNameW,@141")
#pragma comment(linker, "/EXPORT:SymMatchString=_AheadLib_SymMatchString,@142")
#pragma comment(linker, "/EXPORT:SymMatchStringA=_AheadLib_SymMatchStringA,@143")
#pragma comment(linker, "/EXPORT:SymMatchStringW=_AheadLib_SymMatchStringW,@144")
#pragma comment(linker, "/EXPORT:SymNext=_AheadLib_SymNext,@145")
#pragma comment(linker, "/EXPORT:SymNextW=_AheadLib_SymNextW,@146")
#pragma comment(linker, "/EXPORT:SymPrev=_AheadLib_SymPrev,@147")
#pragma comment(linker, "/EXPORT:SymPrevW=_AheadLib_SymPrevW,@148")
#pragma comment(linker, "/EXPORT:SymRefreshModuleList=_AheadLib_SymRefreshModuleList,@149")
#pragma comment(linker, "/EXPORT:SymRegisterCallback64=_AheadLib_SymRegisterCallback64,@150")
#pragma comment(linker, "/EXPORT:SymRegisterCallback=_AheadLib_SymRegisterCallback,@151")
#pragma comment(linker, "/EXPORT:SymRegisterCallbackW64=_AheadLib_SymRegisterCallbackW64,@152")
#pragma comment(linker, "/EXPORT:SymRegisterFunctionEntryCallback64=_AheadLib_SymRegisterFunctionEntryCallback64,@153")
#pragma comment(linker, "/EXPORT:SymRegisterFunctionEntryCallback=_AheadLib_SymRegisterFunctionEntryCallback,@154")
#pragma comment(linker, "/EXPORT:SymSearch=_AheadLib_SymSearch,@155")
#pragma comment(linker, "/EXPORT:SymSearchW=_AheadLib_SymSearchW,@156")
#pragma comment(linker, "/EXPORT:SymSetContext=_AheadLib_SymSetContext,@157")
#pragma comment(linker, "/EXPORT:SymSetHomeDirectory=_AheadLib_SymSetHomeDirectory,@158")
#pragma comment(linker, "/EXPORT:SymSetHomeDirectoryW=_AheadLib_SymSetHomeDirectoryW,@159")
#pragma comment(linker, "/EXPORT:SymSetOptions=_AheadLib_SymSetOptions,@160")
#pragma comment(linker, "/EXPORT:SymSetParentWindow=_AheadLib_SymSetParentWindow,@161")
#pragma comment(linker, "/EXPORT:SymSetScopeFromAddr=_AheadLib_SymSetScopeFromAddr,@162")
#pragma comment(linker, "/EXPORT:SymSetScopeFromIndex=_AheadLib_SymSetScopeFromIndex,@163")
#pragma comment(linker, "/EXPORT:SymSetSearchPath=_AheadLib_SymSetSearchPath,@164")
#pragma comment(linker, "/EXPORT:SymSetSearchPathW=_AheadLib_SymSetSearchPathW,@165")
#pragma comment(linker, "/EXPORT:SymSrvDeltaName=_AheadLib_SymSrvDeltaName,@166")
#pragma comment(linker, "/EXPORT:SymSrvDeltaNameW=_AheadLib_SymSrvDeltaNameW,@167")
#pragma comment(linker, "/EXPORT:SymSrvGetFileIndexInfo=_AheadLib_SymSrvGetFileIndexInfo,@168")
#pragma comment(linker, "/EXPORT:SymSrvGetFileIndexInfoW=_AheadLib_SymSrvGetFileIndexInfoW,@169")
#pragma comment(linker, "/EXPORT:SymSrvGetFileIndexString=_AheadLib_SymSrvGetFileIndexString,@170")
#pragma comment(linker, "/EXPORT:SymSrvGetFileIndexStringW=_AheadLib_SymSrvGetFileIndexStringW,@171")
#pragma comment(linker, "/EXPORT:SymSrvGetFileIndexes=_AheadLib_SymSrvGetFileIndexes,@172")
#pragma comment(linker, "/EXPORT:SymSrvGetFileIndexesW=_AheadLib_SymSrvGetFileIndexesW,@173")
#pragma comment(linker, "/EXPORT:SymSrvGetSupplement=_AheadLib_SymSrvGetSupplement,@174")
#pragma comment(linker, "/EXPORT:SymSrvGetSupplementW=_AheadLib_SymSrvGetSupplementW,@175")
#pragma comment(linker, "/EXPORT:SymSrvIsStore=_AheadLib_SymSrvIsStore,@176")
#pragma comment(linker, "/EXPORT:SymSrvIsStoreW=_AheadLib_SymSrvIsStoreW,@177")
#pragma comment(linker, "/EXPORT:SymSrvStoreFile=_AheadLib_SymSrvStoreFile,@178")
#pragma comment(linker, "/EXPORT:SymSrvStoreFileW=_AheadLib_SymSrvStoreFileW,@179")
#pragma comment(linker, "/EXPORT:SymSrvStoreSupplement=_AheadLib_SymSrvStoreSupplement,@180")
#pragma comment(linker, "/EXPORT:SymSrvStoreSupplementW=_AheadLib_SymSrvStoreSupplementW,@181")
#pragma comment(linker, "/EXPORT:SymUnDName64=_AheadLib_SymUnDName64,@182")
#pragma comment(linker, "/EXPORT:SymUnDName=_AheadLib_SymUnDName,@183")
#pragma comment(linker, "/EXPORT:SymUnloadModule64=_AheadLib_SymUnloadModule64,@184")
#pragma comment(linker, "/EXPORT:SymUnloadModule=_AheadLib_SymUnloadModule,@185")
#pragma comment(linker, "/EXPORT:UnDecorateSymbolName=_AheadLib_UnDecorateSymbolName,@186")
#pragma comment(linker, "/EXPORT:UnDecorateSymbolNameW=_AheadLib_UnDecorateSymbolNameW,@187")
#pragma comment(linker, "/EXPORT:UnmapDebugInformation=_AheadLib_UnmapDebugInformation,@188")
#pragma comment(linker, "/EXPORT:WinDbgExtensionDllInit=_AheadLib_WinDbgExtensionDllInit,@189")
#pragma comment(linker, "/EXPORT:block=_AheadLib_block,@190")
#pragma comment(linker, "/EXPORT:chksym=_AheadLib_chksym,@191")
#pragma comment(linker, "/EXPORT:dbghelp=_AheadLib_dbghelp,@192")
#pragma comment(linker, "/EXPORT:dh=_AheadLib_dh,@193")
#pragma comment(linker, "/EXPORT:fptr=_AheadLib_fptr,@194")
#pragma comment(linker, "/EXPORT:homedir=_AheadLib_homedir,@195")
#pragma comment(linker, "/EXPORT:itoldyouso=_AheadLib_itoldyouso,@196")
#pragma comment(linker, "/EXPORT:lmi=_AheadLib_lmi,@197")
#pragma comment(linker, "/EXPORT:lminfo=_AheadLib_lminfo,@198")
#pragma comment(linker, "/EXPORT:omap=_AheadLib_omap,@199")
#pragma comment(linker, "/EXPORT:srcfiles=_AheadLib_srcfiles,@200")
#pragma comment(linker, "/EXPORT:stack_force_ebp=_AheadLib_stack_force_ebp,@201")
#pragma comment(linker, "/EXPORT:stackdbg=_AheadLib_stackdbg,@202")
#pragma comment(linker, "/EXPORT:sym=_AheadLib_sym,@203")
#pragma comment(linker, "/EXPORT:symsrv=_AheadLib_symsrv,@204")
#pragma comment(linker, "/EXPORT:vc7fpo=_AheadLib_vc7fpo,@205")
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 原函数地址指针
PVOID pfnSymGetOmapBlockBase;
PVOID pfnDbgHelpCreateUserDump;
PVOID pfnDbgHelpCreateUserDumpW;
PVOID pfnEnumDirTree;
PVOID pfnEnumDirTreeW;
PVOID pfnEnumerateLoadedModules64;
PVOID pfnEnumerateLoadedModules;
PVOID pfnEnumerateLoadedModulesEx;
PVOID pfnEnumerateLoadedModulesExW;
PVOID pfnEnumerateLoadedModulesW64;
PVOID pfnExtensionApiVersion;
PVOID pfnFindDebugInfoFile;
PVOID pfnFindDebugInfoFileEx;
PVOID pfnFindDebugInfoFileExW;
PVOID pfnFindExecutableImage;
PVOID pfnFindExecutableImageEx;
PVOID pfnFindExecutableImageExW;
PVOID pfnFindFileInPath;
PVOID pfnFindFileInSearchPath;
PVOID pfnGetTimestampForLoadedLibrary;
PVOID pfnImageDirectoryEntryToData;
PVOID pfnImageDirectoryEntryToDataEx;
PVOID pfnImageNtHeader;
PVOID pfnImageRvaToSection;
PVOID pfnImageRvaToVa;
PVOID pfnImagehlpApiVersion;
PVOID pfnImagehlpApiVersionEx;
PVOID pfnMakeSureDirectoryPathExists;
PVOID pfnMapDebugInformation;
PVOID pfnMiniDumpReadDumpStream;
PVOID pfnMiniDumpWriteDump;
PVOID pfnSearchTreeForFile;
PVOID pfnSearchTreeForFileW;
PVOID pfnStackWalk64;
PVOID pfnStackWalk;
PVOID pfnSymAddSourceStream;
PVOID pfnSymAddSourceStreamA;
PVOID pfnSymAddSourceStreamW;
PVOID pfnSymAddSymbol;
PVOID pfnSymAddSymbolW;
PVOID pfnSymCleanup;
PVOID pfnSymDeleteSymbol;
PVOID pfnSymDeleteSymbolW;
PVOID pfnSymEnumLines;
PVOID pfnSymEnumLinesW;
PVOID pfnSymEnumProcesses;
PVOID pfnSymEnumSourceFileTokens;
PVOID pfnSymEnumSourceFiles;
PVOID pfnSymEnumSourceFilesW;
PVOID pfnSymEnumSourceLines;
PVOID pfnSymEnumSourceLinesW;
PVOID pfnSymEnumSym;
PVOID pfnSymEnumSymbols;
PVOID pfnSymEnumSymbolsForAddr;
PVOID pfnSymEnumSymbolsForAddrW;
PVOID pfnSymEnumSymbolsW;
PVOID pfnSymEnumTypes;
PVOID pfnSymEnumTypesByName;
PVOID pfnSymEnumTypesByNameW;
PVOID pfnSymEnumTypesW;
PVOID pfnSymEnumerateModules64;
PVOID pfnSymEnumerateModules;
PVOID pfnSymEnumerateModulesW64;
PVOID pfnSymEnumerateSymbols64;
PVOID pfnSymEnumerateSymbols;
PVOID pfnSymEnumerateSymbolsW64;
PVOID pfnSymEnumerateSymbolsW;
PVOID pfnSymFindDebugInfoFile;
PVOID pfnSymFindDebugInfoFileW;
PVOID pfnSymFindExecutableImage;
PVOID pfnSymFindExecutableImageW;
PVOID pfnSymFindFileInPath;
PVOID pfnSymFindFileInPathW;
PVOID pfnSymFromAddr;
PVOID pfnSymFromAddrW;
PVOID pfnSymFromIndex;
PVOID pfnSymFromIndexW;
PVOID pfnSymFromName;
PVOID pfnSymFromNameW;
PVOID pfnSymFromToken;
PVOID pfnSymFromTokenW;
PVOID pfnSymFunctionTableAccess64;
PVOID pfnSymFunctionTableAccess;
PVOID pfnSymGetFileLineOffsets64;
PVOID pfnSymGetHomeDirectory;
PVOID pfnSymGetHomeDirectoryW;
PVOID pfnSymGetLineFromAddr64;
PVOID pfnSymGetLineFromAddr;
PVOID pfnSymGetLineFromAddrW64;
PVOID pfnSymGetLineFromName64;
PVOID pfnSymGetLineFromName;
PVOID pfnSymGetLineFromNameW64;
PVOID pfnSymGetLineNext64;
PVOID pfnSymGetLineNext;
PVOID pfnSymGetLineNextW64;
PVOID pfnSymGetLinePrev64;
PVOID pfnSymGetLinePrev;
PVOID pfnSymGetLinePrevW64;
PVOID pfnSymGetModuleBase64;
PVOID pfnSymGetModuleBase;
PVOID pfnSymGetModuleInfo64;
PVOID pfnSymGetModuleInfo;
PVOID pfnSymGetModuleInfoW64;
PVOID pfnSymGetModuleInfoW;
PVOID pfnSymGetOmaps;
PVOID pfnSymGetOptions;
PVOID pfnSymGetScope;
PVOID pfnSymGetScopeW;
PVOID pfnSymGetSearchPath;
PVOID pfnSymGetSearchPathW;
PVOID pfnSymGetSourceFile;
PVOID pfnSymGetSourceFileFromToken;
PVOID pfnSymGetSourceFileFromTokenW;
PVOID pfnSymGetSourceFileToken;
PVOID pfnSymGetSourceFileTokenW;
PVOID pfnSymGetSourceFileW;
PVOID pfnSymGetSourceVarFromToken;
PVOID pfnSymGetSourceVarFromTokenW;
PVOID pfnSymGetSymFromAddr64;
PVOID pfnSymGetSymFromAddr;
PVOID pfnSymGetSymFromName64;
PVOID pfnSymGetSymFromName;
PVOID pfnSymGetSymNext64;
PVOID pfnSymGetSymNext;
PVOID pfnSymGetSymPrev64;
PVOID pfnSymGetSymPrev;
PVOID pfnSymGetSymbolFile;
PVOID pfnSymGetSymbolFileW;
PVOID pfnSymGetTypeFromName;
PVOID pfnSymGetTypeFromNameW;
PVOID pfnSymGetTypeInfo;
PVOID pfnSymGetTypeInfoEx;
PVOID pfnSymGetUnwindInfo;
PVOID pfnSymInitialize;
PVOID pfnSymInitializeW;
PVOID pfnSymLoadModule64;
PVOID pfnSymLoadModule;
PVOID pfnSymLoadModuleEx;
PVOID pfnSymLoadModuleExW;
PVOID pfnSymMatchFileName;
PVOID pfnSymMatchFileNameW;
PVOID pfnSymMatchString;
PVOID pfnSymMatchStringA;
PVOID pfnSymMatchStringW;
PVOID pfnSymNext;
PVOID pfnSymNextW;
PVOID pfnSymPrev;
PVOID pfnSymPrevW;
PVOID pfnSymRefreshModuleList;
PVOID pfnSymRegisterCallback64;
PVOID pfnSymRegisterCallback;
PVOID pfnSymRegisterCallbackW64;
PVOID pfnSymRegisterFunctionEntryCallback64;
PVOID pfnSymRegisterFunctionEntryCallback;
PVOID pfnSymSearch;
PVOID pfnSymSearchW;
PVOID pfnSymSetContext;
PVOID pfnSymSetHomeDirectory;
PVOID pfnSymSetHomeDirectoryW;
PVOID pfnSymSetOptions;
PVOID pfnSymSetParentWindow;
PVOID pfnSymSetScopeFromAddr;
PVOID pfnSymSetScopeFromIndex;
PVOID pfnSymSetSearchPath;
PVOID pfnSymSetSearchPathW;
PVOID pfnSymSrvDeltaName;
PVOID pfnSymSrvDeltaNameW;
PVOID pfnSymSrvGetFileIndexInfo;
PVOID pfnSymSrvGetFileIndexInfoW;
PVOID pfnSymSrvGetFileIndexString;
PVOID pfnSymSrvGetFileIndexStringW;
PVOID pfnSymSrvGetFileIndexes;
PVOID pfnSymSrvGetFileIndexesW;
PVOID pfnSymSrvGetSupplement;
PVOID pfnSymSrvGetSupplementW;
PVOID pfnSymSrvIsStore;
PVOID pfnSymSrvIsStoreW;
PVOID pfnSymSrvStoreFile;
PVOID pfnSymSrvStoreFileW;
PVOID pfnSymSrvStoreSupplement;
PVOID pfnSymSrvStoreSupplementW;
PVOID pfnSymUnDName64;
PVOID pfnSymUnDName;
PVOID pfnSymUnloadModule64;
PVOID pfnSymUnloadModule;
PVOID pfnUnDecorateSymbolName;
PVOID pfnUnDecorateSymbolNameW;
PVOID pfnUnmapDebugInformation;
PVOID pfnWinDbgExtensionDllInit;
PVOID pfnblock;
PVOID pfnchksym;
PVOID pfndbghelp;
PVOID pfndh;
PVOID pfnfptr;
PVOID pfnhomedir;
PVOID pfnitoldyouso;
PVOID pfnlmi;
PVOID pfnlminfo;
PVOID pfnomap;
PVOID pfnsrcfiles;
PVOID pfnstack_force_ebp;
PVOID pfnstackdbg;
PVOID pfnsym;
PVOID pfnsymsrv;
PVOID pfnvc7fpo;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 宏定义
#define EXTERNC extern "C"
#define NAKED __declspec(naked)
#define EXPORT __declspec(dllexport)

#define ALCPP EXPORT NAKED
#define ALSTD EXTERNC EXPORT NAKED void __stdcall
#define ALCFAST EXTERNC EXPORT NAKED void __fastcall
#define ALCDECL EXTERNC NAKED void __cdecl
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AheadLib 命名空间
namespace AheadLib
{
	HMODULE m_hModule = NULL;	// 原始模块句柄
	DWORD m_dwReturn[205] = {0};	// 原始函数返回地址


	// 获取原始函数地址
	FARPROC WINAPI GetAddress(PCSTR pszProcName)
	{
		FARPROC fpAddress;
		CHAR szProcName[16];
		TCHAR tzTemp[MAX_PATH];

		fpAddress = GetProcAddress(m_hModule, pszProcName);
		if (fpAddress == NULL)
		{
			if (HIWORD(pszProcName) == 0)
			{
				wsprintfA(szProcName, "%d", pszProcName);
				pszProcName = szProcName;
			}

			wsprintf(tzTemp, TEXT("无法找到函数 %hs，程序无法正常运行。"), pszProcName);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_ICONSTOP);
			ExitProcess(-2);
		}

		return fpAddress;
	}

	// 初始化原始函数地址指针
	inline VOID WINAPI InitializeAddresses()
	{
		pfnSymGetOmapBlockBase = GetAddress("SymGetOmapBlockBase");
		pfnDbgHelpCreateUserDump = GetAddress("DbgHelpCreateUserDump");
		pfnDbgHelpCreateUserDumpW = GetAddress("DbgHelpCreateUserDumpW");
		pfnEnumDirTree = GetAddress("EnumDirTree");
		pfnEnumDirTreeW = GetAddress("EnumDirTreeW");
		pfnEnumerateLoadedModules64 = GetAddress("EnumerateLoadedModules64");
		pfnEnumerateLoadedModules = GetAddress("EnumerateLoadedModules");
		pfnEnumerateLoadedModulesEx = GetAddress("EnumerateLoadedModulesEx");
		pfnEnumerateLoadedModulesExW = GetAddress("EnumerateLoadedModulesExW");
		pfnEnumerateLoadedModulesW64 = GetAddress("EnumerateLoadedModulesW64");
		pfnExtensionApiVersion = GetAddress("ExtensionApiVersion");
		pfnFindDebugInfoFile = GetAddress("FindDebugInfoFile");
		pfnFindDebugInfoFileEx = GetAddress("FindDebugInfoFileEx");
		pfnFindDebugInfoFileExW = GetAddress("FindDebugInfoFileExW");
		pfnFindExecutableImage = GetAddress("FindExecutableImage");
		pfnFindExecutableImageEx = GetAddress("FindExecutableImageEx");
		pfnFindExecutableImageExW = GetAddress("FindExecutableImageExW");
		pfnFindFileInPath = GetAddress("FindFileInPath");
		pfnFindFileInSearchPath = GetAddress("FindFileInSearchPath");
		pfnGetTimestampForLoadedLibrary = GetAddress("GetTimestampForLoadedLibrary");
		pfnImageDirectoryEntryToData = GetAddress("ImageDirectoryEntryToData");
		pfnImageDirectoryEntryToDataEx = GetAddress("ImageDirectoryEntryToDataEx");
		pfnImageNtHeader = GetAddress("ImageNtHeader");
		pfnImageRvaToSection = GetAddress("ImageRvaToSection");
		pfnImageRvaToVa = GetAddress("ImageRvaToVa");
		pfnImagehlpApiVersion = GetAddress("ImagehlpApiVersion");
		pfnImagehlpApiVersionEx = GetAddress("ImagehlpApiVersionEx");
		pfnMakeSureDirectoryPathExists = GetAddress("MakeSureDirectoryPathExists");
		pfnMapDebugInformation = GetAddress("MapDebugInformation");
		pfnMiniDumpReadDumpStream = GetAddress("MiniDumpReadDumpStream");
		pfnMiniDumpWriteDump = GetAddress("MiniDumpWriteDump");
		pfnSearchTreeForFile = GetAddress("SearchTreeForFile");
		pfnSearchTreeForFileW = GetAddress("SearchTreeForFileW");
		pfnStackWalk64 = GetAddress("StackWalk64");
		pfnStackWalk = GetAddress("StackWalk");
		pfnSymAddSourceStream = GetAddress("SymAddSourceStream");
		pfnSymAddSourceStreamA = GetAddress("SymAddSourceStreamA");
		pfnSymAddSourceStreamW = GetAddress("SymAddSourceStreamW");
		pfnSymAddSymbol = GetAddress("SymAddSymbol");
		pfnSymAddSymbolW = GetAddress("SymAddSymbolW");
		pfnSymCleanup = GetAddress("SymCleanup");
		pfnSymDeleteSymbol = GetAddress("SymDeleteSymbol");
		pfnSymDeleteSymbolW = GetAddress("SymDeleteSymbolW");
		pfnSymEnumLines = GetAddress("SymEnumLines");
		pfnSymEnumLinesW = GetAddress("SymEnumLinesW");
		pfnSymEnumProcesses = GetAddress("SymEnumProcesses");
		pfnSymEnumSourceFileTokens = GetAddress("SymEnumSourceFileTokens");
		pfnSymEnumSourceFiles = GetAddress("SymEnumSourceFiles");
		pfnSymEnumSourceFilesW = GetAddress("SymEnumSourceFilesW");
		pfnSymEnumSourceLines = GetAddress("SymEnumSourceLines");
		pfnSymEnumSourceLinesW = GetAddress("SymEnumSourceLinesW");
		pfnSymEnumSym = GetAddress("SymEnumSym");
		pfnSymEnumSymbols = GetAddress("SymEnumSymbols");
		pfnSymEnumSymbolsForAddr = GetAddress("SymEnumSymbolsForAddr");
		pfnSymEnumSymbolsForAddrW = GetAddress("SymEnumSymbolsForAddrW");
		pfnSymEnumSymbolsW = GetAddress("SymEnumSymbolsW");
		pfnSymEnumTypes = GetAddress("SymEnumTypes");
		pfnSymEnumTypesByName = GetAddress("SymEnumTypesByName");
		pfnSymEnumTypesByNameW = GetAddress("SymEnumTypesByNameW");
		pfnSymEnumTypesW = GetAddress("SymEnumTypesW");
		pfnSymEnumerateModules64 = GetAddress("SymEnumerateModules64");
		pfnSymEnumerateModules = GetAddress("SymEnumerateModules");
		pfnSymEnumerateModulesW64 = GetAddress("SymEnumerateModulesW64");
		pfnSymEnumerateSymbols64 = GetAddress("SymEnumerateSymbols64");
		pfnSymEnumerateSymbols = GetAddress("SymEnumerateSymbols");
		pfnSymEnumerateSymbolsW64 = GetAddress("SymEnumerateSymbolsW64");
		pfnSymEnumerateSymbolsW = GetAddress("SymEnumerateSymbolsW");
		pfnSymFindDebugInfoFile = GetAddress("SymFindDebugInfoFile");
		pfnSymFindDebugInfoFileW = GetAddress("SymFindDebugInfoFileW");
		pfnSymFindExecutableImage = GetAddress("SymFindExecutableImage");
		pfnSymFindExecutableImageW = GetAddress("SymFindExecutableImageW");
		pfnSymFindFileInPath = GetAddress("SymFindFileInPath");
		pfnSymFindFileInPathW = GetAddress("SymFindFileInPathW");
		pfnSymFromAddr = GetAddress("SymFromAddr");
		pfnSymFromAddrW = GetAddress("SymFromAddrW");
		pfnSymFromIndex = GetAddress("SymFromIndex");
		pfnSymFromIndexW = GetAddress("SymFromIndexW");
		pfnSymFromName = GetAddress("SymFromName");
		pfnSymFromNameW = GetAddress("SymFromNameW");
		pfnSymFromToken = GetAddress("SymFromToken");
		pfnSymFromTokenW = GetAddress("SymFromTokenW");
		pfnSymFunctionTableAccess64 = GetAddress("SymFunctionTableAccess64");
		pfnSymFunctionTableAccess = GetAddress("SymFunctionTableAccess");
		pfnSymGetFileLineOffsets64 = GetAddress("SymGetFileLineOffsets64");
		pfnSymGetHomeDirectory = GetAddress("SymGetHomeDirectory");
		pfnSymGetHomeDirectoryW = GetAddress("SymGetHomeDirectoryW");
		pfnSymGetLineFromAddr64 = GetAddress("SymGetLineFromAddr64");
		pfnSymGetLineFromAddr = GetAddress("SymGetLineFromAddr");
		pfnSymGetLineFromAddrW64 = GetAddress("SymGetLineFromAddrW64");
		pfnSymGetLineFromName64 = GetAddress("SymGetLineFromName64");
		pfnSymGetLineFromName = GetAddress("SymGetLineFromName");
		pfnSymGetLineFromNameW64 = GetAddress("SymGetLineFromNameW64");
		pfnSymGetLineNext64 = GetAddress("SymGetLineNext64");
		pfnSymGetLineNext = GetAddress("SymGetLineNext");
		pfnSymGetLineNextW64 = GetAddress("SymGetLineNextW64");
		pfnSymGetLinePrev64 = GetAddress("SymGetLinePrev64");
		pfnSymGetLinePrev = GetAddress("SymGetLinePrev");
		pfnSymGetLinePrevW64 = GetAddress("SymGetLinePrevW64");
		pfnSymGetModuleBase64 = GetAddress("SymGetModuleBase64");
		pfnSymGetModuleBase = GetAddress("SymGetModuleBase");
		pfnSymGetModuleInfo64 = GetAddress("SymGetModuleInfo64");
		pfnSymGetModuleInfo = GetAddress("SymGetModuleInfo");
		pfnSymGetModuleInfoW64 = GetAddress("SymGetModuleInfoW64");
		pfnSymGetModuleInfoW = GetAddress("SymGetModuleInfoW");
		pfnSymGetOmaps = GetAddress("SymGetOmaps");
		pfnSymGetOptions = GetAddress("SymGetOptions");
		pfnSymGetScope = GetAddress("SymGetScope");
		pfnSymGetScopeW = GetAddress("SymGetScopeW");
		pfnSymGetSearchPath = GetAddress("SymGetSearchPath");
		pfnSymGetSearchPathW = GetAddress("SymGetSearchPathW");
		pfnSymGetSourceFile = GetAddress("SymGetSourceFile");
		pfnSymGetSourceFileFromToken = GetAddress("SymGetSourceFileFromToken");
		pfnSymGetSourceFileFromTokenW = GetAddress("SymGetSourceFileFromTokenW");
		pfnSymGetSourceFileToken = GetAddress("SymGetSourceFileToken");
		pfnSymGetSourceFileTokenW = GetAddress("SymGetSourceFileTokenW");
		pfnSymGetSourceFileW = GetAddress("SymGetSourceFileW");
		pfnSymGetSourceVarFromToken = GetAddress("SymGetSourceVarFromToken");
		pfnSymGetSourceVarFromTokenW = GetAddress("SymGetSourceVarFromTokenW");
		pfnSymGetSymFromAddr64 = GetAddress("SymGetSymFromAddr64");
		pfnSymGetSymFromAddr = GetAddress("SymGetSymFromAddr");
		pfnSymGetSymFromName64 = GetAddress("SymGetSymFromName64");
		pfnSymGetSymFromName = GetAddress("SymGetSymFromName");
		pfnSymGetSymNext64 = GetAddress("SymGetSymNext64");
		pfnSymGetSymNext = GetAddress("SymGetSymNext");
		pfnSymGetSymPrev64 = GetAddress("SymGetSymPrev64");
		pfnSymGetSymPrev = GetAddress("SymGetSymPrev");
		pfnSymGetSymbolFile = GetAddress("SymGetSymbolFile");
		pfnSymGetSymbolFileW = GetAddress("SymGetSymbolFileW");
		pfnSymGetTypeFromName = GetAddress("SymGetTypeFromName");
		pfnSymGetTypeFromNameW = GetAddress("SymGetTypeFromNameW");
		pfnSymGetTypeInfo = GetAddress("SymGetTypeInfo");
		pfnSymGetTypeInfoEx = GetAddress("SymGetTypeInfoEx");
		pfnSymGetUnwindInfo = GetAddress("SymGetUnwindInfo");
		pfnSymInitialize = GetAddress("SymInitialize");
		pfnSymInitializeW = GetAddress("SymInitializeW");
		pfnSymLoadModule64 = GetAddress("SymLoadModule64");
		pfnSymLoadModule = GetAddress("SymLoadModule");
		pfnSymLoadModuleEx = GetAddress("SymLoadModuleEx");
		pfnSymLoadModuleExW = GetAddress("SymLoadModuleExW");
		pfnSymMatchFileName = GetAddress("SymMatchFileName");
		pfnSymMatchFileNameW = GetAddress("SymMatchFileNameW");
		pfnSymMatchString = GetAddress("SymMatchString");
		pfnSymMatchStringA = GetAddress("SymMatchStringA");
		pfnSymMatchStringW = GetAddress("SymMatchStringW");
		pfnSymNext = GetAddress("SymNext");
		pfnSymNextW = GetAddress("SymNextW");
		pfnSymPrev = GetAddress("SymPrev");
		pfnSymPrevW = GetAddress("SymPrevW");
		pfnSymRefreshModuleList = GetAddress("SymRefreshModuleList");
		pfnSymRegisterCallback64 = GetAddress("SymRegisterCallback64");
		pfnSymRegisterCallback = GetAddress("SymRegisterCallback");
		pfnSymRegisterCallbackW64 = GetAddress("SymRegisterCallbackW64");
		pfnSymRegisterFunctionEntryCallback64 = GetAddress("SymRegisterFunctionEntryCallback64");
		pfnSymRegisterFunctionEntryCallback = GetAddress("SymRegisterFunctionEntryCallback");
		pfnSymSearch = GetAddress("SymSearch");
		pfnSymSearchW = GetAddress("SymSearchW");
		pfnSymSetContext = GetAddress("SymSetContext");
		pfnSymSetHomeDirectory = GetAddress("SymSetHomeDirectory");
		pfnSymSetHomeDirectoryW = GetAddress("SymSetHomeDirectoryW");
		pfnSymSetOptions = GetAddress("SymSetOptions");
		pfnSymSetParentWindow = GetAddress("SymSetParentWindow");
		pfnSymSetScopeFromAddr = GetAddress("SymSetScopeFromAddr");
		pfnSymSetScopeFromIndex = GetAddress("SymSetScopeFromIndex");
		pfnSymSetSearchPath = GetAddress("SymSetSearchPath");
		pfnSymSetSearchPathW = GetAddress("SymSetSearchPathW");
		pfnSymSrvDeltaName = GetAddress("SymSrvDeltaName");
		pfnSymSrvDeltaNameW = GetAddress("SymSrvDeltaNameW");
		pfnSymSrvGetFileIndexInfo = GetAddress("SymSrvGetFileIndexInfo");
		pfnSymSrvGetFileIndexInfoW = GetAddress("SymSrvGetFileIndexInfoW");
		pfnSymSrvGetFileIndexString = GetAddress("SymSrvGetFileIndexString");
		pfnSymSrvGetFileIndexStringW = GetAddress("SymSrvGetFileIndexStringW");
		pfnSymSrvGetFileIndexes = GetAddress("SymSrvGetFileIndexes");
		pfnSymSrvGetFileIndexesW = GetAddress("SymSrvGetFileIndexesW");
		pfnSymSrvGetSupplement = GetAddress("SymSrvGetSupplement");
		pfnSymSrvGetSupplementW = GetAddress("SymSrvGetSupplementW");
		pfnSymSrvIsStore = GetAddress("SymSrvIsStore");
		pfnSymSrvIsStoreW = GetAddress("SymSrvIsStoreW");
		pfnSymSrvStoreFile = GetAddress("SymSrvStoreFile");
		pfnSymSrvStoreFileW = GetAddress("SymSrvStoreFileW");
		pfnSymSrvStoreSupplement = GetAddress("SymSrvStoreSupplement");
		pfnSymSrvStoreSupplementW = GetAddress("SymSrvStoreSupplementW");
		pfnSymUnDName64 = GetAddress("SymUnDName64");
		pfnSymUnDName = GetAddress("SymUnDName");
		pfnSymUnloadModule64 = GetAddress("SymUnloadModule64");
		pfnSymUnloadModule = GetAddress("SymUnloadModule");
		pfnUnDecorateSymbolName = GetAddress("UnDecorateSymbolName");
		pfnUnDecorateSymbolNameW = GetAddress("UnDecorateSymbolNameW");
		pfnUnmapDebugInformation = GetAddress("UnmapDebugInformation");
		pfnWinDbgExtensionDllInit = GetAddress("WinDbgExtensionDllInit");
		pfnblock = GetAddress("block");
		pfnchksym = GetAddress("chksym");
		pfndbghelp = GetAddress("dbghelp");
		pfndh = GetAddress("dh");
		pfnfptr = GetAddress("fptr");
		pfnhomedir = GetAddress("homedir");
		pfnitoldyouso = GetAddress("itoldyouso");
		pfnlmi = GetAddress("lmi");
		pfnlminfo = GetAddress("lminfo");
		pfnomap = GetAddress("omap");
		pfnsrcfiles = GetAddress("srcfiles");
		pfnstack_force_ebp = GetAddress("stack_force_ebp");
		pfnstackdbg = GetAddress("stackdbg");
		pfnsym = GetAddress("sym");
		pfnsymsrv = GetAddress("symsrv");
		pfnvc7fpo = GetAddress("vc7fpo");
	}

	// 加载原始模块
	inline BOOL WINAPI Load()
	{
		TCHAR tzPath[MAX_PATH];
		TCHAR tzTemp[MAX_PATH * 2];

		lstrcpy(tzPath, TEXT("dbghelpOrg.dll"));
		m_hModule = LoadLibrary(tzPath);
		if (m_hModule == NULL)
		{
			wsprintf(tzTemp, TEXT("无法加载 %s，程序无法正常运行。"), tzPath);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_ICONSTOP);
		}
		else
		{
			InitializeAddresses();
		}

		return (m_hModule != NULL);	
	}
		
	// 释放原始模块
	inline VOID WINAPI Free()
	{
		if (m_hModule)
		{
			FreeLibrary(m_hModule);
		}
	}
}
using namespace AheadLib;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 入口函数
BOOL WINAPI DllMain(HMODULE hModule, DWORD dwReason, PVOID pvReserved)
{
	if (dwReason == DLL_PROCESS_ATTACH)
	{
		DisableThreadLibraryCalls(hModule);

		return Load();
	}
	else if (dwReason == DLL_PROCESS_DETACH)
	{
		Free();
	}

	return TRUE;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetOmapBlockBase(void)
{
	__asm JMP pfnSymGetOmapBlockBase;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DbgHelpCreateUserDump(void)
{
	__asm JMP pfnDbgHelpCreateUserDump;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DbgHelpCreateUserDumpW(void)
{
	__asm JMP pfnDbgHelpCreateUserDumpW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_EnumDirTree(void)
{
	__asm JMP pfnEnumDirTree;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_EnumDirTreeW(void)
{
	__asm JMP pfnEnumDirTreeW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_EnumerateLoadedModules64(void)
{
	__asm JMP pfnEnumerateLoadedModules64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_EnumerateLoadedModules(void)
{
	__asm JMP pfnEnumerateLoadedModules;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_EnumerateLoadedModulesEx(void)
{
	__asm JMP pfnEnumerateLoadedModulesEx;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_EnumerateLoadedModulesExW(void)
{
	__asm JMP pfnEnumerateLoadedModulesExW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_EnumerateLoadedModulesW64(void)
{
	__asm JMP pfnEnumerateLoadedModulesW64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ExtensionApiVersion(void)
{
	__asm JMP pfnExtensionApiVersion;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FindDebugInfoFile(void)
{
	__asm JMP pfnFindDebugInfoFile;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FindDebugInfoFileEx(void)
{
	__asm JMP pfnFindDebugInfoFileEx;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FindDebugInfoFileExW(void)
{
	__asm JMP pfnFindDebugInfoFileExW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FindExecutableImage(void)
{
	__asm JMP pfnFindExecutableImage;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FindExecutableImageEx(void)
{
	__asm JMP pfnFindExecutableImageEx;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FindExecutableImageExW(void)
{
	__asm JMP pfnFindExecutableImageExW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FindFileInPath(void)
{
	__asm JMP pfnFindFileInPath;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FindFileInSearchPath(void)
{
	__asm JMP pfnFindFileInSearchPath;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetTimestampForLoadedLibrary(void)
{
	__asm JMP pfnGetTimestampForLoadedLibrary;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ImageDirectoryEntryToData(void)
{
	__asm JMP pfnImageDirectoryEntryToData;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ImageDirectoryEntryToDataEx(void)
{
	__asm JMP pfnImageDirectoryEntryToDataEx;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ImageNtHeader(void)
{
	__asm JMP pfnImageNtHeader;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ImageRvaToSection(void)
{
	__asm JMP pfnImageRvaToSection;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ImageRvaToVa(void)
{
	__asm JMP pfnImageRvaToVa;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ImagehlpApiVersion(void)
{
	__asm JMP pfnImagehlpApiVersion;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ImagehlpApiVersionEx(void)
{
	__asm JMP pfnImagehlpApiVersionEx;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_MakeSureDirectoryPathExists(void)
{
	__asm JMP pfnMakeSureDirectoryPathExists;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_MapDebugInformation(void)
{
	__asm JMP pfnMapDebugInformation;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_MiniDumpReadDumpStream(void)
{
	__asm JMP pfnMiniDumpReadDumpStream;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_MiniDumpWriteDump(void)
{
	__asm JMP pfnMiniDumpWriteDump;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SearchTreeForFile(void)
{
	__asm JMP pfnSearchTreeForFile;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SearchTreeForFileW(void)
{
	__asm JMP pfnSearchTreeForFileW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_StackWalk64(void)
{
	__asm JMP pfnStackWalk64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_StackWalk(void)
{
	__asm JMP pfnStackWalk;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymAddSourceStream(void)
{
	__asm JMP pfnSymAddSourceStream;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymAddSourceStreamA(void)
{
	__asm JMP pfnSymAddSourceStreamA;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymAddSourceStreamW(void)
{
	__asm JMP pfnSymAddSourceStreamW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymAddSymbol(void)
{
	__asm JMP pfnSymAddSymbol;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymAddSymbolW(void)
{
	__asm JMP pfnSymAddSymbolW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymCleanup(void)
{
	__asm JMP pfnSymCleanup;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymDeleteSymbol(void)
{
	__asm JMP pfnSymDeleteSymbol;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymDeleteSymbolW(void)
{
	__asm JMP pfnSymDeleteSymbolW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumLines(void)
{
	__asm JMP pfnSymEnumLines;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumLinesW(void)
{
	__asm JMP pfnSymEnumLinesW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumProcesses(void)
{
	__asm JMP pfnSymEnumProcesses;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumSourceFileTokens(void)
{
	__asm JMP pfnSymEnumSourceFileTokens;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumSourceFiles(void)
{
	__asm JMP pfnSymEnumSourceFiles;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumSourceFilesW(void)
{
	__asm JMP pfnSymEnumSourceFilesW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumSourceLines(void)
{
	__asm JMP pfnSymEnumSourceLines;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumSourceLinesW(void)
{
	__asm JMP pfnSymEnumSourceLinesW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumSym(void)
{
	__asm JMP pfnSymEnumSym;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumSymbols(void)
{
	__asm JMP pfnSymEnumSymbols;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumSymbolsForAddr(void)
{
	__asm JMP pfnSymEnumSymbolsForAddr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumSymbolsForAddrW(void)
{
	__asm JMP pfnSymEnumSymbolsForAddrW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumSymbolsW(void)
{
	__asm JMP pfnSymEnumSymbolsW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumTypes(void)
{
	__asm JMP pfnSymEnumTypes;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumTypesByName(void)
{
	__asm JMP pfnSymEnumTypesByName;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumTypesByNameW(void)
{
	__asm JMP pfnSymEnumTypesByNameW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumTypesW(void)
{
	__asm JMP pfnSymEnumTypesW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumerateModules64(void)
{
	__asm JMP pfnSymEnumerateModules64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumerateModules(void)
{
	__asm JMP pfnSymEnumerateModules;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumerateModulesW64(void)
{
	__asm JMP pfnSymEnumerateModulesW64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumerateSymbols64(void)
{
	__asm JMP pfnSymEnumerateSymbols64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumerateSymbols(void)
{
	__asm JMP pfnSymEnumerateSymbols;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumerateSymbolsW64(void)
{
	__asm JMP pfnSymEnumerateSymbolsW64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymEnumerateSymbolsW(void)
{
	__asm JMP pfnSymEnumerateSymbolsW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFindDebugInfoFile(void)
{
	__asm JMP pfnSymFindDebugInfoFile;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFindDebugInfoFileW(void)
{
	__asm JMP pfnSymFindDebugInfoFileW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFindExecutableImage(void)
{
	__asm JMP pfnSymFindExecutableImage;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFindExecutableImageW(void)
{
	__asm JMP pfnSymFindExecutableImageW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFindFileInPath(void)
{
	__asm JMP pfnSymFindFileInPath;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFindFileInPathW(void)
{
	__asm JMP pfnSymFindFileInPathW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFromAddr(void)
{
	__asm JMP pfnSymFromAddr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFromAddrW(void)
{
	__asm JMP pfnSymFromAddrW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFromIndex(void)
{
	__asm JMP pfnSymFromIndex;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFromIndexW(void)
{
	__asm JMP pfnSymFromIndexW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFromName(void)
{
	__asm JMP pfnSymFromName;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFromNameW(void)
{
	__asm JMP pfnSymFromNameW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFromToken(void)
{
	__asm JMP pfnSymFromToken;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFromTokenW(void)
{
	__asm JMP pfnSymFromTokenW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFunctionTableAccess64(void)
{
	__asm JMP pfnSymFunctionTableAccess64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymFunctionTableAccess(void)
{
	__asm JMP pfnSymFunctionTableAccess;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetFileLineOffsets64(void)
{
	__asm JMP pfnSymGetFileLineOffsets64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetHomeDirectory(void)
{
	__asm JMP pfnSymGetHomeDirectory;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetHomeDirectoryW(void)
{
	__asm JMP pfnSymGetHomeDirectoryW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLineFromAddr64(void)
{
	__asm JMP pfnSymGetLineFromAddr64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLineFromAddr(void)
{
	__asm JMP pfnSymGetLineFromAddr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLineFromAddrW64(void)
{
	__asm JMP pfnSymGetLineFromAddrW64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLineFromName64(void)
{
	__asm JMP pfnSymGetLineFromName64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLineFromName(void)
{
	__asm JMP pfnSymGetLineFromName;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLineFromNameW64(void)
{
	__asm JMP pfnSymGetLineFromNameW64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLineNext64(void)
{
	__asm JMP pfnSymGetLineNext64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLineNext(void)
{
	__asm JMP pfnSymGetLineNext;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLineNextW64(void)
{
	__asm JMP pfnSymGetLineNextW64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLinePrev64(void)
{
	__asm JMP pfnSymGetLinePrev64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLinePrev(void)
{
	__asm JMP pfnSymGetLinePrev;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetLinePrevW64(void)
{
	__asm JMP pfnSymGetLinePrevW64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetModuleBase64(void)
{
	__asm JMP pfnSymGetModuleBase64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetModuleBase(void)
{
	__asm JMP pfnSymGetModuleBase;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetModuleInfo64(void)
{
	__asm JMP pfnSymGetModuleInfo64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetModuleInfo(void)
{
	__asm JMP pfnSymGetModuleInfo;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetModuleInfoW64(void)
{
	__asm JMP pfnSymGetModuleInfoW64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetModuleInfoW(void)
{
	__asm JMP pfnSymGetModuleInfoW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetOmaps(void)
{
	__asm JMP pfnSymGetOmaps;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetOptions(void)
{
	__asm JMP pfnSymGetOptions;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetScope(void)
{
	__asm JMP pfnSymGetScope;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetScopeW(void)
{
	__asm JMP pfnSymGetScopeW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSearchPath(void)
{
	__asm JMP pfnSymGetSearchPath;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSearchPathW(void)
{
	__asm JMP pfnSymGetSearchPathW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSourceFile(void)
{
	__asm JMP pfnSymGetSourceFile;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSourceFileFromToken(void)
{
	__asm JMP pfnSymGetSourceFileFromToken;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSourceFileFromTokenW(void)
{
	__asm JMP pfnSymGetSourceFileFromTokenW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSourceFileToken(void)
{
	__asm JMP pfnSymGetSourceFileToken;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSourceFileTokenW(void)
{
	__asm JMP pfnSymGetSourceFileTokenW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSourceFileW(void)
{
	__asm JMP pfnSymGetSourceFileW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSourceVarFromToken(void)
{
	__asm JMP pfnSymGetSourceVarFromToken;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSourceVarFromTokenW(void)
{
	__asm JMP pfnSymGetSourceVarFromTokenW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSymFromAddr64(void)
{
	__asm JMP pfnSymGetSymFromAddr64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSymFromAddr(void)
{
	__asm JMP pfnSymGetSymFromAddr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSymFromName64(void)
{
	__asm JMP pfnSymGetSymFromName64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSymFromName(void)
{
	__asm JMP pfnSymGetSymFromName;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSymNext64(void)
{
	__asm JMP pfnSymGetSymNext64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSymNext(void)
{
	__asm JMP pfnSymGetSymNext;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSymPrev64(void)
{
	__asm JMP pfnSymGetSymPrev64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSymPrev(void)
{
	__asm JMP pfnSymGetSymPrev;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSymbolFile(void)
{
	__asm JMP pfnSymGetSymbolFile;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetSymbolFileW(void)
{
	__asm JMP pfnSymGetSymbolFileW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetTypeFromName(void)
{
	__asm JMP pfnSymGetTypeFromName;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetTypeFromNameW(void)
{
	__asm JMP pfnSymGetTypeFromNameW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetTypeInfo(void)
{
	__asm JMP pfnSymGetTypeInfo;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetTypeInfoEx(void)
{
	__asm JMP pfnSymGetTypeInfoEx;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymGetUnwindInfo(void)
{
	__asm JMP pfnSymGetUnwindInfo;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymInitialize(void)
{
	__asm JMP pfnSymInitialize;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymInitializeW(void)
{
	__asm JMP pfnSymInitializeW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymLoadModule64(void)
{
	__asm JMP pfnSymLoadModule64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymLoadModule(void)
{
	__asm JMP pfnSymLoadModule;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymLoadModuleEx(void)
{
	__asm JMP pfnSymLoadModuleEx;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymLoadModuleExW(void)
{
	__asm JMP pfnSymLoadModuleExW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymMatchFileName(void)
{
	__asm JMP pfnSymMatchFileName;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymMatchFileNameW(void)
{
	__asm JMP pfnSymMatchFileNameW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymMatchString(void)
{
	__asm JMP pfnSymMatchString;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymMatchStringA(void)
{
	__asm JMP pfnSymMatchStringA;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymMatchStringW(void)
{
	__asm JMP pfnSymMatchStringW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymNext(void)
{
	__asm JMP pfnSymNext;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymNextW(void)
{
	__asm JMP pfnSymNextW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymPrev(void)
{
	__asm JMP pfnSymPrev;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymPrevW(void)
{
	__asm JMP pfnSymPrevW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymRefreshModuleList(void)
{
	__asm JMP pfnSymRefreshModuleList;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymRegisterCallback64(void)
{
	__asm JMP pfnSymRegisterCallback64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymRegisterCallback(void)
{
	__asm JMP pfnSymRegisterCallback;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymRegisterCallbackW64(void)
{
	__asm JMP pfnSymRegisterCallbackW64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymRegisterFunctionEntryCallback64(void)
{
	__asm JMP pfnSymRegisterFunctionEntryCallback64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymRegisterFunctionEntryCallback(void)
{
	__asm JMP pfnSymRegisterFunctionEntryCallback;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSearch(void)
{
	__asm JMP pfnSymSearch;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSearchW(void)
{
	__asm JMP pfnSymSearchW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSetContext(void)
{
	__asm JMP pfnSymSetContext;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSetHomeDirectory(void)
{
	__asm JMP pfnSymSetHomeDirectory;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSetHomeDirectoryW(void)
{
	__asm JMP pfnSymSetHomeDirectoryW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSetOptions(void)
{
	__asm JMP pfnSymSetOptions;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSetParentWindow(void)
{
	__asm JMP pfnSymSetParentWindow;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSetScopeFromAddr(void)
{
	__asm JMP pfnSymSetScopeFromAddr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSetScopeFromIndex(void)
{
	__asm JMP pfnSymSetScopeFromIndex;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSetSearchPath(void)
{
	__asm JMP pfnSymSetSearchPath;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSetSearchPathW(void)
{
	__asm JMP pfnSymSetSearchPathW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvDeltaName(void)
{
	__asm JMP pfnSymSrvDeltaName;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvDeltaNameW(void)
{
	__asm JMP pfnSymSrvDeltaNameW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvGetFileIndexInfo(void)
{
	__asm JMP pfnSymSrvGetFileIndexInfo;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvGetFileIndexInfoW(void)
{
	__asm JMP pfnSymSrvGetFileIndexInfoW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvGetFileIndexString(void)
{
	__asm JMP pfnSymSrvGetFileIndexString;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvGetFileIndexStringW(void)
{
	__asm JMP pfnSymSrvGetFileIndexStringW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvGetFileIndexes(void)
{
	__asm JMP pfnSymSrvGetFileIndexes;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvGetFileIndexesW(void)
{
	__asm JMP pfnSymSrvGetFileIndexesW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvGetSupplement(void)
{
	__asm JMP pfnSymSrvGetSupplement;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvGetSupplementW(void)
{
	__asm JMP pfnSymSrvGetSupplementW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvIsStore(void)
{
	__asm JMP pfnSymSrvIsStore;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvIsStoreW(void)
{
	__asm JMP pfnSymSrvIsStoreW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvStoreFile(void)
{
	__asm JMP pfnSymSrvStoreFile;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvStoreFileW(void)
{
	__asm JMP pfnSymSrvStoreFileW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvStoreSupplement(void)
{
	__asm JMP pfnSymSrvStoreSupplement;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymSrvStoreSupplementW(void)
{
	__asm JMP pfnSymSrvStoreSupplementW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymUnDName64(void)
{
	__asm JMP pfnSymUnDName64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymUnDName(void)
{
	__asm JMP pfnSymUnDName;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymUnloadModule64(void)
{
	__asm JMP pfnSymUnloadModule64;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SymUnloadModule(void)
{
	__asm JMP pfnSymUnloadModule;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_UnDecorateSymbolName(void)
{
	__asm JMP pfnUnDecorateSymbolName;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_UnDecorateSymbolNameW(void)
{
	__asm JMP pfnUnDecorateSymbolNameW;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_UnmapDebugInformation(void)
{
	__asm JMP pfnUnmapDebugInformation;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WinDbgExtensionDllInit(void)
{
	__asm JMP pfnWinDbgExtensionDllInit;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_block(void)
{
	__asm JMP pfnblock;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_chksym(void)
{
	__asm JMP pfnchksym;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_dbghelp(void)
{
	__asm JMP pfndbghelp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_dh(void)
{
	__asm JMP pfndh;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_fptr(void)
{
	__asm JMP pfnfptr;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_homedir(void)
{
	__asm JMP pfnhomedir;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_itoldyouso(void)
{
	__asm JMP pfnitoldyouso;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_lmi(void)
{
	__asm JMP pfnlmi;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_lminfo(void)
{
	__asm JMP pfnlminfo;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_omap(void)
{
	__asm JMP pfnomap;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_srcfiles(void)
{
	__asm JMP pfnsrcfiles;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_stack_force_ebp(void)
{
	__asm JMP pfnstack_force_ebp;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_stackdbg(void)
{
	__asm JMP pfnstackdbg;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sym(void)
{
	__asm JMP pfnsym;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_symsrv(void)
{
	__asm JMP pfnsymsrv;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_vc7fpo(void)
{
	__asm JMP pfnvc7fpo;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
